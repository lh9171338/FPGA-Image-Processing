-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Filter2D is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    src_val_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    src_val_ce0 : OUT STD_LOGIC;
    src_val_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    src_rows_read : IN STD_LOGIC_VECTOR (31 downto 0);
    src_cols_read : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_val_0_V_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_val_0_V_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_val_0_V_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_val_0_V_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_val_0_V_4_read : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_val_1_V_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_val_1_V_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_val_1_V_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_val_1_V_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_val_1_V_4_read : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_val_2_V_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_val_2_V_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_val_2_V_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_val_2_V_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_val_2_V_4_read : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_val_3_V_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_val_3_V_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_val_3_V_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_val_3_V_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_val_3_V_4_read : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_val_4_V_0_read : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_val_4_V_1_read : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_val_4_V_2_read : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_val_4_V_3_read : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_val_4_V_4_read : IN STD_LOGIC_VECTOR (31 downto 0);
    dst_val_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    dst_val_ce0 : OUT STD_LOGIC;
    dst_val_we0 : OUT STD_LOGIC;
    dst_val_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of Filter2D is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv32_FFFFFFFE : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv29_0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000000";
    constant ap_const_lv19_7FFFF : STD_LOGIC_VECTOR (18 downto 0) := "1111111111111111111";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv30_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    constant ap_const_lv19_7F82C : STD_LOGIC_VECTOR (18 downto 0) := "1111111100000101100";
    constant ap_const_lv33_200000 : STD_LOGIC_VECTOR (32 downto 0) := "000000000001000000000000000000000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv19_1F4 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000111110100";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal j_reg_493 : STD_LOGIC_VECTOR (31 downto 0);
    signal LineBuffer_cols_fu_504_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal LineBuffer_cols_reg_1552 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_510_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_1557 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_104_fu_516_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_104_reg_1562 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_105_fu_520_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_105_reg_1567 : STD_LOGIC_VECTOR (18 downto 0);
    signal i_1_fu_533_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_reg_1575 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_106_reg_1580 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_528_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_563_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1585 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_108_fu_569_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_108_reg_1590 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_112_fu_587_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_112_reg_1595 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_109_fu_1286_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_109_reg_1600 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_20_fu_595_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_20_reg_1605 : STD_LOGIC_VECTOR (18 downto 0);
    signal exitcond4_fu_601_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond4_reg_1610 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal j_1_fu_606_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal LineBuffer_val_1_ad_reg_1619 : STD_LOGIC_VECTOR (8 downto 0);
    signal LineBuffer_val_2_ad_reg_1625 : STD_LOGIC_VECTOR (8 downto 0);
    signal LineBuffer_val_3_ad_reg_1631 : STD_LOGIC_VECTOR (8 downto 0);
    signal LineBuffer_val_4_ad_reg_1637 : STD_LOGIC_VECTOR (8 downto 0);
    signal or_cond_fu_690_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_1648 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_1648_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_1648_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_704_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_24_reg_1652 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_24_reg_1652_pp0_iter1_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_24_reg_1652_pp0_iter2_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Val2_7_0_3_fu_801_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_0_3_reg_1657 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_1_4_fu_855_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_1_4_reg_1662 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_2_fu_864_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_2_reg_1667 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_2_1_fu_873_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_2_1_reg_1672 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_2_2_fu_882_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_2_2_reg_1677 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_2_3_fu_891_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_2_3_reg_1682 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_2_4_fu_900_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_2_4_reg_1687 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_3_fu_909_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_3_reg_1692 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_3_3_fu_936_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_3_3_reg_1697 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_3_4_fu_945_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_3_4_reg_1702 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_4_fu_954_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_4_reg_1707 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_fu_1001_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_reg_1712 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp6_fu_1007_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp6_reg_1717 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp8_fu_1019_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp8_reg_1722 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp17_fu_1025_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp17_reg_1727 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp22_fu_1031_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp22_reg_1732 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp23_fu_1037_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp23_reg_1737 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_8_4_4_fu_1216_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_8_4_4_reg_1742 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter1_state5 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal LineBuffer_val_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal LineBuffer_val_1_ce0 : STD_LOGIC;
    signal LineBuffer_val_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal LineBuffer_val_1_ce1 : STD_LOGIC;
    signal LineBuffer_val_1_we1 : STD_LOGIC;
    signal LineBuffer_val_2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal LineBuffer_val_2_ce0 : STD_LOGIC;
    signal LineBuffer_val_2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal LineBuffer_val_2_ce1 : STD_LOGIC;
    signal LineBuffer_val_2_we1 : STD_LOGIC;
    signal LineBuffer_val_3_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal LineBuffer_val_3_ce0 : STD_LOGIC;
    signal LineBuffer_val_3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal LineBuffer_val_3_ce1 : STD_LOGIC;
    signal LineBuffer_val_3_we1 : STD_LOGIC;
    signal LineBuffer_val_4_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal LineBuffer_val_4_ce0 : STD_LOGIC;
    signal LineBuffer_val_4_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal LineBuffer_val_4_ce1 : STD_LOGIC;
    signal LineBuffer_val_4_we1 : STD_LOGIC;
    signal i_reg_482 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tmp_10_fu_612_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_21_cast_fu_669_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_24_cast_fu_1282_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal BlockBuffer_val_0_1_fu_130 : STD_LOGIC_VECTOR (7 downto 0);
    signal BlockBuffer_val_0_1_1_fu_134 : STD_LOGIC_VECTOR (7 downto 0);
    signal BlockBuffer_val_0_2_fu_138 : STD_LOGIC_VECTOR (7 downto 0);
    signal BlockBuffer_val_0_3_fu_142 : STD_LOGIC_VECTOR (7 downto 0);
    signal BlockBuffer_val_1_1_fu_146 : STD_LOGIC_VECTOR (7 downto 0);
    signal BlockBuffer_val_1_1_1_fu_150 : STD_LOGIC_VECTOR (7 downto 0);
    signal BlockBuffer_val_1_2_fu_154 : STD_LOGIC_VECTOR (7 downto 0);
    signal BlockBuffer_val_1_3_fu_158 : STD_LOGIC_VECTOR (7 downto 0);
    signal BlockBuffer_val_2_1_fu_162 : STD_LOGIC_VECTOR (7 downto 0);
    signal BlockBuffer_val_2_1_1_fu_166 : STD_LOGIC_VECTOR (7 downto 0);
    signal BlockBuffer_val_2_2_fu_170 : STD_LOGIC_VECTOR (7 downto 0);
    signal BlockBuffer_val_2_3_fu_174 : STD_LOGIC_VECTOR (7 downto 0);
    signal BlockBuffer_val_3_1_fu_178 : STD_LOGIC_VECTOR (7 downto 0);
    signal BlockBuffer_val_3_1_1_fu_182 : STD_LOGIC_VECTOR (7 downto 0);
    signal BlockBuffer_val_3_2_fu_186 : STD_LOGIC_VECTOR (7 downto 0);
    signal BlockBuffer_val_3_3_fu_190 : STD_LOGIC_VECTOR (7 downto 0);
    signal BlockBuffer_val_4_1_fu_194 : STD_LOGIC_VECTOR (7 downto 0);
    signal BlockBuffer_val_4_1_1_fu_198 : STD_LOGIC_VECTOR (7 downto 0);
    signal BlockBuffer_val_4_2_fu_202 : STD_LOGIC_VECTOR (7 downto 0);
    signal BlockBuffer_val_4_3_fu_206 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_cast_fu_524_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_fu_539_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_107_fu_553_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_3_fu_573_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_110_fu_578_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_111_fu_582_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_op_fu_1291_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal c_fu_620_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_114_fu_639_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_115_fu_643_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_113_fu_626_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_116_fu_648_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_117_fu_656_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_21_fu_664_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_118_fu_674_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal icmp4_fu_684_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_121_fu_695_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_17_fu_699_p2 : STD_LOGIC_VECTOR (18 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of tmp_17_fu_699_p2 : signal is "no";
    signal p_Val2_7_fu_774_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_fu_774_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_7_0_1_fu_783_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_0_1_fu_783_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_7_0_2_fu_792_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_0_2_fu_792_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_7_0_3_fu_801_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_0_3_fu_801_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_7_0_4_fu_810_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_0_4_fu_810_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_7_1_fu_819_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_1_fu_819_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_7_1_1_fu_828_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_1_1_fu_828_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_7_1_2_fu_837_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_1_2_fu_837_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_7_1_3_fu_846_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_1_3_fu_846_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_7_1_4_fu_855_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_1_4_fu_855_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_7_2_fu_864_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_2_fu_864_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_7_2_1_fu_873_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_2_1_fu_873_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_7_2_2_fu_882_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_2_2_fu_882_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_7_2_3_fu_891_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_2_3_fu_891_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_7_2_4_fu_900_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_2_4_fu_900_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_7_3_fu_909_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_3_fu_909_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_7_3_1_fu_918_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_3_1_fu_918_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_7_3_2_fu_927_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_3_2_fu_927_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_7_3_3_fu_936_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_3_3_fu_936_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_7_3_4_fu_945_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_3_4_fu_945_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_7_4_fu_954_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_4_fu_954_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_7_4_1_fu_963_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_4_1_fu_963_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_7_4_2_fu_972_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_4_2_fu_972_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_7_4_3_fu_981_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_4_3_fu_981_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_7_4_4_fu_990_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_4_4_fu_990_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_7_0_2_fu_792_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_0_1_fu_783_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_fu_774_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp4_fu_995_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_1_fu_819_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_0_4_fu_810_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_1_3_fu_846_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_1_2_fu_837_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_1_1_fu_828_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp9_fu_1013_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_3_2_fu_927_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_3_1_fu_918_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_4_2_fu_972_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_4_1_fu_963_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_4_4_fu_990_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_4_3_fu_981_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp5_fu_1143_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp11_fu_1152_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp10_fu_1156_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_fu_1147_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp7_fu_1161_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp15_fu_1172_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp14_fu_1176_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp16_fu_1181_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp20_fu_1191_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp19_fu_1195_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp21_fu_1200_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp13_fu_1185_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp18_fu_1204_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_fu_1166_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp12_fu_1210_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_1222_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal r_V_fu_1225_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_120_fu_1239_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_35_fu_1249_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_fu_1243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_1259_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_119_fu_1231_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_1265_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_109_fu_1286_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_op_fu_1291_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal p_Val2_7_0_1_fu_783_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_0_2_fu_792_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_0_3_fu_801_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_0_4_fu_810_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_1_1_fu_828_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_1_2_fu_837_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_1_3_fu_846_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_1_4_fu_855_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_1_fu_819_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_2_1_fu_873_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_2_2_fu_882_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_2_3_fu_891_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_2_4_fu_900_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_2_fu_864_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_3_1_fu_918_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_3_2_fu_927_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_3_3_fu_936_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_3_4_fu_945_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_3_fu_909_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_4_1_fu_963_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_4_2_fu_972_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_4_3_fu_981_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_4_4_fu_990_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_4_fu_954_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_fu_774_p10 : STD_LOGIC_VECTOR (31 downto 0);

    component Filter2D_Core_mullbW IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (18 downto 0);
        dout : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component Filter2D_LineBuffhbi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    LineBuffer_val_1_U : component Filter2D_LineBuffhbi
    generic map (
        DataWidth => 8,
        AddressRange => 504,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => LineBuffer_val_1_address0,
        ce0 => LineBuffer_val_1_ce0,
        q0 => LineBuffer_val_1_q0,
        address1 => LineBuffer_val_1_ad_reg_1619,
        ce1 => LineBuffer_val_1_ce1,
        we1 => LineBuffer_val_1_we1,
        d1 => LineBuffer_val_2_q0);

    LineBuffer_val_2_U : component Filter2D_LineBuffhbi
    generic map (
        DataWidth => 8,
        AddressRange => 504,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => LineBuffer_val_2_address0,
        ce0 => LineBuffer_val_2_ce0,
        q0 => LineBuffer_val_2_q0,
        address1 => LineBuffer_val_2_ad_reg_1625,
        ce1 => LineBuffer_val_2_ce1,
        we1 => LineBuffer_val_2_we1,
        d1 => LineBuffer_val_3_q0);

    LineBuffer_val_3_U : component Filter2D_LineBuffhbi
    generic map (
        DataWidth => 8,
        AddressRange => 504,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => LineBuffer_val_3_address0,
        ce0 => LineBuffer_val_3_ce0,
        q0 => LineBuffer_val_3_q0,
        address1 => LineBuffer_val_3_ad_reg_1631,
        ce1 => LineBuffer_val_3_ce1,
        we1 => LineBuffer_val_3_we1,
        d1 => LineBuffer_val_4_q0);

    LineBuffer_val_4_U : component Filter2D_LineBuffhbi
    generic map (
        DataWidth => 8,
        AddressRange => 504,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => LineBuffer_val_4_address0,
        ce0 => LineBuffer_val_4_ce0,
        q0 => LineBuffer_val_4_q0,
        address1 => LineBuffer_val_4_ad_reg_1637,
        ce1 => LineBuffer_val_4_ce1,
        we1 => LineBuffer_val_4_we1,
        d1 => src_val_q0);

    Filter2D_Core_mullbW_U50 : component Filter2D_Core_mullbW
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 19,
        dout_WIDTH => 19)
    port map (
        din0 => tmp_109_fu_1286_p0,
        din1 => tmp_108_reg_1590,
        dout => tmp_109_fu_1286_p2);

    Filter2D_Core_mullbW_U51 : component Filter2D_Core_mullbW
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 19,
        dout_WIDTH => 19)
    port map (
        din0 => p_op_fu_1291_p0,
        din1 => tmp_112_reg_1595,
        dout => p_op_fu_1291_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond4_fu_601_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter1_state5)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter0;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_482_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                i_reg_482 <= i_1_reg_1575;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_reg_482 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    j_reg_493_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond4_fu_601_p2 = ap_const_lv1_0))) then 
                j_reg_493 <= j_1_fu_606_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                j_reg_493 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond4_reg_1610 = ap_const_lv1_0))) then
                BlockBuffer_val_0_1_1_fu_134 <= BlockBuffer_val_0_2_fu_138;
                BlockBuffer_val_0_1_fu_130 <= BlockBuffer_val_0_1_1_fu_134;
                BlockBuffer_val_0_2_fu_138 <= BlockBuffer_val_0_3_fu_142;
                BlockBuffer_val_0_3_fu_142 <= LineBuffer_val_1_q0;
                BlockBuffer_val_1_1_1_fu_150 <= BlockBuffer_val_1_2_fu_154;
                BlockBuffer_val_1_1_fu_146 <= BlockBuffer_val_1_1_1_fu_150;
                BlockBuffer_val_1_2_fu_154 <= BlockBuffer_val_1_3_fu_158;
                BlockBuffer_val_1_3_fu_158 <= LineBuffer_val_2_q0;
                BlockBuffer_val_2_1_1_fu_166 <= BlockBuffer_val_2_2_fu_170;
                BlockBuffer_val_2_1_fu_162 <= BlockBuffer_val_2_1_1_fu_166;
                BlockBuffer_val_2_2_fu_170 <= BlockBuffer_val_2_3_fu_174;
                BlockBuffer_val_2_3_fu_174 <= LineBuffer_val_3_q0;
                BlockBuffer_val_3_1_1_fu_182 <= BlockBuffer_val_3_2_fu_186;
                BlockBuffer_val_3_1_fu_178 <= BlockBuffer_val_3_1_1_fu_182;
                BlockBuffer_val_3_2_fu_186 <= BlockBuffer_val_3_3_fu_190;
                BlockBuffer_val_3_3_fu_190 <= LineBuffer_val_4_q0;
                BlockBuffer_val_4_1_1_fu_198 <= BlockBuffer_val_4_2_fu_202;
                BlockBuffer_val_4_1_fu_194 <= BlockBuffer_val_4_1_1_fu_198;
                BlockBuffer_val_4_2_fu_202 <= BlockBuffer_val_4_3_fu_206;
                BlockBuffer_val_4_3_fu_206 <= src_val_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                LineBuffer_cols_reg_1552 <= LineBuffer_cols_fu_504_p2;
                tmp_104_reg_1562 <= tmp_104_fu_516_p1;
                tmp_105_reg_1567 <= tmp_105_fu_520_p1;
                tmp_s_reg_1557 <= tmp_s_fu_510_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond4_fu_601_p2 = ap_const_lv1_0))) then
                LineBuffer_val_1_ad_reg_1619 <= tmp_10_fu_612_p1(9 - 1 downto 0);
                LineBuffer_val_2_ad_reg_1625 <= tmp_10_fu_612_p1(9 - 1 downto 0);
                LineBuffer_val_3_ad_reg_1631 <= tmp_10_fu_612_p1(9 - 1 downto 0);
                LineBuffer_val_4_ad_reg_1637 <= tmp_10_fu_612_p1(9 - 1 downto 0);
                or_cond_reg_1648 <= or_cond_fu_690_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond4_reg_1610 <= exitcond4_fu_601_p2;
                or_cond_reg_1648_pp0_iter1_reg <= or_cond_reg_1648;
                tmp_24_reg_1652_pp0_iter1_reg <= tmp_24_reg_1652;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_1_reg_1575 <= i_1_fu_533_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_7_fu_528_p2 = ap_const_lv1_1))) then
                icmp_reg_1585 <= icmp_fu_563_p2;
                tmp_106_reg_1580 <= r_fu_539_p2(31 downto 31);
                tmp_108_reg_1590 <= tmp_108_fu_569_p1;
                tmp_112_reg_1595 <= tmp_112_fu_587_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                or_cond_reg_1648_pp0_iter2_reg <= or_cond_reg_1648_pp0_iter1_reg;
                tmp_24_reg_1652_pp0_iter2_reg <= tmp_24_reg_1652_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond4_reg_1610 = ap_const_lv1_0) and (or_cond_reg_1648 = ap_const_lv1_1))) then
                p_Val2_7_0_3_reg_1657 <= p_Val2_7_0_3_fu_801_p2;
                p_Val2_7_1_4_reg_1662 <= p_Val2_7_1_4_fu_855_p2;
                p_Val2_7_2_1_reg_1672 <= p_Val2_7_2_1_fu_873_p2;
                p_Val2_7_2_2_reg_1677 <= p_Val2_7_2_2_fu_882_p2;
                p_Val2_7_2_3_reg_1682 <= p_Val2_7_2_3_fu_891_p2;
                p_Val2_7_2_4_reg_1687 <= p_Val2_7_2_4_fu_900_p2;
                p_Val2_7_2_reg_1667 <= p_Val2_7_2_fu_864_p2;
                p_Val2_7_3_3_reg_1697 <= p_Val2_7_3_3_fu_936_p2;
                p_Val2_7_3_4_reg_1702 <= p_Val2_7_3_4_fu_945_p2;
                p_Val2_7_3_reg_1692 <= p_Val2_7_3_fu_909_p2;
                p_Val2_7_4_reg_1707 <= p_Val2_7_4_fu_954_p2;
                tmp17_reg_1727 <= tmp17_fu_1025_p2;
                tmp22_reg_1732 <= tmp22_fu_1031_p2;
                tmp23_reg_1737 <= tmp23_fu_1037_p2;
                tmp3_reg_1712 <= tmp3_fu_1001_p2;
                tmp6_reg_1717 <= tmp6_fu_1007_p2;
                tmp8_reg_1722 <= tmp8_fu_1019_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond_reg_1648_pp0_iter1_reg = ap_const_lv1_1))) then
                p_Val2_8_4_4_reg_1742 <= p_Val2_8_4_4_fu_1216_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                tmp_109_reg_1600 <= tmp_109_fu_1286_p2;
                tmp_20_reg_1605 <= tmp_20_fu_595_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond4_fu_601_p2 = ap_const_lv1_0) and (or_cond_fu_690_p2 = ap_const_lv1_1))) then
                tmp_24_reg_1652 <= tmp_24_fu_704_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, tmp_7_fu_528_p2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_7_fu_528_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) and not(((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    LineBuffer_cols_fu_504_p2 <= std_logic_vector(unsigned(ap_const_lv32_4) + unsigned(src_cols_read));
    LineBuffer_val_1_address0 <= tmp_10_fu_612_p1(9 - 1 downto 0);

    LineBuffer_val_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            LineBuffer_val_1_ce0 <= ap_const_logic_1;
        else 
            LineBuffer_val_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    LineBuffer_val_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            LineBuffer_val_1_ce1 <= ap_const_logic_1;
        else 
            LineBuffer_val_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    LineBuffer_val_1_we1_assign_proc : process(exitcond4_reg_1610, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond4_reg_1610 = ap_const_lv1_0))) then 
            LineBuffer_val_1_we1 <= ap_const_logic_1;
        else 
            LineBuffer_val_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    LineBuffer_val_2_address0 <= tmp_10_fu_612_p1(9 - 1 downto 0);

    LineBuffer_val_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            LineBuffer_val_2_ce0 <= ap_const_logic_1;
        else 
            LineBuffer_val_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    LineBuffer_val_2_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            LineBuffer_val_2_ce1 <= ap_const_logic_1;
        else 
            LineBuffer_val_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    LineBuffer_val_2_we1_assign_proc : process(exitcond4_reg_1610, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond4_reg_1610 = ap_const_lv1_0))) then 
            LineBuffer_val_2_we1 <= ap_const_logic_1;
        else 
            LineBuffer_val_2_we1 <= ap_const_logic_0;
        end if; 
    end process;

    LineBuffer_val_3_address0 <= tmp_10_fu_612_p1(9 - 1 downto 0);

    LineBuffer_val_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            LineBuffer_val_3_ce0 <= ap_const_logic_1;
        else 
            LineBuffer_val_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    LineBuffer_val_3_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            LineBuffer_val_3_ce1 <= ap_const_logic_1;
        else 
            LineBuffer_val_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    LineBuffer_val_3_we1_assign_proc : process(exitcond4_reg_1610, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond4_reg_1610 = ap_const_lv1_0))) then 
            LineBuffer_val_3_we1 <= ap_const_logic_1;
        else 
            LineBuffer_val_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    LineBuffer_val_4_address0 <= tmp_10_fu_612_p1(9 - 1 downto 0);

    LineBuffer_val_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            LineBuffer_val_4_ce0 <= ap_const_logic_1;
        else 
            LineBuffer_val_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    LineBuffer_val_4_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            LineBuffer_val_4_ce1 <= ap_const_logic_1;
        else 
            LineBuffer_val_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    LineBuffer_val_4_we1_assign_proc : process(exitcond4_reg_1610, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond4_reg_1610 = ap_const_lv1_0))) then 
            LineBuffer_val_4_we1 <= ap_const_logic_1;
        else 
            LineBuffer_val_4_we1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state8 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter1_state5_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter1_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter1_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, tmp_7_fu_528_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_7_fu_528_p2 = ap_const_lv1_0)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, tmp_7_fu_528_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (tmp_7_fu_528_p2 = ap_const_lv1_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    c_fu_620_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFE) + signed(j_reg_493));
    dst_val_address0 <= tmp_24_cast_fu_1282_p1(18 - 1 downto 0);

    dst_val_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            dst_val_ce0 <= ap_const_logic_1;
        else 
            dst_val_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dst_val_d0 <= 
        tmp_37_fu_1265_p3 when (tmp_119_fu_1231_p3(0) = '1') else 
        tmp_35_fu_1249_p4;

    dst_val_we0_assign_proc : process(ap_block_pp0_stage0_11001, or_cond_reg_1648_pp0_iter2_reg, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_cond_reg_1648_pp0_iter2_reg = ap_const_lv1_1))) then 
            dst_val_we0 <= ap_const_logic_1;
        else 
            dst_val_we0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond4_fu_601_p2 <= "1" when (j_reg_493 = LineBuffer_cols_reg_1552) else "0";
    i_1_fu_533_p2 <= std_logic_vector(unsigned(i_reg_482) + unsigned(ap_const_lv31_1));
    i_cast_fu_524_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_482),32));
    icmp4_fu_684_p2 <= "1" when (signed(tmp_118_fu_674_p4) > signed(ap_const_lv30_0)) else "0";
    icmp_fu_563_p2 <= "0" when (tmp_107_fu_553_p4 = ap_const_lv29_0) else "1";
    j_1_fu_606_p2 <= std_logic_vector(unsigned(j_reg_493) + unsigned(ap_const_lv32_1));
    or_cond_fu_690_p2 <= (icmp_reg_1585 and icmp4_fu_684_p2);
    p_Val2_7_0_1_fu_783_p0 <= kernel_val_0_V_1_read;
    p_Val2_7_0_1_fu_783_p1 <= p_Val2_7_0_1_fu_783_p10(8 - 1 downto 0);
    p_Val2_7_0_1_fu_783_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(BlockBuffer_val_0_1_1_fu_134),32));
    p_Val2_7_0_1_fu_783_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_7_0_1_fu_783_p0) * signed('0' &p_Val2_7_0_1_fu_783_p1))), 32));
    p_Val2_7_0_2_fu_792_p0 <= kernel_val_0_V_2_read;
    p_Val2_7_0_2_fu_792_p1 <= p_Val2_7_0_2_fu_792_p10(8 - 1 downto 0);
    p_Val2_7_0_2_fu_792_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(BlockBuffer_val_0_2_fu_138),32));
    p_Val2_7_0_2_fu_792_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_7_0_2_fu_792_p0) * signed('0' &p_Val2_7_0_2_fu_792_p1))), 32));
    p_Val2_7_0_3_fu_801_p0 <= kernel_val_0_V_3_read;
    p_Val2_7_0_3_fu_801_p1 <= p_Val2_7_0_3_fu_801_p10(8 - 1 downto 0);
    p_Val2_7_0_3_fu_801_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(BlockBuffer_val_0_3_fu_142),32));
    p_Val2_7_0_3_fu_801_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_7_0_3_fu_801_p0) * signed('0' &p_Val2_7_0_3_fu_801_p1))), 32));
    p_Val2_7_0_4_fu_810_p0 <= kernel_val_0_V_4_read;
    p_Val2_7_0_4_fu_810_p1 <= p_Val2_7_0_4_fu_810_p10(8 - 1 downto 0);
    p_Val2_7_0_4_fu_810_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(LineBuffer_val_1_q0),32));
    p_Val2_7_0_4_fu_810_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_7_0_4_fu_810_p0) * signed('0' &p_Val2_7_0_4_fu_810_p1))), 32));
    p_Val2_7_1_1_fu_828_p0 <= kernel_val_1_V_1_read;
    p_Val2_7_1_1_fu_828_p1 <= p_Val2_7_1_1_fu_828_p10(8 - 1 downto 0);
    p_Val2_7_1_1_fu_828_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(BlockBuffer_val_1_1_1_fu_150),32));
    p_Val2_7_1_1_fu_828_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_7_1_1_fu_828_p0) * signed('0' &p_Val2_7_1_1_fu_828_p1))), 32));
    p_Val2_7_1_2_fu_837_p0 <= kernel_val_1_V_2_read;
    p_Val2_7_1_2_fu_837_p1 <= p_Val2_7_1_2_fu_837_p10(8 - 1 downto 0);
    p_Val2_7_1_2_fu_837_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(BlockBuffer_val_1_2_fu_154),32));
    p_Val2_7_1_2_fu_837_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_7_1_2_fu_837_p0) * signed('0' &p_Val2_7_1_2_fu_837_p1))), 32));
    p_Val2_7_1_3_fu_846_p0 <= kernel_val_1_V_3_read;
    p_Val2_7_1_3_fu_846_p1 <= p_Val2_7_1_3_fu_846_p10(8 - 1 downto 0);
    p_Val2_7_1_3_fu_846_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(BlockBuffer_val_1_3_fu_158),32));
    p_Val2_7_1_3_fu_846_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_7_1_3_fu_846_p0) * signed('0' &p_Val2_7_1_3_fu_846_p1))), 32));
    p_Val2_7_1_4_fu_855_p0 <= kernel_val_1_V_4_read;
    p_Val2_7_1_4_fu_855_p1 <= p_Val2_7_1_4_fu_855_p10(8 - 1 downto 0);
    p_Val2_7_1_4_fu_855_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(LineBuffer_val_2_q0),32));
    p_Val2_7_1_4_fu_855_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_7_1_4_fu_855_p0) * signed('0' &p_Val2_7_1_4_fu_855_p1))), 32));
    p_Val2_7_1_fu_819_p0 <= kernel_val_1_V_0_read;
    p_Val2_7_1_fu_819_p1 <= p_Val2_7_1_fu_819_p10(8 - 1 downto 0);
    p_Val2_7_1_fu_819_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(BlockBuffer_val_1_1_fu_146),32));
    p_Val2_7_1_fu_819_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_7_1_fu_819_p0) * signed('0' &p_Val2_7_1_fu_819_p1))), 32));
    p_Val2_7_2_1_fu_873_p0 <= kernel_val_2_V_1_read;
    p_Val2_7_2_1_fu_873_p1 <= p_Val2_7_2_1_fu_873_p10(8 - 1 downto 0);
    p_Val2_7_2_1_fu_873_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(BlockBuffer_val_2_1_1_fu_166),32));
    p_Val2_7_2_1_fu_873_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_7_2_1_fu_873_p0) * signed('0' &p_Val2_7_2_1_fu_873_p1))), 32));
    p_Val2_7_2_2_fu_882_p0 <= kernel_val_2_V_2_read;
    p_Val2_7_2_2_fu_882_p1 <= p_Val2_7_2_2_fu_882_p10(8 - 1 downto 0);
    p_Val2_7_2_2_fu_882_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(BlockBuffer_val_2_2_fu_170),32));
    p_Val2_7_2_2_fu_882_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_7_2_2_fu_882_p0) * signed('0' &p_Val2_7_2_2_fu_882_p1))), 32));
    p_Val2_7_2_3_fu_891_p0 <= kernel_val_2_V_3_read;
    p_Val2_7_2_3_fu_891_p1 <= p_Val2_7_2_3_fu_891_p10(8 - 1 downto 0);
    p_Val2_7_2_3_fu_891_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(BlockBuffer_val_2_3_fu_174),32));
    p_Val2_7_2_3_fu_891_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_7_2_3_fu_891_p0) * signed('0' &p_Val2_7_2_3_fu_891_p1))), 32));
    p_Val2_7_2_4_fu_900_p0 <= kernel_val_2_V_4_read;
    p_Val2_7_2_4_fu_900_p1 <= p_Val2_7_2_4_fu_900_p10(8 - 1 downto 0);
    p_Val2_7_2_4_fu_900_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(LineBuffer_val_3_q0),32));
    p_Val2_7_2_4_fu_900_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_7_2_4_fu_900_p0) * signed('0' &p_Val2_7_2_4_fu_900_p1))), 32));
    p_Val2_7_2_fu_864_p0 <= kernel_val_2_V_0_read;
    p_Val2_7_2_fu_864_p1 <= p_Val2_7_2_fu_864_p10(8 - 1 downto 0);
    p_Val2_7_2_fu_864_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(BlockBuffer_val_2_1_fu_162),32));
    p_Val2_7_2_fu_864_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_7_2_fu_864_p0) * signed('0' &p_Val2_7_2_fu_864_p1))), 32));
    p_Val2_7_3_1_fu_918_p0 <= kernel_val_3_V_1_read;
    p_Val2_7_3_1_fu_918_p1 <= p_Val2_7_3_1_fu_918_p10(8 - 1 downto 0);
    p_Val2_7_3_1_fu_918_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(BlockBuffer_val_3_1_1_fu_182),32));
    p_Val2_7_3_1_fu_918_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_7_3_1_fu_918_p0) * signed('0' &p_Val2_7_3_1_fu_918_p1))), 32));
    p_Val2_7_3_2_fu_927_p0 <= kernel_val_3_V_2_read;
    p_Val2_7_3_2_fu_927_p1 <= p_Val2_7_3_2_fu_927_p10(8 - 1 downto 0);
    p_Val2_7_3_2_fu_927_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(BlockBuffer_val_3_2_fu_186),32));
    p_Val2_7_3_2_fu_927_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_7_3_2_fu_927_p0) * signed('0' &p_Val2_7_3_2_fu_927_p1))), 32));
    p_Val2_7_3_3_fu_936_p0 <= kernel_val_3_V_3_read;
    p_Val2_7_3_3_fu_936_p1 <= p_Val2_7_3_3_fu_936_p10(8 - 1 downto 0);
    p_Val2_7_3_3_fu_936_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(BlockBuffer_val_3_3_fu_190),32));
    p_Val2_7_3_3_fu_936_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_7_3_3_fu_936_p0) * signed('0' &p_Val2_7_3_3_fu_936_p1))), 32));
    p_Val2_7_3_4_fu_945_p0 <= kernel_val_3_V_4_read;
    p_Val2_7_3_4_fu_945_p1 <= p_Val2_7_3_4_fu_945_p10(8 - 1 downto 0);
    p_Val2_7_3_4_fu_945_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(LineBuffer_val_4_q0),32));
    p_Val2_7_3_4_fu_945_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_7_3_4_fu_945_p0) * signed('0' &p_Val2_7_3_4_fu_945_p1))), 32));
    p_Val2_7_3_fu_909_p0 <= kernel_val_3_V_0_read;
    p_Val2_7_3_fu_909_p1 <= p_Val2_7_3_fu_909_p10(8 - 1 downto 0);
    p_Val2_7_3_fu_909_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(BlockBuffer_val_3_1_fu_178),32));
    p_Val2_7_3_fu_909_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_7_3_fu_909_p0) * signed('0' &p_Val2_7_3_fu_909_p1))), 32));
    p_Val2_7_4_1_fu_963_p0 <= kernel_val_4_V_1_read;
    p_Val2_7_4_1_fu_963_p1 <= p_Val2_7_4_1_fu_963_p10(8 - 1 downto 0);
    p_Val2_7_4_1_fu_963_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(BlockBuffer_val_4_1_1_fu_198),32));
    p_Val2_7_4_1_fu_963_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_7_4_1_fu_963_p0) * signed('0' &p_Val2_7_4_1_fu_963_p1))), 32));
    p_Val2_7_4_2_fu_972_p0 <= kernel_val_4_V_2_read;
    p_Val2_7_4_2_fu_972_p1 <= p_Val2_7_4_2_fu_972_p10(8 - 1 downto 0);
    p_Val2_7_4_2_fu_972_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(BlockBuffer_val_4_2_fu_202),32));
    p_Val2_7_4_2_fu_972_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_7_4_2_fu_972_p0) * signed('0' &p_Val2_7_4_2_fu_972_p1))), 32));
    p_Val2_7_4_3_fu_981_p0 <= kernel_val_4_V_3_read;
    p_Val2_7_4_3_fu_981_p1 <= p_Val2_7_4_3_fu_981_p10(8 - 1 downto 0);
    p_Val2_7_4_3_fu_981_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(BlockBuffer_val_4_3_fu_206),32));
    p_Val2_7_4_3_fu_981_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_7_4_3_fu_981_p0) * signed('0' &p_Val2_7_4_3_fu_981_p1))), 32));
    p_Val2_7_4_4_fu_990_p0 <= kernel_val_4_V_4_read;
    p_Val2_7_4_4_fu_990_p1 <= p_Val2_7_4_4_fu_990_p10(8 - 1 downto 0);
    p_Val2_7_4_4_fu_990_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_val_q0),32));
    p_Val2_7_4_4_fu_990_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_7_4_4_fu_990_p0) * signed('0' &p_Val2_7_4_4_fu_990_p1))), 32));
    p_Val2_7_4_fu_954_p0 <= kernel_val_4_V_0_read;
    p_Val2_7_4_fu_954_p1 <= p_Val2_7_4_fu_954_p10(8 - 1 downto 0);
    p_Val2_7_4_fu_954_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(BlockBuffer_val_4_1_fu_194),32));
    p_Val2_7_4_fu_954_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_7_4_fu_954_p0) * signed('0' &p_Val2_7_4_fu_954_p1))), 32));
    p_Val2_7_fu_774_p0 <= kernel_val_0_V_0_read;
    p_Val2_7_fu_774_p1 <= p_Val2_7_fu_774_p10(8 - 1 downto 0);
    p_Val2_7_fu_774_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(BlockBuffer_val_0_1_fu_130),32));
    p_Val2_7_fu_774_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_7_fu_774_p0) * signed('0' &p_Val2_7_fu_774_p1))), 32));
    p_Val2_8_4_4_fu_1216_p2 <= std_logic_vector(unsigned(tmp1_fu_1166_p2) + unsigned(tmp12_fu_1210_p2));
    p_op_fu_1291_p0 <= ap_const_lv19_1F4(10 - 1 downto 0);
    r_V_fu_1225_p2 <= std_logic_vector(unsigned(ap_const_lv33_200000) + unsigned(tmp_15_fu_1222_p1));
    r_fu_539_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFE) + signed(i_cast_fu_524_p1));
    src_val_address0 <= tmp_21_cast_fu_669_p1(18 - 1 downto 0);

    src_val_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            src_val_ce0 <= ap_const_logic_1;
        else 
            src_val_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp10_fu_1156_p2 <= std_logic_vector(unsigned(p_Val2_7_1_4_reg_1662) + unsigned(tmp11_fu_1152_p2));
    tmp11_fu_1152_p2 <= std_logic_vector(unsigned(p_Val2_7_2_1_reg_1672) + unsigned(p_Val2_7_2_reg_1667));
    tmp12_fu_1210_p2 <= std_logic_vector(unsigned(tmp13_fu_1185_p2) + unsigned(tmp18_fu_1204_p2));
    tmp13_fu_1185_p2 <= std_logic_vector(unsigned(tmp14_fu_1176_p2) + unsigned(tmp16_fu_1181_p2));
    tmp14_fu_1176_p2 <= std_logic_vector(unsigned(p_Val2_7_2_2_reg_1677) + unsigned(tmp15_fu_1172_p2));
    tmp15_fu_1172_p2 <= std_logic_vector(unsigned(p_Val2_7_2_4_reg_1687) + unsigned(p_Val2_7_2_3_reg_1682));
    tmp16_fu_1181_p2 <= std_logic_vector(unsigned(p_Val2_7_3_reg_1692) + unsigned(tmp17_reg_1727));
    tmp17_fu_1025_p2 <= std_logic_vector(unsigned(p_Val2_7_3_2_fu_927_p2) + unsigned(p_Val2_7_3_1_fu_918_p2));
    tmp18_fu_1204_p2 <= std_logic_vector(unsigned(tmp19_fu_1195_p2) + unsigned(tmp21_fu_1200_p2));
    tmp19_fu_1195_p2 <= std_logic_vector(unsigned(p_Val2_7_3_3_reg_1697) + unsigned(tmp20_fu_1191_p2));
    tmp1_fu_1166_p2 <= std_logic_vector(unsigned(tmp2_fu_1147_p2) + unsigned(tmp7_fu_1161_p2));
    tmp20_fu_1191_p2 <= std_logic_vector(unsigned(p_Val2_7_4_reg_1707) + unsigned(p_Val2_7_3_4_reg_1702));
    tmp21_fu_1200_p2 <= std_logic_vector(unsigned(tmp22_reg_1732) + unsigned(tmp23_reg_1737));
    tmp22_fu_1031_p2 <= std_logic_vector(unsigned(p_Val2_7_4_2_fu_972_p2) + unsigned(p_Val2_7_4_1_fu_963_p2));
    tmp23_fu_1037_p2 <= std_logic_vector(unsigned(p_Val2_7_4_4_fu_990_p2) + unsigned(p_Val2_7_4_3_fu_981_p2));
    tmp2_fu_1147_p2 <= std_logic_vector(unsigned(tmp3_reg_1712) + unsigned(tmp5_fu_1143_p2));
    tmp3_fu_1001_p2 <= std_logic_vector(unsigned(p_Val2_7_fu_774_p2) + unsigned(tmp4_fu_995_p2));
    tmp4_fu_995_p2 <= std_logic_vector(unsigned(p_Val2_7_0_2_fu_792_p2) + unsigned(p_Val2_7_0_1_fu_783_p2));
    tmp5_fu_1143_p2 <= std_logic_vector(unsigned(p_Val2_7_0_3_reg_1657) + unsigned(tmp6_reg_1717));
    tmp6_fu_1007_p2 <= std_logic_vector(unsigned(p_Val2_7_1_fu_819_p2) + unsigned(p_Val2_7_0_4_fu_810_p2));
    tmp7_fu_1161_p2 <= std_logic_vector(unsigned(tmp8_reg_1722) + unsigned(tmp10_fu_1156_p2));
    tmp8_fu_1019_p2 <= std_logic_vector(unsigned(p_Val2_7_1_1_fu_828_p2) + unsigned(tmp9_fu_1013_p2));
    tmp9_fu_1013_p2 <= std_logic_vector(unsigned(p_Val2_7_1_3_fu_846_p2) + unsigned(p_Val2_7_1_2_fu_837_p2));
    tmp_104_fu_516_p1 <= src_cols_read(19 - 1 downto 0);
    tmp_105_fu_520_p1 <= src_rows_read(19 - 1 downto 0);
    tmp_107_fu_553_p4 <= i_reg_482(30 downto 2);
    tmp_108_fu_569_p1 <= i_reg_482(19 - 1 downto 0);
    tmp_109_fu_1286_p0 <= ap_const_lv19_1F4(10 - 1 downto 0);
    tmp_10_fu_612_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_reg_493),64));
    tmp_110_fu_578_p1 <= r_fu_539_p2(19 - 1 downto 0);
    tmp_111_fu_582_p2 <= std_logic_vector(signed(ap_const_lv19_7FFFF) + signed(tmp_105_reg_1567));
    tmp_112_fu_587_p3 <= 
        tmp_110_fu_578_p1 when (tmp_3_fu_573_p2(0) = '1') else 
        tmp_111_fu_582_p2;
    tmp_113_fu_626_p3 <= c_fu_620_p2(31 downto 31);
    tmp_114_fu_639_p1 <= c_fu_620_p2(19 - 1 downto 0);
    tmp_115_fu_643_p2 <= std_logic_vector(signed(ap_const_lv19_7FFFF) + signed(tmp_104_reg_1562));
    tmp_116_fu_648_p3 <= 
        tmp_114_fu_639_p1 when (tmp_12_fu_634_p2(0) = '1') else 
        tmp_115_fu_643_p2;
    tmp_117_fu_656_p3 <= 
        ap_const_lv19_0 when (tmp_113_fu_626_p3(0) = '1') else 
        tmp_116_fu_648_p3;
    tmp_118_fu_674_p4 <= j_reg_493(31 downto 2);
    tmp_119_fu_1231_p3 <= r_V_fu_1225_p2(32 downto 32);
    tmp_120_fu_1239_p1 <= r_V_fu_1225_p2(22 - 1 downto 0);
    tmp_121_fu_695_p1 <= j_reg_493(19 - 1 downto 0);
    tmp_12_fu_634_p2 <= "1" when (signed(c_fu_620_p2) < signed(src_cols_read)) else "0";
        tmp_15_fu_1222_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_8_4_4_reg_1742),33));

    tmp_16_fu_1243_p2 <= "1" when (tmp_120_fu_1239_p1 = ap_const_lv22_0) else "0";
    tmp_17_fu_699_p2 <= std_logic_vector(signed(tmp_109_reg_1600) + signed(tmp_121_fu_695_p1));
    tmp_20_fu_595_p3 <= 
        ap_const_lv19_0 when (tmp_106_reg_1580(0) = '1') else 
        p_op_fu_1291_p2;
        tmp_21_cast_fu_669_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_21_fu_664_p2),64));

    tmp_21_fu_664_p2 <= std_logic_vector(unsigned(tmp_117_fu_656_p3) + unsigned(tmp_20_reg_1605));
        tmp_24_cast_fu_1282_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_24_reg_1652_pp0_iter2_reg),64));

    tmp_24_fu_704_p2 <= std_logic_vector(signed(ap_const_lv19_7F82C) + signed(tmp_17_fu_699_p2));
    tmp_35_fu_1249_p4 <= r_V_fu_1225_p2(29 downto 22);
    tmp_36_fu_1259_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(tmp_35_fu_1249_p4));
    tmp_37_fu_1265_p3 <= 
        tmp_35_fu_1249_p4 when (tmp_16_fu_1243_p2(0) = '1') else 
        tmp_36_fu_1259_p2;
    tmp_3_fu_573_p2 <= "1" when (signed(r_fu_539_p2) < signed(src_rows_read)) else "0";
    tmp_7_fu_528_p2 <= "1" when (signed(i_cast_fu_524_p1) < signed(tmp_s_reg_1557)) else "0";
    tmp_s_fu_510_p2 <= std_logic_vector(unsigned(ap_const_lv32_4) + unsigned(src_rows_read));
end behav;

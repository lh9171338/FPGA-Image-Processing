-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity imgproc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    S_AXIS_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    S_AXIS_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
    S_AXIS_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
    S_AXIS_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    S_AXIS_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    S_AXIS_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    S_AXIS_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    M_AXIS_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    M_AXIS_TKEEP : OUT STD_LOGIC_VECTOR (0 downto 0);
    M_AXIS_TSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    M_AXIS_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    M_AXIS_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    M_AXIS_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
    M_AXIS_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0);
    rows0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cols0 : IN STD_LOGIC_VECTOR (31 downto 0);
    rows1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    cols1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    S_AXIS_TVALID : IN STD_LOGIC;
    S_AXIS_TREADY : OUT STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    M_AXIS_TVALID : OUT STD_LOGIC;
    M_AXIS_TREADY : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC );
end;


architecture behav of imgproc is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "imgproc,hls_ip_2018_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7vx690tffg1761-3,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.709000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=64,HLS_SYN_DSP=40,HLS_SYN_FF=4485,HLS_SYN_LUT=9300,HLS_VERSION=2018_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal arr0_val_i_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal arr0_val_i_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal arr0_val_t_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal arr0_val_t_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal arr1_val_i_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal arr1_val_t_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal Block_Mat_exit20_pro_U0_ap_start : STD_LOGIC;
    signal Block_Mat_exit20_pro_U0_ap_done : STD_LOGIC;
    signal Block_Mat_exit20_pro_U0_ap_continue : STD_LOGIC;
    signal Block_Mat_exit20_pro_U0_ap_idle : STD_LOGIC;
    signal Block_Mat_exit20_pro_U0_ap_ready : STD_LOGIC;
    signal Block_Mat_exit20_pro_U0_mat0_rows_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit20_pro_U0_mat0_rows_V_out_write : STD_LOGIC;
    signal Block_Mat_exit20_pro_U0_mat0_cols_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit20_pro_U0_mat0_cols_V_out_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_start : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_done : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_continue : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_idle : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_ready : STD_LOGIC;
    signal AXIvideo2Mat_U0_start_out : STD_LOGIC;
    signal AXIvideo2Mat_U0_start_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_S_AXIS_TREADY : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_rows_V_read : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_cols_V_read : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal AXIvideo2Mat_U0_img_data_stream_V_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_rows_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal AXIvideo2Mat_U0_img_rows_V_out_write : STD_LOGIC;
    signal AXIvideo2Mat_U0_img_cols_V_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal AXIvideo2Mat_U0_img_cols_V_out_write : STD_LOGIC;
    signal Block_Mat_exit2022_p_U0_ap_start : STD_LOGIC;
    signal Block_Mat_exit2022_p_U0_ap_done : STD_LOGIC;
    signal Block_Mat_exit2022_p_U0_ap_continue : STD_LOGIC;
    signal Block_Mat_exit2022_p_U0_ap_idle : STD_LOGIC;
    signal Block_Mat_exit2022_p_U0_ap_ready : STD_LOGIC;
    signal Block_Mat_exit2022_p_U0_mat0_rows_V_read : STD_LOGIC;
    signal Block_Mat_exit2022_p_U0_mat0_cols_V_read : STD_LOGIC;
    signal Block_Mat_exit2022_p_U0_mat0_data_stream_0_V_read : STD_LOGIC;
    signal Block_Mat_exit2022_p_U0_arr0_val_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal Block_Mat_exit2022_p_U0_arr0_val_ce0 : STD_LOGIC;
    signal Block_Mat_exit2022_p_U0_arr0_val_we0 : STD_LOGIC;
    signal Block_Mat_exit2022_p_U0_arr0_val_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal Block_Mat_exit2022_p_U0_arr0_rows_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit2022_p_U0_arr0_rows_out_write : STD_LOGIC;
    signal Block_Mat_exit2022_p_U0_arr0_cols_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit2022_p_U0_arr0_cols_out_write : STD_LOGIC;
    signal Block_Mat_exit2022_p_U0_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit2022_p_U0_ap_return_1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_channel_done_tmp_5_loc_channel : STD_LOGIC;
    signal tmp_5_loc_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_tmp_5_loc_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_tmp_5_loc_channel : STD_LOGIC;
    signal ap_channel_done_tmp_4_loc_channel : STD_LOGIC;
    signal tmp_4_loc_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_tmp_4_loc_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_tmp_4_loc_channel : STD_LOGIC;
    signal ap_channel_done_arr0_val : STD_LOGIC;
    signal Block_Mat_exit2022_p_U0_arr0_val_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_arr0_val : STD_LOGIC := '0';
    signal ap_sync_channel_write_arr0_val : STD_LOGIC;
    signal Resize_U0_ap_start : STD_LOGIC;
    signal Resize_U0_ap_done : STD_LOGIC;
    signal Resize_U0_ap_continue : STD_LOGIC;
    signal Resize_U0_ap_idle : STD_LOGIC;
    signal Resize_U0_ap_ready : STD_LOGIC;
    signal Resize_U0_start_out : STD_LOGIC;
    signal Resize_U0_start_write : STD_LOGIC;
    signal Resize_U0_src_val_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal Resize_U0_src_val_ce0 : STD_LOGIC;
    signal Resize_U0_src_val_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal Resize_U0_src_val_ce1 : STD_LOGIC;
    signal Resize_U0_src_rows_read : STD_LOGIC;
    signal Resize_U0_src_cols_read : STD_LOGIC;
    signal Resize_U0_dst_val_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal Resize_U0_dst_val_ce0 : STD_LOGIC;
    signal Resize_U0_dst_val_we0 : STD_LOGIC;
    signal Resize_U0_dst_val_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal Resize_U0_dst_rows_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Resize_U0_dst_rows_write : STD_LOGIC;
    signal Resize_U0_dst_cols_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Resize_U0_dst_cols_write : STD_LOGIC;
    signal ap_channel_done_arr1_val : STD_LOGIC;
    signal Resize_U0_dst_val_full_n : STD_LOGIC;
    signal Block_Mat_exit2027_p_U0_ap_start : STD_LOGIC;
    signal Block_Mat_exit2027_p_U0_ap_done : STD_LOGIC;
    signal Block_Mat_exit2027_p_U0_ap_continue : STD_LOGIC;
    signal Block_Mat_exit2027_p_U0_ap_idle : STD_LOGIC;
    signal Block_Mat_exit2027_p_U0_ap_ready : STD_LOGIC;
    signal Block_Mat_exit2027_p_U0_arr1_rows_read : STD_LOGIC;
    signal Block_Mat_exit2027_p_U0_rows1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit2027_p_U0_rows1_ap_vld : STD_LOGIC;
    signal Block_Mat_exit2027_p_U0_arr1_rows_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit2027_p_U0_arr1_rows_out_write : STD_LOGIC;
    signal Block_Mat_exit2027_p_U0_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_channel_done_val_assign_loc_chann : STD_LOGIC;
    signal val_assign_loc_chann_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_val_assign_loc_chann : STD_LOGIC := '0';
    signal ap_sync_channel_write_val_assign_loc_chann : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal Block_Mat_exit2030_p_U0_ap_start : STD_LOGIC;
    signal Block_Mat_exit2030_p_U0_ap_done : STD_LOGIC;
    signal Block_Mat_exit2030_p_U0_ap_continue : STD_LOGIC;
    signal Block_Mat_exit2030_p_U0_ap_idle : STD_LOGIC;
    signal Block_Mat_exit2030_p_U0_ap_ready : STD_LOGIC;
    signal Block_Mat_exit2030_p_U0_arr1_cols_read : STD_LOGIC;
    signal Block_Mat_exit2030_p_U0_cols1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit2030_p_U0_cols1_ap_vld : STD_LOGIC;
    signal Block_Mat_exit2030_p_U0_arr1_cols_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit2030_p_U0_arr1_cols_out_write : STD_LOGIC;
    signal Block_Mat_exit2030_p_U0_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_Mat_exit2030_p_U0_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_channel_done_param1_val_1_V : STD_LOGIC;
    signal param1_val_1_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_param1_val_1_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_param1_val_1_V : STD_LOGIC;
    signal ap_channel_done_param1_val_0_V : STD_LOGIC;
    signal param1_val_0_V_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_param1_val_0_V : STD_LOGIC := '0';
    signal ap_sync_channel_write_param1_val_0_V : STD_LOGIC;
    signal Array2D2Mat_U0_ap_start : STD_LOGIC;
    signal Array2D2Mat_U0_ap_done : STD_LOGIC;
    signal Array2D2Mat_U0_ap_continue : STD_LOGIC;
    signal Array2D2Mat_U0_ap_idle : STD_LOGIC;
    signal Array2D2Mat_U0_ap_ready : STD_LOGIC;
    signal Array2D2Mat_U0_start_out : STD_LOGIC;
    signal Array2D2Mat_U0_start_write : STD_LOGIC;
    signal Array2D2Mat_U0_arr_val_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal Array2D2Mat_U0_arr_val_ce0 : STD_LOGIC;
    signal Array2D2Mat_U0_arr_rows_read : STD_LOGIC;
    signal Array2D2Mat_U0_arr_cols_read : STD_LOGIC;
    signal Array2D2Mat_U0_mat_data_stream_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Array2D2Mat_U0_mat_data_stream_V_write : STD_LOGIC;
    signal Array2D2Mat_U0_mat_rows_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Array2D2Mat_U0_mat_rows_V_write : STD_LOGIC;
    signal Array2D2Mat_U0_mat_cols_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal Array2D2Mat_U0_mat_cols_V_write : STD_LOGIC;
    signal Mat2AXIvideo_U0_ap_start : STD_LOGIC;
    signal Mat2AXIvideo_U0_ap_done : STD_LOGIC;
    signal Mat2AXIvideo_U0_ap_continue : STD_LOGIC;
    signal Mat2AXIvideo_U0_ap_idle : STD_LOGIC;
    signal Mat2AXIvideo_U0_ap_ready : STD_LOGIC;
    signal Mat2AXIvideo_U0_img_rows_V_read : STD_LOGIC;
    signal Mat2AXIvideo_U0_img_cols_V_read : STD_LOGIC;
    signal Mat2AXIvideo_U0_img_data_stream_V_read : STD_LOGIC;
    signal Mat2AXIvideo_U0_M_AXIS_TDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal Mat2AXIvideo_U0_M_AXIS_TVALID : STD_LOGIC;
    signal Mat2AXIvideo_U0_M_AXIS_TKEEP : STD_LOGIC_VECTOR (0 downto 0);
    signal Mat2AXIvideo_U0_M_AXIS_TSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal Mat2AXIvideo_U0_M_AXIS_TUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal Mat2AXIvideo_U0_M_AXIS_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal Mat2AXIvideo_U0_M_AXIS_TID : STD_LOGIC_VECTOR (0 downto 0);
    signal Mat2AXIvideo_U0_M_AXIS_TDEST : STD_LOGIC_VECTOR (0 downto 0);
    signal arr0_val_i_full_n : STD_LOGIC;
    signal arr0_val_t_empty_n : STD_LOGIC;
    signal arr0_val_t_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal arr0_val_t_we1 : STD_LOGIC;
    signal arr1_val_i_full_n : STD_LOGIC;
    signal arr1_val_t_empty_n : STD_LOGIC;
    signal mat0_rows_V_c_full_n : STD_LOGIC;
    signal mat0_rows_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal mat0_rows_V_c_empty_n : STD_LOGIC;
    signal mat0_cols_V_c_full_n : STD_LOGIC;
    signal mat0_cols_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal mat0_cols_V_c_empty_n : STD_LOGIC;
    signal mat0_data_stream_0_s_full_n : STD_LOGIC;
    signal mat0_data_stream_0_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal mat0_data_stream_0_s_empty_n : STD_LOGIC;
    signal mat0_rows_V_c41_full_n : STD_LOGIC;
    signal mat0_rows_V_c41_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal mat0_rows_V_c41_empty_n : STD_LOGIC;
    signal mat0_cols_V_c42_full_n : STD_LOGIC;
    signal mat0_cols_V_c42_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal mat0_cols_V_c42_empty_n : STD_LOGIC;
    signal arr0_rows_c_full_n : STD_LOGIC;
    signal arr0_rows_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal arr0_rows_c_empty_n : STD_LOGIC;
    signal arr0_cols_c_full_n : STD_LOGIC;
    signal arr0_cols_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal arr0_cols_c_empty_n : STD_LOGIC;
    signal tmp_4_loc_channel_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_loc_channel_empty_n : STD_LOGIC;
    signal tmp_5_loc_channel_dout : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_5_loc_channel_empty_n : STD_LOGIC;
    signal arr1_rows_c_full_n : STD_LOGIC;
    signal arr1_rows_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal arr1_rows_c_empty_n : STD_LOGIC;
    signal arr1_cols_c_full_n : STD_LOGIC;
    signal arr1_cols_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal arr1_cols_c_empty_n : STD_LOGIC;
    signal arr1_rows_c43_full_n : STD_LOGIC;
    signal arr1_rows_c43_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal arr1_rows_c43_empty_n : STD_LOGIC;
    signal val_assign_loc_chann_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal val_assign_loc_chann_empty_n : STD_LOGIC;
    signal arr1_cols_c44_full_n : STD_LOGIC;
    signal arr1_cols_c44_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal arr1_cols_c44_empty_n : STD_LOGIC;
    signal param1_val_0_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal param1_val_0_V_empty_n : STD_LOGIC;
    signal param1_val_1_V_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal param1_val_1_V_empty_n : STD_LOGIC;
    signal mat1_data_stream_0_s_full_n : STD_LOGIC;
    signal mat1_data_stream_0_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal mat1_data_stream_0_s_empty_n : STD_LOGIC;
    signal mat1_rows_V_c_full_n : STD_LOGIC;
    signal mat1_rows_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal mat1_rows_V_c_empty_n : STD_LOGIC;
    signal mat1_cols_V_c_full_n : STD_LOGIC;
    signal mat1_cols_V_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal mat1_cols_V_c_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_AXIvideo2Mat_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_AXIvideo2Mat_U0_ap_ready : STD_LOGIC;
    signal AXIvideo2Mat_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_Block_Mat_exit20_pro_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_Block_Mat_exit20_pro_U0_ap_ready : STD_LOGIC;
    signal Block_Mat_exit20_pro_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal Block_Mat_exit20_pro_U0_start_full_n : STD_LOGIC;
    signal Block_Mat_exit20_pro_U0_start_write : STD_LOGIC;
    signal start_for_Block_Mat_exit2022_p_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_Mat_exit2022_p_U0_full_n : STD_LOGIC;
    signal start_for_Block_Mat_exit2022_p_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_Mat_exit2022_p_U0_empty_n : STD_LOGIC;
    signal Block_Mat_exit2022_p_U0_start_full_n : STD_LOGIC;
    signal Block_Mat_exit2022_p_U0_start_write : STD_LOGIC;
    signal start_for_Block_Mat_exit2027_p_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_Mat_exit2027_p_U0_full_n : STD_LOGIC;
    signal start_for_Block_Mat_exit2027_p_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Block_Mat_exit2027_p_U0_empty_n : STD_LOGIC;
    signal Block_Mat_exit2027_p_U0_start_full_n : STD_LOGIC;
    signal Block_Mat_exit2027_p_U0_start_write : STD_LOGIC;
    signal Block_Mat_exit2030_p_U0_start_full_n : STD_LOGIC;
    signal Block_Mat_exit2030_p_U0_start_write : STD_LOGIC;
    signal start_for_Mat2AXIvideo_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Mat2AXIvideo_U0_full_n : STD_LOGIC;
    signal start_for_Mat2AXIvideo_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Mat2AXIvideo_U0_empty_n : STD_LOGIC;
    signal Mat2AXIvideo_U0_start_full_n : STD_LOGIC;
    signal Mat2AXIvideo_U0_start_write : STD_LOGIC;

    component Block_Mat_exit20_pro IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        rows0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cols0 : IN STD_LOGIC_VECTOR (31 downto 0);
        mat0_rows_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        mat0_rows_V_out_full_n : IN STD_LOGIC;
        mat0_rows_V_out_write : OUT STD_LOGIC;
        mat0_cols_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        mat0_cols_V_out_full_n : IN STD_LOGIC;
        mat0_cols_V_out_write : OUT STD_LOGIC );
    end component;


    component AXIvideo2Mat IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        S_AXIS_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        S_AXIS_TVALID : IN STD_LOGIC;
        S_AXIS_TREADY : OUT STD_LOGIC;
        S_AXIS_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
        S_AXIS_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        S_AXIS_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        S_AXIS_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        S_AXIS_TID : IN STD_LOGIC_VECTOR (0 downto 0);
        S_AXIS_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
        img_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        img_rows_V_empty_n : IN STD_LOGIC;
        img_rows_V_read : OUT STD_LOGIC;
        img_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        img_cols_V_empty_n : IN STD_LOGIC;
        img_cols_V_read : OUT STD_LOGIC;
        img_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_V_full_n : IN STD_LOGIC;
        img_data_stream_V_write : OUT STD_LOGIC;
        img_rows_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        img_rows_V_out_full_n : IN STD_LOGIC;
        img_rows_V_out_write : OUT STD_LOGIC;
        img_cols_V_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        img_cols_V_out_full_n : IN STD_LOGIC;
        img_cols_V_out_write : OUT STD_LOGIC );
    end component;


    component Block_Mat_exit2022_p IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        mat0_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        mat0_rows_V_empty_n : IN STD_LOGIC;
        mat0_rows_V_read : OUT STD_LOGIC;
        mat0_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        mat0_cols_V_empty_n : IN STD_LOGIC;
        mat0_cols_V_read : OUT STD_LOGIC;
        mat0_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        mat0_data_stream_0_V_empty_n : IN STD_LOGIC;
        mat0_data_stream_0_V_read : OUT STD_LOGIC;
        arr0_val_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        arr0_val_ce0 : OUT STD_LOGIC;
        arr0_val_we0 : OUT STD_LOGIC;
        arr0_val_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        arr0_rows_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        arr0_rows_out_full_n : IN STD_LOGIC;
        arr0_rows_out_write : OUT STD_LOGIC;
        arr0_cols_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        arr0_cols_out_full_n : IN STD_LOGIC;
        arr0_cols_out_write : OUT STD_LOGIC;
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component Resize IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        src_val_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        src_val_ce0 : OUT STD_LOGIC;
        src_val_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        src_val_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        src_val_ce1 : OUT STD_LOGIC;
        src_val_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        src_rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        src_rows_empty_n : IN STD_LOGIC;
        src_rows_read : OUT STD_LOGIC;
        src_cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        src_cols_empty_n : IN STD_LOGIC;
        src_cols_read : OUT STD_LOGIC;
        dst_val_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        dst_val_ce0 : OUT STD_LOGIC;
        dst_val_we0 : OUT STD_LOGIC;
        dst_val_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        scale : IN STD_LOGIC_VECTOR (31 downto 0);
        method : IN STD_LOGIC_VECTOR (1 downto 0);
        dst_rows_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        dst_rows_full_n : IN STD_LOGIC;
        dst_rows_write : OUT STD_LOGIC;
        dst_cols_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        dst_cols_full_n : IN STD_LOGIC;
        dst_cols_write : OUT STD_LOGIC );
    end component;


    component Block_Mat_exit2027_p IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        arr1_rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        arr1_rows_empty_n : IN STD_LOGIC;
        arr1_rows_read : OUT STD_LOGIC;
        rows1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        rows1_ap_vld : OUT STD_LOGIC;
        arr1_rows_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        arr1_rows_out_full_n : IN STD_LOGIC;
        arr1_rows_out_write : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Block_Mat_exit2030_p IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        arr1_cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        arr1_cols_empty_n : IN STD_LOGIC;
        arr1_cols_read : OUT STD_LOGIC;
        cols1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        cols1_ap_vld : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        arr1_cols_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        arr1_cols_out_full_n : IN STD_LOGIC;
        arr1_cols_out_write : OUT STD_LOGIC;
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Array2D2Mat IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        arr_val_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        arr_val_ce0 : OUT STD_LOGIC;
        arr_val_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        arr_rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        arr_rows_empty_n : IN STD_LOGIC;
        arr_rows_read : OUT STD_LOGIC;
        arr_cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        arr_cols_empty_n : IN STD_LOGIC;
        arr_cols_read : OUT STD_LOGIC;
        param_val_0_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        param_val_1_V_read : IN STD_LOGIC_VECTOR (31 downto 0);
        mat_data_stream_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        mat_data_stream_V_full_n : IN STD_LOGIC;
        mat_data_stream_V_write : OUT STD_LOGIC;
        mat_rows_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        mat_rows_V_full_n : IN STD_LOGIC;
        mat_rows_V_write : OUT STD_LOGIC;
        mat_cols_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        mat_cols_V_full_n : IN STD_LOGIC;
        mat_cols_V_write : OUT STD_LOGIC );
    end component;


    component Mat2AXIvideo IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        img_rows_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        img_rows_V_empty_n : IN STD_LOGIC;
        img_rows_V_read : OUT STD_LOGIC;
        img_cols_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        img_cols_V_empty_n : IN STD_LOGIC;
        img_cols_V_read : OUT STD_LOGIC;
        img_data_stream_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        img_data_stream_V_empty_n : IN STD_LOGIC;
        img_data_stream_V_read : OUT STD_LOGIC;
        M_AXIS_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        M_AXIS_TVALID : OUT STD_LOGIC;
        M_AXIS_TREADY : IN STD_LOGIC;
        M_AXIS_TKEEP : OUT STD_LOGIC_VECTOR (0 downto 0);
        M_AXIS_TSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
        M_AXIS_TUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        M_AXIS_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        M_AXIS_TID : OUT STD_LOGIC_VECTOR (0 downto 0);
        M_AXIS_TDEST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component imgproc_arr0_val IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (15 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        i_address1 : IN STD_LOGIC_VECTOR (15 downto 0);
        i_ce1 : IN STD_LOGIC;
        i_q1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (15 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        t_address1 : IN STD_LOGIC_VECTOR (15 downto 0);
        t_ce1 : IN STD_LOGIC;
        t_q1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component imgproc_arr1_val IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (15 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (15 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w8_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w2_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (1 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (1 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d3_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Block_Mhbi IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Block_Mibs IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Mat2AXIjbC IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    arr0_val_U : component imgproc_arr0_val
    generic map (
        DataWidth => 8,
        AddressRange => 65536,
        AddressWidth => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Block_Mat_exit2022_p_U0_arr0_val_address0,
        i_ce0 => Block_Mat_exit2022_p_U0_arr0_val_ce0,
        i_we0 => Block_Mat_exit2022_p_U0_arr0_val_we0,
        i_d0 => Block_Mat_exit2022_p_U0_arr0_val_d0,
        i_q0 => arr0_val_i_q0,
        i_address1 => ap_const_lv16_0,
        i_ce1 => ap_const_logic_0,
        i_q1 => arr0_val_i_q1,
        t_address0 => Resize_U0_src_val_address0,
        t_ce0 => Resize_U0_src_val_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv8_0,
        t_q0 => arr0_val_t_q0,
        t_address1 => Resize_U0_src_val_address1,
        t_ce1 => Resize_U0_src_val_ce1,
        t_q1 => arr0_val_t_q1,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => arr0_val_i_full_n,
        i_write => ap_channel_done_arr0_val,
        t_empty_n => arr0_val_t_empty_n,
        t_read => Resize_U0_ap_ready);

    arr1_val_U : component imgproc_arr1_val
    generic map (
        DataWidth => 8,
        AddressRange => 65536,
        AddressWidth => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        i_address0 => Resize_U0_dst_val_address0,
        i_ce0 => Resize_U0_dst_val_ce0,
        i_we0 => Resize_U0_dst_val_we0,
        i_d0 => Resize_U0_dst_val_d0,
        i_q0 => arr1_val_i_q0,
        t_address0 => Array2D2Mat_U0_arr_val_address0,
        t_ce0 => Array2D2Mat_U0_arr_val_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv8_0,
        t_q0 => arr1_val_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => arr1_val_i_full_n,
        i_write => Resize_U0_ap_done,
        t_empty_n => arr1_val_t_empty_n,
        t_read => Array2D2Mat_U0_ap_ready);

    Block_Mat_exit20_pro_U0 : component Block_Mat_exit20_pro
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_Mat_exit20_pro_U0_ap_start,
        ap_done => Block_Mat_exit20_pro_U0_ap_done,
        ap_continue => Block_Mat_exit20_pro_U0_ap_continue,
        ap_idle => Block_Mat_exit20_pro_U0_ap_idle,
        ap_ready => Block_Mat_exit20_pro_U0_ap_ready,
        rows0 => rows0,
        cols0 => cols0,
        mat0_rows_V_out_din => Block_Mat_exit20_pro_U0_mat0_rows_V_out_din,
        mat0_rows_V_out_full_n => mat0_rows_V_c_full_n,
        mat0_rows_V_out_write => Block_Mat_exit20_pro_U0_mat0_rows_V_out_write,
        mat0_cols_V_out_din => Block_Mat_exit20_pro_U0_mat0_cols_V_out_din,
        mat0_cols_V_out_full_n => mat0_cols_V_c_full_n,
        mat0_cols_V_out_write => Block_Mat_exit20_pro_U0_mat0_cols_V_out_write);

    AXIvideo2Mat_U0 : component AXIvideo2Mat
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => AXIvideo2Mat_U0_ap_start,
        start_full_n => start_for_Block_Mat_exit2022_p_U0_full_n,
        ap_done => AXIvideo2Mat_U0_ap_done,
        ap_continue => AXIvideo2Mat_U0_ap_continue,
        ap_idle => AXIvideo2Mat_U0_ap_idle,
        ap_ready => AXIvideo2Mat_U0_ap_ready,
        start_out => AXIvideo2Mat_U0_start_out,
        start_write => AXIvideo2Mat_U0_start_write,
        S_AXIS_TDATA => S_AXIS_TDATA,
        S_AXIS_TVALID => S_AXIS_TVALID,
        S_AXIS_TREADY => AXIvideo2Mat_U0_S_AXIS_TREADY,
        S_AXIS_TKEEP => S_AXIS_TKEEP,
        S_AXIS_TSTRB => S_AXIS_TSTRB,
        S_AXIS_TUSER => S_AXIS_TUSER,
        S_AXIS_TLAST => S_AXIS_TLAST,
        S_AXIS_TID => S_AXIS_TID,
        S_AXIS_TDEST => S_AXIS_TDEST,
        img_rows_V_dout => mat0_rows_V_c_dout,
        img_rows_V_empty_n => mat0_rows_V_c_empty_n,
        img_rows_V_read => AXIvideo2Mat_U0_img_rows_V_read,
        img_cols_V_dout => mat0_cols_V_c_dout,
        img_cols_V_empty_n => mat0_cols_V_c_empty_n,
        img_cols_V_read => AXIvideo2Mat_U0_img_cols_V_read,
        img_data_stream_V_din => AXIvideo2Mat_U0_img_data_stream_V_din,
        img_data_stream_V_full_n => mat0_data_stream_0_s_full_n,
        img_data_stream_V_write => AXIvideo2Mat_U0_img_data_stream_V_write,
        img_rows_V_out_din => AXIvideo2Mat_U0_img_rows_V_out_din,
        img_rows_V_out_full_n => mat0_rows_V_c41_full_n,
        img_rows_V_out_write => AXIvideo2Mat_U0_img_rows_V_out_write,
        img_cols_V_out_din => AXIvideo2Mat_U0_img_cols_V_out_din,
        img_cols_V_out_full_n => mat0_cols_V_c42_full_n,
        img_cols_V_out_write => AXIvideo2Mat_U0_img_cols_V_out_write);

    Block_Mat_exit2022_p_U0 : component Block_Mat_exit2022_p
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_Mat_exit2022_p_U0_ap_start,
        ap_done => Block_Mat_exit2022_p_U0_ap_done,
        ap_continue => Block_Mat_exit2022_p_U0_ap_continue,
        ap_idle => Block_Mat_exit2022_p_U0_ap_idle,
        ap_ready => Block_Mat_exit2022_p_U0_ap_ready,
        mat0_rows_V_dout => mat0_rows_V_c41_dout,
        mat0_rows_V_empty_n => mat0_rows_V_c41_empty_n,
        mat0_rows_V_read => Block_Mat_exit2022_p_U0_mat0_rows_V_read,
        mat0_cols_V_dout => mat0_cols_V_c42_dout,
        mat0_cols_V_empty_n => mat0_cols_V_c42_empty_n,
        mat0_cols_V_read => Block_Mat_exit2022_p_U0_mat0_cols_V_read,
        mat0_data_stream_0_V_dout => mat0_data_stream_0_s_dout,
        mat0_data_stream_0_V_empty_n => mat0_data_stream_0_s_empty_n,
        mat0_data_stream_0_V_read => Block_Mat_exit2022_p_U0_mat0_data_stream_0_V_read,
        arr0_val_address0 => Block_Mat_exit2022_p_U0_arr0_val_address0,
        arr0_val_ce0 => Block_Mat_exit2022_p_U0_arr0_val_ce0,
        arr0_val_we0 => Block_Mat_exit2022_p_U0_arr0_val_we0,
        arr0_val_d0 => Block_Mat_exit2022_p_U0_arr0_val_d0,
        arr0_rows_out_din => Block_Mat_exit2022_p_U0_arr0_rows_out_din,
        arr0_rows_out_full_n => arr0_rows_c_full_n,
        arr0_rows_out_write => Block_Mat_exit2022_p_U0_arr0_rows_out_write,
        arr0_cols_out_din => Block_Mat_exit2022_p_U0_arr0_cols_out_din,
        arr0_cols_out_full_n => arr0_cols_c_full_n,
        arr0_cols_out_write => Block_Mat_exit2022_p_U0_arr0_cols_out_write,
        ap_return_0 => Block_Mat_exit2022_p_U0_ap_return_0,
        ap_return_1 => Block_Mat_exit2022_p_U0_ap_return_1);

    Resize_U0 : component Resize
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Resize_U0_ap_start,
        start_full_n => start_for_Block_Mat_exit2027_p_U0_full_n,
        ap_done => Resize_U0_ap_done,
        ap_continue => Resize_U0_ap_continue,
        ap_idle => Resize_U0_ap_idle,
        ap_ready => Resize_U0_ap_ready,
        start_out => Resize_U0_start_out,
        start_write => Resize_U0_start_write,
        src_val_address0 => Resize_U0_src_val_address0,
        src_val_ce0 => Resize_U0_src_val_ce0,
        src_val_q0 => arr0_val_t_q0,
        src_val_address1 => Resize_U0_src_val_address1,
        src_val_ce1 => Resize_U0_src_val_ce1,
        src_val_q1 => arr0_val_t_q1,
        src_rows_dout => arr0_rows_c_dout,
        src_rows_empty_n => arr0_rows_c_empty_n,
        src_rows_read => Resize_U0_src_rows_read,
        src_cols_dout => arr0_cols_c_dout,
        src_cols_empty_n => arr0_cols_c_empty_n,
        src_cols_read => Resize_U0_src_cols_read,
        dst_val_address0 => Resize_U0_dst_val_address0,
        dst_val_ce0 => Resize_U0_dst_val_ce0,
        dst_val_we0 => Resize_U0_dst_val_we0,
        dst_val_d0 => Resize_U0_dst_val_d0,
        scale => tmp_4_loc_channel_dout,
        method => tmp_5_loc_channel_dout,
        dst_rows_din => Resize_U0_dst_rows_din,
        dst_rows_full_n => arr1_rows_c_full_n,
        dst_rows_write => Resize_U0_dst_rows_write,
        dst_cols_din => Resize_U0_dst_cols_din,
        dst_cols_full_n => arr1_cols_c_full_n,
        dst_cols_write => Resize_U0_dst_cols_write);

    Block_Mat_exit2027_p_U0 : component Block_Mat_exit2027_p
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_Mat_exit2027_p_U0_ap_start,
        ap_done => Block_Mat_exit2027_p_U0_ap_done,
        ap_continue => Block_Mat_exit2027_p_U0_ap_continue,
        ap_idle => Block_Mat_exit2027_p_U0_ap_idle,
        ap_ready => Block_Mat_exit2027_p_U0_ap_ready,
        arr1_rows_dout => arr1_rows_c_dout,
        arr1_rows_empty_n => arr1_rows_c_empty_n,
        arr1_rows_read => Block_Mat_exit2027_p_U0_arr1_rows_read,
        rows1 => Block_Mat_exit2027_p_U0_rows1,
        rows1_ap_vld => Block_Mat_exit2027_p_U0_rows1_ap_vld,
        arr1_rows_out_din => Block_Mat_exit2027_p_U0_arr1_rows_out_din,
        arr1_rows_out_full_n => arr1_rows_c43_full_n,
        arr1_rows_out_write => Block_Mat_exit2027_p_U0_arr1_rows_out_write,
        ap_return => Block_Mat_exit2027_p_U0_ap_return);

    Block_Mat_exit2030_p_U0 : component Block_Mat_exit2030_p
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Block_Mat_exit2030_p_U0_ap_start,
        ap_done => Block_Mat_exit2030_p_U0_ap_done,
        ap_continue => Block_Mat_exit2030_p_U0_ap_continue,
        ap_idle => Block_Mat_exit2030_p_U0_ap_idle,
        ap_ready => Block_Mat_exit2030_p_U0_ap_ready,
        arr1_cols_dout => arr1_cols_c_dout,
        arr1_cols_empty_n => arr1_cols_c_empty_n,
        arr1_cols_read => Block_Mat_exit2030_p_U0_arr1_cols_read,
        cols1 => Block_Mat_exit2030_p_U0_cols1,
        cols1_ap_vld => Block_Mat_exit2030_p_U0_cols1_ap_vld,
        p_read => val_assign_loc_chann_dout,
        arr1_cols_out_din => Block_Mat_exit2030_p_U0_arr1_cols_out_din,
        arr1_cols_out_full_n => arr1_cols_c44_full_n,
        arr1_cols_out_write => Block_Mat_exit2030_p_U0_arr1_cols_out_write,
        ap_return_0 => Block_Mat_exit2030_p_U0_ap_return_0,
        ap_return_1 => Block_Mat_exit2030_p_U0_ap_return_1);

    Array2D2Mat_U0 : component Array2D2Mat
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Array2D2Mat_U0_ap_start,
        start_full_n => start_for_Mat2AXIvideo_U0_full_n,
        ap_done => Array2D2Mat_U0_ap_done,
        ap_continue => Array2D2Mat_U0_ap_continue,
        ap_idle => Array2D2Mat_U0_ap_idle,
        ap_ready => Array2D2Mat_U0_ap_ready,
        start_out => Array2D2Mat_U0_start_out,
        start_write => Array2D2Mat_U0_start_write,
        arr_val_address0 => Array2D2Mat_U0_arr_val_address0,
        arr_val_ce0 => Array2D2Mat_U0_arr_val_ce0,
        arr_val_q0 => arr1_val_t_q0,
        arr_rows_dout => arr1_rows_c43_dout,
        arr_rows_empty_n => arr1_rows_c43_empty_n,
        arr_rows_read => Array2D2Mat_U0_arr_rows_read,
        arr_cols_dout => arr1_cols_c44_dout,
        arr_cols_empty_n => arr1_cols_c44_empty_n,
        arr_cols_read => Array2D2Mat_U0_arr_cols_read,
        param_val_0_V_read => param1_val_0_V_dout,
        param_val_1_V_read => param1_val_1_V_dout,
        mat_data_stream_V_din => Array2D2Mat_U0_mat_data_stream_V_din,
        mat_data_stream_V_full_n => mat1_data_stream_0_s_full_n,
        mat_data_stream_V_write => Array2D2Mat_U0_mat_data_stream_V_write,
        mat_rows_V_din => Array2D2Mat_U0_mat_rows_V_din,
        mat_rows_V_full_n => mat1_rows_V_c_full_n,
        mat_rows_V_write => Array2D2Mat_U0_mat_rows_V_write,
        mat_cols_V_din => Array2D2Mat_U0_mat_cols_V_din,
        mat_cols_V_full_n => mat1_cols_V_c_full_n,
        mat_cols_V_write => Array2D2Mat_U0_mat_cols_V_write);

    Mat2AXIvideo_U0 : component Mat2AXIvideo
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => Mat2AXIvideo_U0_ap_start,
        ap_done => Mat2AXIvideo_U0_ap_done,
        ap_continue => Mat2AXIvideo_U0_ap_continue,
        ap_idle => Mat2AXIvideo_U0_ap_idle,
        ap_ready => Mat2AXIvideo_U0_ap_ready,
        img_rows_V_dout => mat1_rows_V_c_dout,
        img_rows_V_empty_n => mat1_rows_V_c_empty_n,
        img_rows_V_read => Mat2AXIvideo_U0_img_rows_V_read,
        img_cols_V_dout => mat1_cols_V_c_dout,
        img_cols_V_empty_n => mat1_cols_V_c_empty_n,
        img_cols_V_read => Mat2AXIvideo_U0_img_cols_V_read,
        img_data_stream_V_dout => mat1_data_stream_0_s_dout,
        img_data_stream_V_empty_n => mat1_data_stream_0_s_empty_n,
        img_data_stream_V_read => Mat2AXIvideo_U0_img_data_stream_V_read,
        M_AXIS_TDATA => Mat2AXIvideo_U0_M_AXIS_TDATA,
        M_AXIS_TVALID => Mat2AXIvideo_U0_M_AXIS_TVALID,
        M_AXIS_TREADY => M_AXIS_TREADY,
        M_AXIS_TKEEP => Mat2AXIvideo_U0_M_AXIS_TKEEP,
        M_AXIS_TSTRB => Mat2AXIvideo_U0_M_AXIS_TSTRB,
        M_AXIS_TUSER => Mat2AXIvideo_U0_M_AXIS_TUSER,
        M_AXIS_TLAST => Mat2AXIvideo_U0_M_AXIS_TLAST,
        M_AXIS_TID => Mat2AXIvideo_U0_M_AXIS_TID,
        M_AXIS_TDEST => Mat2AXIvideo_U0_M_AXIS_TDEST);

    mat0_rows_V_c_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit20_pro_U0_mat0_rows_V_out_din,
        if_full_n => mat0_rows_V_c_full_n,
        if_write => Block_Mat_exit20_pro_U0_mat0_rows_V_out_write,
        if_dout => mat0_rows_V_c_dout,
        if_empty_n => mat0_rows_V_c_empty_n,
        if_read => AXIvideo2Mat_U0_img_rows_V_read);

    mat0_cols_V_c_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit20_pro_U0_mat0_cols_V_out_din,
        if_full_n => mat0_cols_V_c_full_n,
        if_write => Block_Mat_exit20_pro_U0_mat0_cols_V_out_write,
        if_dout => mat0_cols_V_c_dout,
        if_empty_n => mat0_cols_V_c_empty_n,
        if_read => AXIvideo2Mat_U0_img_cols_V_read);

    mat0_data_stream_0_s_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat_U0_img_data_stream_V_din,
        if_full_n => mat0_data_stream_0_s_full_n,
        if_write => AXIvideo2Mat_U0_img_data_stream_V_write,
        if_dout => mat0_data_stream_0_s_dout,
        if_empty_n => mat0_data_stream_0_s_empty_n,
        if_read => Block_Mat_exit2022_p_U0_mat0_data_stream_0_V_read);

    mat0_rows_V_c41_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat_U0_img_rows_V_out_din,
        if_full_n => mat0_rows_V_c41_full_n,
        if_write => AXIvideo2Mat_U0_img_rows_V_out_write,
        if_dout => mat0_rows_V_c41_dout,
        if_empty_n => mat0_rows_V_c41_empty_n,
        if_read => Block_Mat_exit2022_p_U0_mat0_rows_V_read);

    mat0_cols_V_c42_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => AXIvideo2Mat_U0_img_cols_V_out_din,
        if_full_n => mat0_cols_V_c42_full_n,
        if_write => AXIvideo2Mat_U0_img_cols_V_out_write,
        if_dout => mat0_cols_V_c42_dout,
        if_empty_n => mat0_cols_V_c42_empty_n,
        if_read => Block_Mat_exit2022_p_U0_mat0_cols_V_read);

    arr0_rows_c_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit2022_p_U0_arr0_rows_out_din,
        if_full_n => arr0_rows_c_full_n,
        if_write => Block_Mat_exit2022_p_U0_arr0_rows_out_write,
        if_dout => arr0_rows_c_dout,
        if_empty_n => arr0_rows_c_empty_n,
        if_read => Resize_U0_src_rows_read);

    arr0_cols_c_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit2022_p_U0_arr0_cols_out_din,
        if_full_n => arr0_cols_c_full_n,
        if_write => Block_Mat_exit2022_p_U0_arr0_cols_out_write,
        if_dout => arr0_cols_c_dout,
        if_empty_n => arr0_cols_c_empty_n,
        if_read => Resize_U0_src_cols_read);

    tmp_4_loc_channel_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit2022_p_U0_ap_return_0,
        if_full_n => tmp_4_loc_channel_full_n,
        if_write => ap_channel_done_tmp_4_loc_channel,
        if_dout => tmp_4_loc_channel_dout,
        if_empty_n => tmp_4_loc_channel_empty_n,
        if_read => Resize_U0_ap_ready);

    tmp_5_loc_channel_U : component fifo_w2_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit2022_p_U0_ap_return_1,
        if_full_n => tmp_5_loc_channel_full_n,
        if_write => ap_channel_done_tmp_5_loc_channel,
        if_dout => tmp_5_loc_channel_dout,
        if_empty_n => tmp_5_loc_channel_empty_n,
        if_read => Resize_U0_ap_ready);

    arr1_rows_c_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Resize_U0_dst_rows_din,
        if_full_n => arr1_rows_c_full_n,
        if_write => Resize_U0_dst_rows_write,
        if_dout => arr1_rows_c_dout,
        if_empty_n => arr1_rows_c_empty_n,
        if_read => Block_Mat_exit2027_p_U0_arr1_rows_read);

    arr1_cols_c_U : component fifo_w32_d3_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Resize_U0_dst_cols_din,
        if_full_n => arr1_cols_c_full_n,
        if_write => Resize_U0_dst_cols_write,
        if_dout => arr1_cols_c_dout,
        if_empty_n => arr1_cols_c_empty_n,
        if_read => Block_Mat_exit2030_p_U0_arr1_cols_read);

    arr1_rows_c43_U : component fifo_w32_d3_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit2027_p_U0_arr1_rows_out_din,
        if_full_n => arr1_rows_c43_full_n,
        if_write => Block_Mat_exit2027_p_U0_arr1_rows_out_write,
        if_dout => arr1_rows_c43_dout,
        if_empty_n => arr1_rows_c43_empty_n,
        if_read => Array2D2Mat_U0_arr_rows_read);

    val_assign_loc_chann_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit2027_p_U0_ap_return,
        if_full_n => val_assign_loc_chann_full_n,
        if_write => ap_channel_done_val_assign_loc_chann,
        if_dout => val_assign_loc_chann_dout,
        if_empty_n => val_assign_loc_chann_empty_n,
        if_read => Block_Mat_exit2030_p_U0_ap_ready);

    arr1_cols_c44_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit2030_p_U0_arr1_cols_out_din,
        if_full_n => arr1_cols_c44_full_n,
        if_write => Block_Mat_exit2030_p_U0_arr1_cols_out_write,
        if_dout => arr1_cols_c44_dout,
        if_empty_n => arr1_cols_c44_empty_n,
        if_read => Array2D2Mat_U0_arr_cols_read);

    param1_val_0_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit2030_p_U0_ap_return_0,
        if_full_n => param1_val_0_V_full_n,
        if_write => ap_channel_done_param1_val_0_V,
        if_dout => param1_val_0_V_dout,
        if_empty_n => param1_val_0_V_empty_n,
        if_read => Array2D2Mat_U0_ap_ready);

    param1_val_1_V_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_Mat_exit2030_p_U0_ap_return_1,
        if_full_n => param1_val_1_V_full_n,
        if_write => ap_channel_done_param1_val_1_V,
        if_dout => param1_val_1_V_dout,
        if_empty_n => param1_val_1_V_empty_n,
        if_read => Array2D2Mat_U0_ap_ready);

    mat1_data_stream_0_s_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Array2D2Mat_U0_mat_data_stream_V_din,
        if_full_n => mat1_data_stream_0_s_full_n,
        if_write => Array2D2Mat_U0_mat_data_stream_V_write,
        if_dout => mat1_data_stream_0_s_dout,
        if_empty_n => mat1_data_stream_0_s_empty_n,
        if_read => Mat2AXIvideo_U0_img_data_stream_V_read);

    mat1_rows_V_c_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Array2D2Mat_U0_mat_rows_V_din,
        if_full_n => mat1_rows_V_c_full_n,
        if_write => Array2D2Mat_U0_mat_rows_V_write,
        if_dout => mat1_rows_V_c_dout,
        if_empty_n => mat1_rows_V_c_empty_n,
        if_read => Mat2AXIvideo_U0_img_rows_V_read);

    mat1_cols_V_c_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Array2D2Mat_U0_mat_cols_V_din,
        if_full_n => mat1_cols_V_c_full_n,
        if_write => Array2D2Mat_U0_mat_cols_V_write,
        if_dout => mat1_cols_V_c_dout,
        if_empty_n => mat1_cols_V_c_empty_n,
        if_read => Mat2AXIvideo_U0_img_cols_V_read);

    start_for_Block_Mhbi_U : component start_for_Block_Mhbi
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Block_Mat_exit2022_p_U0_din,
        if_full_n => start_for_Block_Mat_exit2022_p_U0_full_n,
        if_write => AXIvideo2Mat_U0_start_write,
        if_dout => start_for_Block_Mat_exit2022_p_U0_dout,
        if_empty_n => start_for_Block_Mat_exit2022_p_U0_empty_n,
        if_read => Block_Mat_exit2022_p_U0_ap_ready);

    start_for_Block_Mibs_U : component start_for_Block_Mibs
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Block_Mat_exit2027_p_U0_din,
        if_full_n => start_for_Block_Mat_exit2027_p_U0_full_n,
        if_write => Resize_U0_start_write,
        if_dout => start_for_Block_Mat_exit2027_p_U0_dout,
        if_empty_n => start_for_Block_Mat_exit2027_p_U0_empty_n,
        if_read => Block_Mat_exit2027_p_U0_ap_ready);

    start_for_Mat2AXIjbC_U : component start_for_Mat2AXIjbC
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Mat2AXIvideo_U0_din,
        if_full_n => start_for_Mat2AXIvideo_U0_full_n,
        if_write => Array2D2Mat_U0_start_write,
        if_dout => start_for_Mat2AXIvideo_U0_dout,
        if_empty_n => start_for_Mat2AXIvideo_U0_empty_n,
        if_read => Mat2AXIvideo_U0_ap_ready);





    ap_sync_reg_AXIvideo2Mat_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_AXIvideo2Mat_U0_ap_ready <= ap_sync_AXIvideo2Mat_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_Block_Mat_exit20_pro_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_Block_Mat_exit20_pro_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_Block_Mat_exit20_pro_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_Block_Mat_exit20_pro_U0_ap_ready <= ap_sync_Block_Mat_exit20_pro_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_arr0_val_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_arr0_val <= ap_const_logic_0;
            else
                if (((Block_Mat_exit2022_p_U0_ap_done and Block_Mat_exit2022_p_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_arr0_val <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_arr0_val <= ap_sync_channel_write_arr0_val;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_param1_val_0_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_param1_val_0_V <= ap_const_logic_0;
            else
                if (((Block_Mat_exit2030_p_U0_ap_done and Block_Mat_exit2030_p_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_param1_val_0_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_param1_val_0_V <= ap_sync_channel_write_param1_val_0_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_param1_val_1_V_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_param1_val_1_V <= ap_const_logic_0;
            else
                if (((Block_Mat_exit2030_p_U0_ap_done and Block_Mat_exit2030_p_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_param1_val_1_V <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_param1_val_1_V <= ap_sync_channel_write_param1_val_1_V;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_tmp_4_loc_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_tmp_4_loc_channel <= ap_const_logic_0;
            else
                if (((Block_Mat_exit2022_p_U0_ap_done and Block_Mat_exit2022_p_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_tmp_4_loc_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_tmp_4_loc_channel <= ap_sync_channel_write_tmp_4_loc_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_tmp_5_loc_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_tmp_5_loc_channel <= ap_const_logic_0;
            else
                if (((Block_Mat_exit2022_p_U0_ap_done and Block_Mat_exit2022_p_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_tmp_5_loc_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_tmp_5_loc_channel <= ap_sync_channel_write_tmp_5_loc_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_val_assign_loc_chann_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_sync_reg_channel_write_val_assign_loc_chann <= ap_const_logic_0;
            else
                if (((Block_Mat_exit2027_p_U0_ap_done and Block_Mat_exit2027_p_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_val_assign_loc_chann <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_val_assign_loc_chann <= ap_sync_channel_write_val_assign_loc_chann;
                end if; 
            end if;
        end if;
    end process;


    AXIvideo2Mat_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_0 = AXIvideo2Mat_U0_ap_ready) and (ap_sync_ready = ap_const_logic_1))) then 
                AXIvideo2Mat_U0_ap_ready_count <= std_logic_vector(unsigned(AXIvideo2Mat_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_const_logic_1 = AXIvideo2Mat_U0_ap_ready) and (ap_sync_ready = ap_const_logic_0))) then 
                AXIvideo2Mat_U0_ap_ready_count <= std_logic_vector(unsigned(AXIvideo2Mat_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    Block_Mat_exit20_pro_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_0 = Block_Mat_exit20_pro_U0_ap_ready) and (ap_sync_ready = ap_const_logic_1))) then 
                Block_Mat_exit20_pro_U0_ap_ready_count <= std_logic_vector(unsigned(Block_Mat_exit20_pro_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((ap_const_logic_1 = Block_Mat_exit20_pro_U0_ap_ready) and (ap_sync_ready = ap_const_logic_0))) then 
                Block_Mat_exit20_pro_U0_ap_ready_count <= std_logic_vector(unsigned(Block_Mat_exit20_pro_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;
    AXIvideo2Mat_U0_ap_continue <= ap_const_logic_1;
    AXIvideo2Mat_U0_ap_start <= ((ap_sync_reg_AXIvideo2Mat_U0_ap_ready xor ap_const_logic_1) and ap_start);
    Array2D2Mat_U0_ap_continue <= ap_const_logic_1;
    Array2D2Mat_U0_ap_start <= (param1_val_1_V_empty_n and param1_val_0_V_empty_n and arr1_val_t_empty_n);
    Block_Mat_exit2022_p_U0_ap_continue <= (ap_sync_channel_write_tmp_5_loc_channel and ap_sync_channel_write_tmp_4_loc_channel and ap_sync_channel_write_arr0_val);
    Block_Mat_exit2022_p_U0_ap_start <= start_for_Block_Mat_exit2022_p_U0_empty_n;
    Block_Mat_exit2022_p_U0_arr0_val_full_n <= arr0_val_i_full_n;
    Block_Mat_exit2022_p_U0_start_full_n <= ap_const_logic_1;
    Block_Mat_exit2022_p_U0_start_write <= ap_const_logic_0;
    Block_Mat_exit2027_p_U0_ap_continue <= (ap_sync_continue and ap_sync_channel_write_val_assign_loc_chann);
    Block_Mat_exit2027_p_U0_ap_start <= start_for_Block_Mat_exit2027_p_U0_empty_n;
    Block_Mat_exit2027_p_U0_start_full_n <= ap_const_logic_1;
    Block_Mat_exit2027_p_U0_start_write <= ap_const_logic_0;
    Block_Mat_exit2030_p_U0_ap_continue <= (ap_sync_continue and ap_sync_channel_write_param1_val_1_V and ap_sync_channel_write_param1_val_0_V);
    Block_Mat_exit2030_p_U0_ap_start <= val_assign_loc_chann_empty_n;
    Block_Mat_exit2030_p_U0_start_full_n <= ap_const_logic_1;
    Block_Mat_exit2030_p_U0_start_write <= ap_const_logic_0;
    Block_Mat_exit20_pro_U0_ap_continue <= ap_const_logic_1;
    Block_Mat_exit20_pro_U0_ap_start <= ((ap_sync_reg_Block_Mat_exit20_pro_U0_ap_ready xor ap_const_logic_1) and ap_start);
    Block_Mat_exit20_pro_U0_start_full_n <= ap_const_logic_1;
    Block_Mat_exit20_pro_U0_start_write <= ap_const_logic_0;
    M_AXIS_TDATA <= Mat2AXIvideo_U0_M_AXIS_TDATA;
    M_AXIS_TDEST <= Mat2AXIvideo_U0_M_AXIS_TDEST;
    M_AXIS_TID <= Mat2AXIvideo_U0_M_AXIS_TID;
    M_AXIS_TKEEP <= Mat2AXIvideo_U0_M_AXIS_TKEEP;
    M_AXIS_TLAST <= Mat2AXIvideo_U0_M_AXIS_TLAST;
    M_AXIS_TSTRB <= Mat2AXIvideo_U0_M_AXIS_TSTRB;
    M_AXIS_TUSER <= Mat2AXIvideo_U0_M_AXIS_TUSER;
    M_AXIS_TVALID <= Mat2AXIvideo_U0_M_AXIS_TVALID;
    Mat2AXIvideo_U0_ap_continue <= ap_sync_done;
    Mat2AXIvideo_U0_ap_start <= start_for_Mat2AXIvideo_U0_empty_n;
    Mat2AXIvideo_U0_start_full_n <= ap_const_logic_1;
    Mat2AXIvideo_U0_start_write <= ap_const_logic_0;
    Resize_U0_ap_continue <= arr1_val_i_full_n;
    Resize_U0_ap_start <= (tmp_5_loc_channel_empty_n and tmp_4_loc_channel_empty_n and arr0_val_t_empty_n);
    Resize_U0_dst_val_full_n <= arr1_val_i_full_n;
    S_AXIS_TREADY <= AXIvideo2Mat_U0_S_AXIS_TREADY;
    ap_channel_done_arr0_val <= ((ap_sync_reg_channel_write_arr0_val xor ap_const_logic_1) and Block_Mat_exit2022_p_U0_ap_done);
    ap_channel_done_arr1_val <= Resize_U0_ap_done;
    ap_channel_done_param1_val_0_V <= ((ap_sync_reg_channel_write_param1_val_0_V xor ap_const_logic_1) and Block_Mat_exit2030_p_U0_ap_done);
    ap_channel_done_param1_val_1_V <= ((ap_sync_reg_channel_write_param1_val_1_V xor ap_const_logic_1) and Block_Mat_exit2030_p_U0_ap_done);
    ap_channel_done_tmp_4_loc_channel <= ((ap_sync_reg_channel_write_tmp_4_loc_channel xor ap_const_logic_1) and Block_Mat_exit2022_p_U0_ap_done);
    ap_channel_done_tmp_5_loc_channel <= ((ap_sync_reg_channel_write_tmp_5_loc_channel xor ap_const_logic_1) and Block_Mat_exit2022_p_U0_ap_done);
    ap_channel_done_val_assign_loc_chann <= ((ap_sync_reg_channel_write_val_assign_loc_chann xor ap_const_logic_1) and Block_Mat_exit2027_p_U0_ap_done);
    ap_done <= ap_sync_done;
    ap_idle <= ((param1_val_1_V_empty_n xor ap_const_logic_1) and (param1_val_0_V_empty_n xor ap_const_logic_1) and (val_assign_loc_chann_empty_n xor ap_const_logic_1) and (tmp_5_loc_channel_empty_n xor ap_const_logic_1) and (tmp_4_loc_channel_empty_n xor ap_const_logic_1) and (arr1_val_t_empty_n xor ap_const_logic_1) and (arr0_val_t_empty_n xor ap_const_logic_1) and Resize_U0_ap_idle and Mat2AXIvideo_U0_ap_idle and Block_Mat_exit20_pro_U0_ap_idle and Block_Mat_exit2030_p_U0_ap_idle and Block_Mat_exit2027_p_U0_ap_idle and Block_Mat_exit2022_p_U0_ap_idle and Array2D2Mat_U0_ap_idle and AXIvideo2Mat_U0_ap_idle);
    ap_ready <= ap_sync_ready;

    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    ap_sync_AXIvideo2Mat_U0_ap_ready <= (ap_sync_reg_AXIvideo2Mat_U0_ap_ready or AXIvideo2Mat_U0_ap_ready);
    ap_sync_Block_Mat_exit20_pro_U0_ap_ready <= (ap_sync_reg_Block_Mat_exit20_pro_U0_ap_ready or Block_Mat_exit20_pro_U0_ap_ready);
    ap_sync_channel_write_arr0_val <= ((ap_channel_done_arr0_val and Block_Mat_exit2022_p_U0_arr0_val_full_n) or ap_sync_reg_channel_write_arr0_val);
    ap_sync_channel_write_param1_val_0_V <= ((param1_val_0_V_full_n and ap_channel_done_param1_val_0_V) or ap_sync_reg_channel_write_param1_val_0_V);
    ap_sync_channel_write_param1_val_1_V <= ((param1_val_1_V_full_n and ap_channel_done_param1_val_1_V) or ap_sync_reg_channel_write_param1_val_1_V);
    ap_sync_channel_write_tmp_4_loc_channel <= ((tmp_4_loc_channel_full_n and ap_channel_done_tmp_4_loc_channel) or ap_sync_reg_channel_write_tmp_4_loc_channel);
    ap_sync_channel_write_tmp_5_loc_channel <= ((tmp_5_loc_channel_full_n and ap_channel_done_tmp_5_loc_channel) or ap_sync_reg_channel_write_tmp_5_loc_channel);
    ap_sync_channel_write_val_assign_loc_chann <= ((val_assign_loc_chann_full_n and ap_channel_done_val_assign_loc_chann) or ap_sync_reg_channel_write_val_assign_loc_chann);
    ap_sync_continue <= ap_sync_done;
    ap_sync_done <= (Mat2AXIvideo_U0_ap_done and Block_Mat_exit2030_p_U0_ap_done and Block_Mat_exit2027_p_U0_ap_done);
    ap_sync_ready <= (ap_sync_Block_Mat_exit20_pro_U0_ap_ready and ap_sync_AXIvideo2Mat_U0_ap_ready);
    arr0_val_t_d1 <= ap_const_lv8_0;
    arr0_val_t_we1 <= ap_const_logic_0;
    cols1 <= Block_Mat_exit2030_p_U0_cols1;
    rows1 <= Block_Mat_exit2027_p_U0_rows1;
    start_for_Block_Mat_exit2022_p_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Block_Mat_exit2027_p_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Mat2AXIvideo_U0_din <= (0=>ap_const_logic_1, others=>'-');
end behav;

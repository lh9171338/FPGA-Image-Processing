// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Mat2Array2D_HH_
#define _Mat2Array2D_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "imgproc_mux_42_32bkb.h"

namespace ap_rtl {

struct Mat2Array2D : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > mat_rows_V_read;
    sc_in< sc_lv<32> > mat_cols_V_read;
    sc_in< sc_lv<8> > mat_data_stream_V_dout;
    sc_in< sc_logic > mat_data_stream_V_empty_n;
    sc_out< sc_logic > mat_data_stream_V_read;
    sc_out< sc_lv<16> > arr_val_address0;
    sc_out< sc_logic > arr_val_ce0;
    sc_out< sc_logic > arr_val_we0;
    sc_out< sc_lv<8> > arr_val_d0;
    sc_out< sc_lv<32> > ap_return_0;
    sc_out< sc_lv<32> > ap_return_1;
    sc_out< sc_lv<32> > ap_return_2;
    sc_out< sc_lv<32> > ap_return_3;


    // Module declarations
    Mat2Array2D(sc_module_name name);
    SC_HAS_PROCESS(Mat2Array2D);

    ~Mat2Array2D();

    sc_trace_file* mVcdFile;

    imgproc_mux_42_32bkb<1,1,32,32,32,32,2,32>* imgproc_mux_42_32bkb_U17;
    imgproc_mux_42_32bkb<1,1,32,32,32,32,2,32>* imgproc_mux_42_32bkb_U18;
    imgproc_mux_42_32bkb<1,1,32,32,32,32,2,32>* imgproc_mux_42_32bkb_U19;
    imgproc_mux_42_32bkb<1,1,32,32,32,32,2,32>* imgproc_mux_42_32bkb_U20;
    imgproc_mux_42_32bkb<1,1,32,32,32,32,2,32>* imgproc_mux_42_32bkb_U21;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > mat_data_stream_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<31> > j_reg_139;
    sc_signal< sc_lv<32> > rows_fu_156_p2;
    sc_signal< sc_lv<32> > rows_reg_526;
    sc_signal< sc_lv<1> > tmp_s_fu_176_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<31> > i_2_fu_181_p2;
    sc_signal< sc_lv<31> > i_2_reg_535;
    sc_signal< sc_lv<1> > tmp_2_fu_187_p2;
    sc_signal< sc_lv<1> > tmp_2_reg_540;
    sc_signal< sc_lv<18> > tmp_34_cast_fu_203_p3;
    sc_signal< sc_lv<18> > tmp_34_cast_reg_544;
    sc_signal< sc_lv<1> > tmp_5_fu_237_p2;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<31> > j_2_fu_242_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<18> > tmp_16_fu_252_p2;
    sc_signal< sc_lv<18> > tmp_16_reg_558;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_lv<31> > i_reg_128;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<64> > tmp_35_cast_fu_257_p1;
    sc_signal< sc_lv<32> > offset_fu_72;
    sc_signal< sc_lv<32> > offset_2_fu_439_p3;
    sc_signal< sc_lv<1> > icmp_fu_274_p2;
    sc_signal< sc_lv<32> > idx_fu_76;
    sc_signal< sc_lv<32> > idx_2_fu_431_p3;
    sc_signal< sc_lv<32> > param_val_3_V_fu_80;
    sc_signal< sc_lv<32> > param_val_3_V_2_fu_357_p6;
    sc_signal< sc_lv<32> > param_val_2_V_fu_84;
    sc_signal< sc_lv<32> > param_val_2_V_2_fu_371_p6;
    sc_signal< sc_lv<32> > param_val_1_V_fu_88;
    sc_signal< sc_lv<32> > param_val_1_V_2_fu_385_p6;
    sc_signal< sc_lv<32> > param_val_0_V_fu_92;
    sc_signal< sc_lv<32> > param_val_0_V_2_fu_399_p6;
    sc_signal< sc_lv<32> > i_cast_fu_172_p1;
    sc_signal< sc_lv<10> > tmp_63_fu_193_p1;
    sc_signal< sc_lv<10> > tmp_64_fu_197_p2;
    sc_signal< sc_lv<32> > j_cast_fu_233_p1;
    sc_signal< sc_lv<18> > tmp_67_fu_248_p1;
    sc_signal< sc_lv<30> > tmp_66_fu_264_p4;
    sc_signal< sc_lv<2> > tmp_68_fu_289_p1;
    sc_signal< sc_lv<2> > tmp_69_fu_307_p1;
    sc_signal< sc_lv<5> > tmp_70_fu_311_p3;
    sc_signal< sc_lv<32> > tmp_71_fu_319_p1;
    sc_signal< sc_lv<32> > tmp_72_fu_323_p2;
    sc_signal< sc_lv<32> > p_Val2_s_fu_293_p6;
    sc_signal< sc_lv<32> > tmp_73_fu_329_p2;
    sc_signal< sc_lv<32> > tmp_75_fu_341_p1;
    sc_signal< sc_lv<32> > tmp_74_fu_335_p2;
    sc_signal< sc_lv<32> > tmp_76_fu_345_p2;
    sc_signal< sc_lv<32> > p_Result_s_fu_351_p2;
    sc_signal< sc_lv<1> > tmp_9_fu_413_p2;
    sc_signal< sc_lv<32> > idx_1_fu_419_p2;
    sc_signal< sc_lv<32> > offset_1_fu_425_p2;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state5;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<10> ap_const_lv10_3FF;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<30> ap_const_lv30_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_FF;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state5();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_2();
    void thread_ap_return_3();
    void thread_arr_val_address0();
    void thread_arr_val_ce0();
    void thread_arr_val_d0();
    void thread_arr_val_we0();
    void thread_i_2_fu_181_p2();
    void thread_i_cast_fu_172_p1();
    void thread_icmp_fu_274_p2();
    void thread_idx_1_fu_419_p2();
    void thread_idx_2_fu_431_p3();
    void thread_j_2_fu_242_p2();
    void thread_j_cast_fu_233_p1();
    void thread_mat_data_stream_V_blk_n();
    void thread_mat_data_stream_V_read();
    void thread_offset_1_fu_425_p2();
    void thread_offset_2_fu_439_p3();
    void thread_p_Result_s_fu_351_p2();
    void thread_rows_fu_156_p2();
    void thread_tmp_16_fu_252_p2();
    void thread_tmp_2_fu_187_p2();
    void thread_tmp_34_cast_fu_203_p3();
    void thread_tmp_35_cast_fu_257_p1();
    void thread_tmp_5_fu_237_p2();
    void thread_tmp_63_fu_193_p1();
    void thread_tmp_64_fu_197_p2();
    void thread_tmp_66_fu_264_p4();
    void thread_tmp_67_fu_248_p1();
    void thread_tmp_68_fu_289_p1();
    void thread_tmp_69_fu_307_p1();
    void thread_tmp_70_fu_311_p3();
    void thread_tmp_71_fu_319_p1();
    void thread_tmp_72_fu_323_p2();
    void thread_tmp_73_fu_329_p2();
    void thread_tmp_74_fu_335_p2();
    void thread_tmp_75_fu_341_p1();
    void thread_tmp_76_fu_345_p2();
    void thread_tmp_9_fu_413_p2();
    void thread_tmp_s_fu_176_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif

// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Block_Mat_exit2022_p.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Block_Mat_exit2022_p::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Block_Mat_exit2022_p::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> Block_Mat_exit2022_p::ap_ST_fsm_state1 = "1";
const sc_lv<2> Block_Mat_exit2022_p::ap_ST_fsm_state2 = "10";
const sc_lv<32> Block_Mat_exit2022_p::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Block_Mat_exit2022_p::ap_const_lv32_1 = "1";
const bool Block_Mat_exit2022_p::ap_const_boolean_1 = true;

Block_Mat_exit2022_p::Block_Mat_exit2022_p(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_Mat2Array2D_fu_58 = new Mat2Array2D("grp_Mat2Array2D_fu_58");
    grp_Mat2Array2D_fu_58->ap_clk(ap_clk);
    grp_Mat2Array2D_fu_58->ap_rst(ap_rst);
    grp_Mat2Array2D_fu_58->ap_start(grp_Mat2Array2D_fu_58_ap_start);
    grp_Mat2Array2D_fu_58->ap_done(grp_Mat2Array2D_fu_58_ap_done);
    grp_Mat2Array2D_fu_58->ap_idle(grp_Mat2Array2D_fu_58_ap_idle);
    grp_Mat2Array2D_fu_58->ap_ready(grp_Mat2Array2D_fu_58_ap_ready);
    grp_Mat2Array2D_fu_58->mat_rows_V_read(mat0_rows_V_read_reg_108);
    grp_Mat2Array2D_fu_58->mat_cols_V_read(mat0_cols_V_read_reg_113);
    grp_Mat2Array2D_fu_58->mat_data_stream_V_dout(mat0_data_stream_0_V_dout);
    grp_Mat2Array2D_fu_58->mat_data_stream_V_empty_n(mat0_data_stream_0_V_empty_n);
    grp_Mat2Array2D_fu_58->mat_data_stream_V_read(grp_Mat2Array2D_fu_58_mat_data_stream_V_read);
    grp_Mat2Array2D_fu_58->arr_val_address0(grp_Mat2Array2D_fu_58_arr_val_address0);
    grp_Mat2Array2D_fu_58->arr_val_ce0(grp_Mat2Array2D_fu_58_arr_val_ce0);
    grp_Mat2Array2D_fu_58->arr_val_we0(grp_Mat2Array2D_fu_58_arr_val_we0);
    grp_Mat2Array2D_fu_58->arr_val_d0(grp_Mat2Array2D_fu_58_arr_val_d0);
    grp_Mat2Array2D_fu_58->ap_return_0(grp_Mat2Array2D_fu_58_ap_return_0);
    grp_Mat2Array2D_fu_58->ap_return_1(grp_Mat2Array2D_fu_58_ap_return_1);
    grp_Mat2Array2D_fu_58->ap_return_2(grp_Mat2Array2D_fu_58_ap_return_2);
    grp_Mat2Array2D_fu_58->ap_return_3(grp_Mat2Array2D_fu_58_ap_return_3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( mat0_rows_V_empty_n );
    sensitive << ( mat0_cols_V_empty_n );

    SC_METHOD(thread_ap_block_state1_ignore_call5);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( mat0_rows_V_empty_n );
    sensitive << ( mat0_cols_V_empty_n );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( arr0_rows_out_full_n );
    sensitive << ( arr0_cols_out_full_n );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( arr0_rows_out_full_n );
    sensitive << ( arr0_cols_out_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_Mat2Array2D_fu_58_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( arr0_rows_out_full_n );
    sensitive << ( arr0_cols_out_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_Mat2Array2D_fu_58_ap_done );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( arr0_rows_out_full_n );
    sensitive << ( arr0_cols_out_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_Mat2Array2D_fu_58_ap_done );
    sensitive << ( tmp_4_out_fu_88_p1 );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( arr0_rows_out_full_n );
    sensitive << ( arr0_cols_out_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_Mat2Array2D_fu_58_ap_done );
    sensitive << ( tmp_fu_92_p1 );

    SC_METHOD(thread_arr0_cols_out_blk_n);
    sensitive << ( arr0_cols_out_full_n );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_arr0_cols_out_din);
    sensitive << ( arr0_rows_out_full_n );
    sensitive << ( arr0_cols_out_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_Mat2Array2D_fu_58_ap_done );
    sensitive << ( grp_Mat2Array2D_fu_58_ap_return_1 );

    SC_METHOD(thread_arr0_cols_out_write);
    sensitive << ( arr0_rows_out_full_n );
    sensitive << ( arr0_cols_out_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_Mat2Array2D_fu_58_ap_done );

    SC_METHOD(thread_arr0_rows_out_blk_n);
    sensitive << ( arr0_rows_out_full_n );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_arr0_rows_out_din);
    sensitive << ( arr0_rows_out_full_n );
    sensitive << ( arr0_cols_out_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_Mat2Array2D_fu_58_ap_done );
    sensitive << ( grp_Mat2Array2D_fu_58_ap_return_0 );

    SC_METHOD(thread_arr0_rows_out_write);
    sensitive << ( arr0_rows_out_full_n );
    sensitive << ( arr0_cols_out_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_Mat2Array2D_fu_58_ap_done );

    SC_METHOD(thread_arr0_val_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_Mat2Array2D_fu_58_arr_val_address0 );

    SC_METHOD(thread_arr0_val_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_Mat2Array2D_fu_58_arr_val_ce0 );

    SC_METHOD(thread_arr0_val_d0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_Mat2Array2D_fu_58_arr_val_d0 );

    SC_METHOD(thread_arr0_val_we0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_Mat2Array2D_fu_58_arr_val_we0 );

    SC_METHOD(thread_grp_Mat2Array2D_fu_58_ap_start);
    sensitive << ( grp_Mat2Array2D_fu_58_ap_start_reg );

    SC_METHOD(thread_mat0_cols_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( mat0_cols_V_empty_n );

    SC_METHOD(thread_mat0_cols_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( mat0_rows_V_empty_n );
    sensitive << ( mat0_cols_V_empty_n );

    SC_METHOD(thread_mat0_data_stream_0_V_read);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_Mat2Array2D_fu_58_mat_data_stream_V_read );

    SC_METHOD(thread_mat0_rows_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( mat0_rows_V_empty_n );

    SC_METHOD(thread_mat0_rows_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( mat0_rows_V_empty_n );
    sensitive << ( mat0_cols_V_empty_n );

    SC_METHOD(thread_tmp_4_out_fu_88_p1);
    sensitive << ( grp_Mat2Array2D_fu_58_ap_return_2 );

    SC_METHOD(thread_tmp_fu_92_p1);
    sensitive << ( grp_Mat2Array2D_fu_58_ap_return_3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( mat0_rows_V_empty_n );
    sensitive << ( mat0_cols_V_empty_n );
    sensitive << ( arr0_rows_out_full_n );
    sensitive << ( arr0_cols_out_full_n );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( grp_Mat2Array2D_fu_58_ap_done );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "01";
    grp_Mat2Array2D_fu_58_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Block_Mat_exit2022_p_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, mat0_rows_V_dout, "(port)mat0_rows_V_dout");
    sc_trace(mVcdFile, mat0_rows_V_empty_n, "(port)mat0_rows_V_empty_n");
    sc_trace(mVcdFile, mat0_rows_V_read, "(port)mat0_rows_V_read");
    sc_trace(mVcdFile, mat0_cols_V_dout, "(port)mat0_cols_V_dout");
    sc_trace(mVcdFile, mat0_cols_V_empty_n, "(port)mat0_cols_V_empty_n");
    sc_trace(mVcdFile, mat0_cols_V_read, "(port)mat0_cols_V_read");
    sc_trace(mVcdFile, mat0_data_stream_0_V_dout, "(port)mat0_data_stream_0_V_dout");
    sc_trace(mVcdFile, mat0_data_stream_0_V_empty_n, "(port)mat0_data_stream_0_V_empty_n");
    sc_trace(mVcdFile, mat0_data_stream_0_V_read, "(port)mat0_data_stream_0_V_read");
    sc_trace(mVcdFile, arr0_val_address0, "(port)arr0_val_address0");
    sc_trace(mVcdFile, arr0_val_ce0, "(port)arr0_val_ce0");
    sc_trace(mVcdFile, arr0_val_we0, "(port)arr0_val_we0");
    sc_trace(mVcdFile, arr0_val_d0, "(port)arr0_val_d0");
    sc_trace(mVcdFile, arr0_rows_out_din, "(port)arr0_rows_out_din");
    sc_trace(mVcdFile, arr0_rows_out_full_n, "(port)arr0_rows_out_full_n");
    sc_trace(mVcdFile, arr0_rows_out_write, "(port)arr0_rows_out_write");
    sc_trace(mVcdFile, arr0_cols_out_din, "(port)arr0_cols_out_din");
    sc_trace(mVcdFile, arr0_cols_out_full_n, "(port)arr0_cols_out_full_n");
    sc_trace(mVcdFile, arr0_cols_out_write, "(port)arr0_cols_out_write");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, mat0_rows_V_blk_n, "mat0_rows_V_blk_n");
    sc_trace(mVcdFile, mat0_cols_V_blk_n, "mat0_cols_V_blk_n");
    sc_trace(mVcdFile, arr0_rows_out_blk_n, "arr0_rows_out_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, arr0_cols_out_blk_n, "arr0_cols_out_blk_n");
    sc_trace(mVcdFile, mat0_rows_V_read_reg_108, "mat0_rows_V_read_reg_108");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, mat0_cols_V_read_reg_113, "mat0_cols_V_read_reg_113");
    sc_trace(mVcdFile, grp_Mat2Array2D_fu_58_ap_start, "grp_Mat2Array2D_fu_58_ap_start");
    sc_trace(mVcdFile, grp_Mat2Array2D_fu_58_ap_done, "grp_Mat2Array2D_fu_58_ap_done");
    sc_trace(mVcdFile, grp_Mat2Array2D_fu_58_ap_idle, "grp_Mat2Array2D_fu_58_ap_idle");
    sc_trace(mVcdFile, grp_Mat2Array2D_fu_58_ap_ready, "grp_Mat2Array2D_fu_58_ap_ready");
    sc_trace(mVcdFile, grp_Mat2Array2D_fu_58_mat_data_stream_V_read, "grp_Mat2Array2D_fu_58_mat_data_stream_V_read");
    sc_trace(mVcdFile, grp_Mat2Array2D_fu_58_arr_val_address0, "grp_Mat2Array2D_fu_58_arr_val_address0");
    sc_trace(mVcdFile, grp_Mat2Array2D_fu_58_arr_val_ce0, "grp_Mat2Array2D_fu_58_arr_val_ce0");
    sc_trace(mVcdFile, grp_Mat2Array2D_fu_58_arr_val_we0, "grp_Mat2Array2D_fu_58_arr_val_we0");
    sc_trace(mVcdFile, grp_Mat2Array2D_fu_58_arr_val_d0, "grp_Mat2Array2D_fu_58_arr_val_d0");
    sc_trace(mVcdFile, grp_Mat2Array2D_fu_58_ap_return_0, "grp_Mat2Array2D_fu_58_ap_return_0");
    sc_trace(mVcdFile, grp_Mat2Array2D_fu_58_ap_return_1, "grp_Mat2Array2D_fu_58_ap_return_1");
    sc_trace(mVcdFile, grp_Mat2Array2D_fu_58_ap_return_2, "grp_Mat2Array2D_fu_58_ap_return_2");
    sc_trace(mVcdFile, grp_Mat2Array2D_fu_58_ap_return_3, "grp_Mat2Array2D_fu_58_ap_return_3");
    sc_trace(mVcdFile, grp_Mat2Array2D_fu_58_ap_start_reg, "grp_Mat2Array2D_fu_58_ap_start_reg");
    sc_trace(mVcdFile, ap_block_state1_ignore_call5, "ap_block_state1_ignore_call5");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, tmp_4_out_fu_88_p1, "tmp_4_out_fu_88_p1");
    sc_trace(mVcdFile, tmp_fu_92_p1, "tmp_fu_92_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

Block_Mat_exit2022_p::~Block_Mat_exit2022_p() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_Mat2Array2D_fu_58;
}

void Block_Mat_exit2022_p::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((!(esl_seteq<1,1,1>(grp_Mat2Array2D_fu_58_ap_done.read(), ap_const_logic_0) || esl_seteq<1,1,1>(arr0_cols_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(arr0_rows_out_full_n.read(), ap_const_logic_0)) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_Mat2Array2D_fu_58_ap_start_reg = ap_const_logic_0;
    } else {
        if ((!(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(mat0_cols_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(mat0_rows_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
            grp_Mat2Array2D_fu_58_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_Mat2Array2D_fu_58_ap_ready.read())) {
            grp_Mat2Array2D_fu_58_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((!(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(mat0_cols_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(mat0_rows_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        mat0_cols_V_read_reg_113 = mat0_cols_V_dout.read();
        mat0_rows_V_read_reg_108 = mat0_rows_V_dout.read();
    }
}

void Block_Mat_exit2022_p::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Block_Mat_exit2022_p::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Block_Mat_exit2022_p::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(mat0_cols_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(mat0_rows_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void Block_Mat_exit2022_p::thread_ap_block_state1_ignore_call5() {
    ap_block_state1_ignore_call5 = (esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(mat0_cols_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(mat0_rows_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void Block_Mat_exit2022_p::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(arr0_rows_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(arr0_cols_out_full_n.read(), ap_const_logic_0));
}

void Block_Mat_exit2022_p::thread_ap_done() {
    if ((!(esl_seteq<1,1,1>(grp_Mat2Array2D_fu_58_ap_done.read(), ap_const_logic_0) || esl_seteq<1,1,1>(arr0_cols_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(arr0_rows_out_full_n.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Block_Mat_exit2022_p::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Block_Mat_exit2022_p::thread_ap_ready() {
    if ((!(esl_seteq<1,1,1>(grp_Mat2Array2D_fu_58_ap_done.read(), ap_const_logic_0) || esl_seteq<1,1,1>(arr0_cols_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(arr0_rows_out_full_n.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Block_Mat_exit2022_p::thread_ap_return_0() {
    ap_return_0 = tmp_4_out_fu_88_p1.read();
}

void Block_Mat_exit2022_p::thread_ap_return_1() {
    ap_return_1 = tmp_fu_92_p1.read();
}

void Block_Mat_exit2022_p::thread_arr0_cols_out_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        arr0_cols_out_blk_n = arr0_cols_out_full_n.read();
    } else {
        arr0_cols_out_blk_n = ap_const_logic_1;
    }
}

void Block_Mat_exit2022_p::thread_arr0_cols_out_din() {
    arr0_cols_out_din = grp_Mat2Array2D_fu_58_ap_return_1.read();
}

void Block_Mat_exit2022_p::thread_arr0_cols_out_write() {
    if ((!(esl_seteq<1,1,1>(grp_Mat2Array2D_fu_58_ap_done.read(), ap_const_logic_0) || esl_seteq<1,1,1>(arr0_cols_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(arr0_rows_out_full_n.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        arr0_cols_out_write = ap_const_logic_1;
    } else {
        arr0_cols_out_write = ap_const_logic_0;
    }
}

void Block_Mat_exit2022_p::thread_arr0_rows_out_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        arr0_rows_out_blk_n = arr0_rows_out_full_n.read();
    } else {
        arr0_rows_out_blk_n = ap_const_logic_1;
    }
}

void Block_Mat_exit2022_p::thread_arr0_rows_out_din() {
    arr0_rows_out_din = grp_Mat2Array2D_fu_58_ap_return_0.read();
}

void Block_Mat_exit2022_p::thread_arr0_rows_out_write() {
    if ((!(esl_seteq<1,1,1>(grp_Mat2Array2D_fu_58_ap_done.read(), ap_const_logic_0) || esl_seteq<1,1,1>(arr0_cols_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(arr0_rows_out_full_n.read(), ap_const_logic_0)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        arr0_rows_out_write = ap_const_logic_1;
    } else {
        arr0_rows_out_write = ap_const_logic_0;
    }
}

void Block_Mat_exit2022_p::thread_arr0_val_address0() {
    arr0_val_address0 = grp_Mat2Array2D_fu_58_arr_val_address0.read();
}

void Block_Mat_exit2022_p::thread_arr0_val_ce0() {
    arr0_val_ce0 = grp_Mat2Array2D_fu_58_arr_val_ce0.read();
}

void Block_Mat_exit2022_p::thread_arr0_val_d0() {
    arr0_val_d0 = grp_Mat2Array2D_fu_58_arr_val_d0.read();
}

void Block_Mat_exit2022_p::thread_arr0_val_we0() {
    arr0_val_we0 = grp_Mat2Array2D_fu_58_arr_val_we0.read();
}

void Block_Mat_exit2022_p::thread_grp_Mat2Array2D_fu_58_ap_start() {
    grp_Mat2Array2D_fu_58_ap_start = grp_Mat2Array2D_fu_58_ap_start_reg.read();
}

void Block_Mat_exit2022_p::thread_mat0_cols_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        mat0_cols_V_blk_n = mat0_cols_V_empty_n.read();
    } else {
        mat0_cols_V_blk_n = ap_const_logic_1;
    }
}

void Block_Mat_exit2022_p::thread_mat0_cols_V_read() {
    if ((!(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(mat0_cols_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(mat0_rows_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        mat0_cols_V_read = ap_const_logic_1;
    } else {
        mat0_cols_V_read = ap_const_logic_0;
    }
}

void Block_Mat_exit2022_p::thread_mat0_data_stream_0_V_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        mat0_data_stream_0_V_read = grp_Mat2Array2D_fu_58_mat_data_stream_V_read.read();
    } else {
        mat0_data_stream_0_V_read = ap_const_logic_0;
    }
}

void Block_Mat_exit2022_p::thread_mat0_rows_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        mat0_rows_V_blk_n = mat0_rows_V_empty_n.read();
    } else {
        mat0_rows_V_blk_n = ap_const_logic_1;
    }
}

void Block_Mat_exit2022_p::thread_mat0_rows_V_read() {
    if ((!(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(mat0_cols_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(mat0_rows_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        mat0_rows_V_read = ap_const_logic_1;
    } else {
        mat0_rows_V_read = ap_const_logic_0;
    }
}

void Block_Mat_exit2022_p::thread_tmp_4_out_fu_88_p1() {
    tmp_4_out_fu_88_p1 = grp_Mat2Array2D_fu_58_ap_return_2.read();
}

void Block_Mat_exit2022_p::thread_tmp_fu_92_p1() {
    tmp_fu_92_p1 = grp_Mat2Array2D_fu_58_ap_return_3.read().range(2-1, 0);
}

void Block_Mat_exit2022_p::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((!(esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0) || esl_seteq<1,1,1>(mat0_cols_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(mat0_rows_V_empty_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(grp_Mat2Array2D_fu_58_ap_done.read(), ap_const_logic_0) || esl_seteq<1,1,1>(arr0_cols_out_full_n.read(), ap_const_logic_0) || esl_seteq<1,1,1>(arr0_rows_out_full_n.read(), ap_const_logic_0)) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        default : 
            ap_NS_fsm = "XX";
            break;
    }
}

}


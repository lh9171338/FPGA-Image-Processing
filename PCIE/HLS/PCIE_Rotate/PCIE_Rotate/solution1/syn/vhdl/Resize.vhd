-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Resize is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    src_val_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    src_val_ce0 : OUT STD_LOGIC;
    src_val_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    src_val_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    src_val_ce1 : OUT STD_LOGIC;
    src_val_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    src_rows_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    src_rows_empty_n : IN STD_LOGIC;
    src_rows_read : OUT STD_LOGIC;
    src_cols_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    src_cols_empty_n : IN STD_LOGIC;
    src_cols_read : OUT STD_LOGIC;
    dst_val_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    dst_val_ce0 : OUT STD_LOGIC;
    dst_val_we0 : OUT STD_LOGIC;
    dst_val_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    scale : IN STD_LOGIC_VECTOR (31 downto 0);
    method : IN STD_LOGIC_VECTOR (1 downto 0);
    dst_rows_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    dst_rows_full_n : IN STD_LOGIC;
    dst_rows_write : OUT STD_LOGIC;
    dst_cols_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    dst_cols_full_n : IN STD_LOGIC;
    dst_cols_write : OUT STD_LOGIC );
end;


architecture behav of Resize is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (44 downto 0) := "000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (44 downto 0) := "000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (44 downto 0) := "000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (44 downto 0) := "000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (44 downto 0) := "000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (44 downto 0) := "000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (44 downto 0) := "000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (44 downto 0) := "000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (44 downto 0) := "000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (44 downto 0) := "001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (44 downto 0) := "010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (44 downto 0) := "100000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_3F000000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111000000000000000000000000";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_10 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_const_lv12_FF0 : STD_LOGIC_VECTOR (11 downto 0) := "111111110000";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv34_100000000 : STD_LOGIC_VECTOR (33 downto 0) := "0100000000000000000000000000000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv33_8000 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000001000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv18_3FFFF : STD_LOGIC_VECTOR (17 downto 0) := "111111111111111111";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv32_10000 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010000000000000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal src_rows_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal src_cols_blk_n : STD_LOGIC;
    signal dst_rows_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal dst_cols_blk_n : STD_LOGIC;
    signal i_op_assign_3_reg_297 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_23_reg_308 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_1_reg_319 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_15_reg_330 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_369 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state42_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state44_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tmp_32_i_i_reg_1955 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state41_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state43_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state45_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_block_state1 : BOOLEAN;
    signal isneg_reg_1794 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_403_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_20_reg_1800 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_2_i_i_fu_407_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_i_i_reg_1805 : STD_LOGIC_VECTOR (0 downto 0);
    signal F2_fu_413_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_reg_1811 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal rows_reg_1824 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state30 : BOOLEAN;
    signal cols_reg_1834 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_359_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_i_reg_1844 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal grp_fu_362_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_i_i_reg_1849 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_351_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_i_i_reg_1854 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal grp_fu_355_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_i_i_reg_1859 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_341_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_reg_1864 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal grp_fu_346_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_1_reg_1869 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_33_fu_787_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_33_reg_1874 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state39 : BOOLEAN;
    signal p_Val2_34_fu_931_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_34_reg_1880 : STD_LOGIC_VECTOR (31 downto 0);
    signal iscale_V_fu_940_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal iscale_V_reg_1886 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_i_i_fu_944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_i_i_reg_1894 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_i_i_fu_950_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_i_i_reg_1898 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_956_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_30_reg_1902 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_29_fu_959_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_29_reg_1907 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_28_i_i_fu_966_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal i_1_fu_971_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_1_reg_1916 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_16_cast_fu_981_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_16_cast_reg_1921 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_2_fu_989_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_2_reg_1926 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_i_i_fu_998_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_1003_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_reg_1938 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_14_cast_fu_1013_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_14_cast_reg_1943 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_fu_1030_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal r_V_reg_1948 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_32_i_i_fu_1040_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_i_i_reg_1955_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_fu_1045_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal j_1_reg_1959 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_10_fu_1055_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_10_reg_1964 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_10_reg_1964_pp0_iter1_reg : STD_LOGIC_VECTOR (17 downto 0);
    signal next_mul1_fu_1060_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal next_mul1_reg_1969 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_25_fu_1186_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_25_reg_1974 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_27_fu_1199_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_27_reg_1979 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP2_V_1_cast_i_i_fu_1205_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal OP2_V_1_cast_i_i_reg_1984 : STD_LOGIC_VECTOR (47 downto 0);
    signal OP1_V_5_cast_i_i_fu_1209_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal OP1_V_5_cast_i_i_reg_1989 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_54_i_i_reg_1994 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_1375_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_14_reg_2009 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_15_fu_1381_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_15_reg_2014 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_48_i_i_reg_2019 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_50_i_i_reg_2024 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_i_i_reg_2029 : STD_LOGIC_VECTOR (31 downto 0);
    signal src_val_load_2_reg_2034 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_28_0_i_i_fu_1463_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_28_0_i_i_reg_2049 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_28_0_1_i_i_fu_1471_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_28_0_1_i_i_reg_2054 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_28_1_1_i_i_fu_1480_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_28_1_1_i_i_reg_2059 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_29_1_1_i_i_fu_1503_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_29_1_1_i_i_reg_2064 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_i_i_fu_1577_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_i_i_reg_2069 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state47_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state48_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal j_fu_1582_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal tmp_8_fu_1592_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_8_reg_2078 : STD_LOGIC_VECTOR (17 downto 0);
    signal next_mul_fu_1597_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state41 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state47 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal i_op_assign_2_reg_275 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal i_op_assign_reg_286 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal ap_phi_mux_i_op_assign_3_phi_fu_301_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_p_Val2_23_phi_fu_312_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_cast_fu_1291_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_27_cast_fu_1329_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_31_cast_fu_1451_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal tmp_32_cast_fu_1455_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_cast_fu_1509_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_21_cast_fu_1779_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal tmp_17_cast_fu_1784_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_5_fu_1564_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal d_assign_fu_365_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ireg_V_fu_373_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_V_fu_389_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_18_fu_377_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_4_i_i_fu_399_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_1_i_i_fu_419_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal p_Result_2_fu_426_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal man_V_1_fu_430_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_10_i_i_fu_443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_i_i_fu_448_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_12_i_i_fu_453_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_fu_458_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_2_fu_436_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_24_fu_485_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal sh_amt_cast_i_i_fu_466_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_i_i_fu_501_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_19_i_i_fu_505_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_23_fu_475_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_i_i_fu_470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp1_fu_528_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_demorgan_fu_539_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_544_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_i_i_fu_479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp7_fu_550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp8_fu_556_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp21_demorgan_fu_574_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_495_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_i_i_fu_522_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_fu_511_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp_fu_568_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp9_fu_562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_071_i_i_fu_515_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sel_tmp2_fu_533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_fu_600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_fu_592_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel3_fu_606_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_cond4_fu_614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond6_fu_628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel5_fu_620_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal newSel7_fu_634_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_s_fu_652_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_1_fu_673_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_73_i_i_i_i_i_fu_677_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal loc_V_fu_663_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i_i_i_i_cast_i_i_fu_691_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_fu_695_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_74_i_i_i_i_i_fu_709_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_fu_701_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_74_i_i_i_cast_i_s_fu_715_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_1_fu_719_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_1_i_i_i_ca_fu_727_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_assign_1_i_i_i_ca_1_fu_731_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_73_i_i_i_cast59_s_fu_687_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_75_i_i_i_i_i_fu_735_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_76_i_i_i_i_i_fu_739_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_12_fu_751_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_77_i_i_i_i_i_fu_745_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_6_fu_759_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_763_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_fu_773_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_fu_655_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_i_i_i_i_i_fu_781_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_6_fu_796_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_3_fu_817_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_73_i_i_i40_i_i_fu_821_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal loc_V_2_fu_807_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i_i_i_i41_cast_i_fu_835_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_2_fu_839_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_74_i_i_i44_i_i_fu_853_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_1_fu_845_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_74_i_i_i44_cast_s_fu_859_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_3_fu_863_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sh_assign_1_i_i_i45_s_fu_871_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sh_assign_1_i_i_i45_1_fu_875_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_73_i_i_i40_cast5_fu_831_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_75_i_i_i46_i_i_fu_879_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_76_i_i_i47_i_i_fu_883_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_16_fu_895_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_77_i_i_i48_i_i_fu_889_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_s_fu_903_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_907_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_8_fu_917_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_1_fu_799_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_i_i_i54_i_s_fu_925_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_646_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_op_assign_2_cast_i_fu_962_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_977_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_2_fu_989_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_op_assign_cast_i_i_fu_994_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_fu_1009_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_13_fu_1021_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_Val2_13_fu_1021_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_i_i_fu_1026_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal i_op_assign_3_cast_i_fu_1036_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_fu_1051_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_48_fu_1081_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_7_fu_1065_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_41_i_i_fu_1084_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_9_fu_1090_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_47_fu_1074_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_1_i_i_fu_1096_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_7_i_i_fu_1104_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_50_fu_1138_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_10_fu_1120_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_42_i_i_fu_1142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_11_fu_1148_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_49_fu_1130_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_3_i_i_fu_1154_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_9_i_i_fu_1162_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_44_i_i_fu_1178_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_i_i_fu_1191_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_31_fu_1213_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_31_fu_1213_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_31_fu_1213_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal r0_2_fu_1112_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal slt1_fu_1229_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev1_fu_1234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_fu_1240_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_52_fu_1243_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_53_fu_1247_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal c0_2_fu_1170_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_81_0_i_i_fu_1263_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_fu_1268_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_55_fu_1272_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_56_fu_1277_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_25_cast_fu_1255_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_11_fu_1285_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal c0_3_cast_i_i_fu_1174_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal c1_0_1_i_i_fu_1296_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal c1_0_1_cast_i_i_fu_1302_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_81_0_1_i_i_fu_1306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_fu_1311_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_58_fu_1315_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_13_fu_1323_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal r0_3_cast_i_i_fu_1116_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal r1_i_i_fu_1334_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal r1_cast_i_i_fu_1340_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal slt2_fu_1344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev2_fu_1349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_fu_1355_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_60_fu_1359_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_30_cast_fu_1367_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_i_i_fu_1387_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_11_i_i_fu_1392_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_28_fu_1405_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP2_V_cast_i_i_fu_1401_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_28_fu_1405_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal OP1_V_4_cast_i_i_fu_1397_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_28_fu_1405_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_29_fu_1421_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_29_fu_1421_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_29_fu_1421_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_30_fu_1436_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_30_fu_1436_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_30_fu_1436_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal p_Val2_28_0_i_i_fu_1463_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_28_0_1_i_i_fu_1471_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_28_1_1_i_i_fu_1480_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_28_1_i_i_fu_1489_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_28_1_i_i_fu_1489_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_fu_1498_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_1494_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_55_i_i_fu_1513_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal r_V_2_fu_1516_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_62_fu_1530_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1_fu_1540_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_56_i_i_fu_1534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_1550_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_61_fu_1522_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_1556_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_op_assign_1_cast_i_fu_1573_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_fu_1588_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_37_fu_1618_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_4_fu_1602_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_33_i_i_fu_1621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_5_fu_1627_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_36_fu_1611_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_i_i_fu_1633_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_6_i_i_fu_1641_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_34_i_i_fu_1653_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal r_V_1_fu_1657_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal tmp_39_fu_1681_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ret_V_6_fu_1663_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_36_i_i_fu_1685_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_8_fu_1691_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_38_fu_1673_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_2_i_i_fu_1697_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_8_i_i_fu_1705_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal r0_fu_1649_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal slt_fu_1717_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c0_fu_1713_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_i_i_fu_1728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_fu_1733_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_41_fu_1737_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal rev_fu_1722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_1750_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_44_fu_1753_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_45_fu_1757_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_42_fu_1742_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_20_cast_fu_1765_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_9_fu_1773_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_646_ap_start : STD_LOGIC;
    signal grp_fu_646_ap_done : STD_LOGIC;
    signal grp_fu_646_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (44 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal p_Val2_28_0_1_i_i_fu_1471_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_28_0_i_i_fu_1463_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_28_1_1_i_i_fu_1480_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_28_1_i_i_fu_1489_p10 : STD_LOGIC_VECTOR (31 downto 0);

    component imgproc_fadd_32nscud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component imgproc_fmul_32nsdEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component imgproc_sitofp_32eOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component imgproc_fpext_32nfYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component imgproc_sdiv_34nsg8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (33 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    imgproc_fadd_32nscud_U33 : component imgproc_fadd_32nscud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_6_i_i_reg_1854,
        din1 => ap_const_lv32_3F000000,
        ce => ap_const_logic_1,
        dout => grp_fu_341_p2);

    imgproc_fadd_32nscud_U34 : component imgproc_fadd_32nscud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_9_i_i_reg_1859,
        din1 => ap_const_lv32_3F000000,
        ce => ap_const_logic_1,
        dout => grp_fu_346_p2);

    imgproc_fmul_32nsdEe_U35 : component imgproc_fmul_32nsdEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_i_i_reg_1844,
        din1 => scale,
        ce => ap_const_logic_1,
        dout => grp_fu_351_p2);

    imgproc_fmul_32nsdEe_U36 : component imgproc_fmul_32nsdEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_8_i_i_reg_1849,
        din1 => scale,
        ce => ap_const_logic_1,
        dout => grp_fu_355_p2);

    imgproc_sitofp_32eOg_U37 : component imgproc_sitofp_32eOg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => rows_reg_1824,
        ce => ap_const_logic_1,
        dout => grp_fu_359_p1);

    imgproc_sitofp_32eOg_U38 : component imgproc_sitofp_32eOg
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => cols_reg_1834,
        ce => ap_const_logic_1,
        dout => grp_fu_362_p1);

    imgproc_fpext_32nfYi_U39 : component imgproc_fpext_32nfYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        dout_WIDTH => 64)
    port map (
        din0 => scale,
        dout => d_assign_fu_365_p1);

    imgproc_sdiv_34nsg8j_U40 : component imgproc_sdiv_34nsg8j
    generic map (
        ID => 1,
        NUM_STAGE => 38,
        din0_WIDTH => 34,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_646_ap_start,
        done => grp_fu_646_ap_done,
        din0 => ap_const_lv34_100000000,
        din1 => newSel7_fu_634_p3,
        ce => grp_fu_646_ce,
        dout => grp_fu_646_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state40) and (((tmp_26_i_i_fu_998_p2 = ap_const_lv1_0) and (tmp_23_i_i_reg_1894 = ap_const_lv1_1)) or ((tmp_28_i_i_fu_966_p2 = ap_const_lv1_0) and (tmp_23_i_i_reg_1894 = ap_const_lv1_0)) or ((tmp_25_i_i_reg_1898 = ap_const_lv1_0) and (tmp_23_i_i_reg_1894 = ap_const_lv1_0))))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state41) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((tmp_23_i_i_reg_1894 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state40) and (tmp_28_i_i_fu_966_p2 = ap_const_lv1_1) and (tmp_25_i_i_reg_1898 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state41)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state41);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((tmp_23_i_i_reg_1894 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state40) and (tmp_28_i_i_fu_966_p2 = ap_const_lv1_1) and (tmp_25_i_i_reg_1898 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state47) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state40) and (tmp_26_i_i_fu_998_p2 = ap_const_lv1_1) and (tmp_23_i_i_reg_1894 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state47))) then 
                    ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state47);
                elsif ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state40) and (tmp_26_i_i_fu_998_p2 = ap_const_lv1_1) and (tmp_23_i_i_reg_1894 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_op_assign_1_reg_319_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state40) and (tmp_26_i_i_fu_998_p2 = ap_const_lv1_1) and (tmp_23_i_i_reg_1894 = ap_const_lv1_1))) then 
                i_op_assign_1_reg_319 <= ap_const_lv31_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_29_i_i_fu_1577_p2 = ap_const_lv1_1))) then 
                i_op_assign_1_reg_319 <= j_fu_1582_p2;
            end if; 
        end if;
    end process;

    i_op_assign_2_reg_275_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
                i_op_assign_2_reg_275 <= i_1_reg_1916;
            elsif ((not(((dst_cols_full_n = ap_const_logic_0) or (dst_rows_full_n = ap_const_logic_0))) and (tmp_23_i_i_fu_944_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state39) and (tmp_25_i_i_fu_950_p2 = ap_const_lv1_1))) then 
                i_op_assign_2_reg_275 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    i_op_assign_3_reg_297_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_23_i_i_reg_1894 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state40) and (tmp_28_i_i_fu_966_p2 = ap_const_lv1_1) and (tmp_25_i_i_reg_1898 = ap_const_lv1_1))) then 
                i_op_assign_3_reg_297 <= ap_const_lv31_0;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_32_i_i_reg_1955 = ap_const_lv1_1))) then 
                i_op_assign_3_reg_297 <= j_1_reg_1959;
            end if; 
        end if;
    end process;

    i_op_assign_reg_286_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
                i_op_assign_reg_286 <= i_reg_1938;
            elsif ((not(((dst_cols_full_n = ap_const_logic_0) or (dst_rows_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state39) and (tmp_23_i_i_fu_944_p2 = ap_const_lv1_1))) then 
                i_op_assign_reg_286 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    p_Val2_15_reg_330_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state40) and (tmp_26_i_i_fu_998_p2 = ap_const_lv1_1) and (tmp_23_i_i_reg_1894 = ap_const_lv1_1))) then 
                p_Val2_15_reg_330 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_29_i_i_fu_1577_p2 = ap_const_lv1_1))) then 
                p_Val2_15_reg_330 <= next_mul_fu_1597_p2;
            end if; 
        end if;
    end process;

    p_Val2_23_reg_308_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_23_i_i_reg_1894 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state40) and (tmp_28_i_i_fu_966_p2 = ap_const_lv1_1) and (tmp_25_i_i_reg_1898 = ap_const_lv1_1))) then 
                p_Val2_23_reg_308 <= ap_const_lv32_0;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_32_i_i_reg_1955 = ap_const_lv1_1))) then 
                p_Val2_23_reg_308 <= next_mul1_reg_1969;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                F2_reg_1811 <= F2_fu_413_p2;
                isneg_reg_1794 <= ireg_V_fu_373_p1(63 downto 63);
                tmp_20_reg_1800 <= tmp_20_fu_403_p1;
                tmp_2_i_i_reg_1805 <= tmp_2_i_i_fu_407_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_32_i_i_fu_1040_p2 = ap_const_lv1_1))) then
                OP1_V_5_cast_i_i_reg_1989 <= OP1_V_5_cast_i_i_fu_1209_p1;
                OP2_V_1_cast_i_i_reg_1984 <= OP2_V_1_cast_i_i_fu_1205_p1;
                p_Val2_25_reg_1974 <= p_Val2_25_fu_1186_p2;
                p_Val2_27_reg_1979 <= p_Val2_27_fu_1199_p2;
                tmp_10_reg_1964 <= tmp_10_fu_1055_p2;
                tmp_14_reg_2009 <= tmp_14_fu_1375_p2;
                tmp_15_reg_2014 <= tmp_15_fu_1381_p2;
                tmp_54_i_i_reg_1994 <= p_Val2_31_fu_1213_p2(47 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                cols_reg_1834 <= src_cols_dout;
                rows_reg_1824 <= src_rows_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_23_i_i_reg_1894 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state40) and (tmp_25_i_i_reg_1898 = ap_const_lv1_1))) then
                i_1_reg_1916 <= i_1_fu_971_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state40) and (tmp_23_i_i_reg_1894 = ap_const_lv1_1))) then
                i_reg_1938 <= i_fu_1003_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((dst_cols_full_n = ap_const_logic_0) or (dst_rows_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state39))) then
                iscale_V_reg_1886 <= iscale_V_fu_940_p1;
                p_Val2_33_reg_1874 <= p_Val2_33_fu_787_p3;
                p_Val2_34_reg_1880 <= p_Val2_34_fu_931_p3;
                tmp_23_i_i_reg_1894 <= tmp_23_i_i_fu_944_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                j_1_reg_1959 <= j_1_fu_1045_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_32_i_i_fu_1040_p2 = ap_const_lv1_1))) then
                next_mul1_reg_1969 <= next_mul1_fu_1060_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_32_i_i_reg_1955 = ap_const_lv1_1))) then
                p_Val2_28_0_1_i_i_reg_2054 <= p_Val2_28_0_1_i_i_fu_1471_p2;
                p_Val2_28_0_i_i_reg_2049 <= p_Val2_28_0_i_i_fu_1463_p2;
                p_Val2_28_1_1_i_i_reg_2059 <= p_Val2_28_1_1_i_i_fu_1480_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_32_i_i_reg_1955_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                p_Val2_29_1_1_i_i_reg_2064 <= p_Val2_29_1_1_i_i_fu_1503_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_23_i_i_reg_1894 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state40) and (tmp_28_i_i_fu_966_p2 = ap_const_lv1_1) and (tmp_25_i_i_reg_1898 = ap_const_lv1_1))) then
                p_Val2_2_reg_1926 <= p_Val2_2_fu_989_p2;
                    tmp_16_cast_reg_1921(17 downto 8) <= tmp_16_cast_fu_981_p3(17 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state40) and (tmp_26_i_i_fu_998_p2 = ap_const_lv1_1) and (tmp_23_i_i_reg_1894 = ap_const_lv1_1))) then
                r_V_reg_1948 <= r_V_fu_1030_p2;
                    tmp_14_cast_reg_1943(17 downto 8) <= tmp_14_cast_fu_1013_p3(17 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_32_i_i_reg_1955 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_32_i_i_reg_1955 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then
                reg_369 <= src_val_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_32_i_i_reg_1955 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                src_val_load_2_reg_2034 <= src_val_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_10_reg_1964_pp0_iter1_reg <= tmp_10_reg_1964;
                tmp_32_i_i_reg_1955 <= tmp_32_i_i_fu_1040_p2;
                tmp_32_i_i_reg_1955_pp0_iter1_reg <= tmp_32_i_i_reg_1955;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((dst_cols_full_n = ap_const_logic_0) or (dst_rows_full_n = ap_const_logic_0))) and (tmp_23_i_i_fu_944_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state39))) then
                tmp_25_i_i_reg_1898 <= tmp_25_i_i_fu_950_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                tmp_29_i_i_reg_2069 <= tmp_29_i_i_fu_1577_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((dst_cols_full_n = ap_const_logic_0) or (dst_rows_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state39) and (tmp_23_i_i_fu_944_p2 = ap_const_lv1_1))) then
                tmp_29_reg_1907 <= tmp_29_fu_959_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((dst_cols_full_n = ap_const_logic_0) or (dst_rows_full_n = ap_const_logic_0))) and (tmp_23_i_i_fu_944_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state39) and (tmp_25_i_i_fu_950_p2 = ap_const_lv1_1))) then
                tmp_30_reg_1902 <= tmp_30_fu_956_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (tmp_32_i_i_reg_1955 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp_48_i_i_reg_2019 <= p_Val2_28_fu_1405_p2(47 downto 16);
                tmp_50_i_i_reg_2024 <= p_Val2_29_fu_1421_p2(47 downto 16);
                tmp_52_i_i_reg_2029 <= p_Val2_30_fu_1436_p2(47 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                tmp_6_i_i_reg_1854 <= grp_fu_351_p2;
                tmp_9_i_i_reg_1859 <= grp_fu_355_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then
                tmp_8_i_i_reg_1849 <= grp_fu_362_p1;
                tmp_i_i_reg_1844 <= grp_fu_359_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_29_i_i_fu_1577_p2 = ap_const_lv1_1))) then
                tmp_8_reg_2078 <= tmp_8_fu_1592_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state38)) then
                x_assign_1_reg_1869 <= grp_fu_346_p2;
                x_assign_reg_1864 <= grp_fu_341_p2;
            end if;
        end if;
    end process;
    tmp_16_cast_reg_1921(7 downto 0) <= "00000000";
    tmp_14_cast_reg_1943(7 downto 0) <= "00000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, src_rows_empty_n, src_cols_empty_n, dst_rows_full_n, dst_cols_full_n, ap_CS_fsm_state30, ap_CS_fsm_state39, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_23_i_i_reg_1894, tmp_25_i_i_reg_1898, tmp_28_i_i_fu_966_p2, ap_CS_fsm_state40, tmp_26_i_i_fu_998_p2, tmp_32_i_i_fu_1040_p2, tmp_29_i_i_fu_1577_p2, ap_enable_reg_pp1_iter0, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone, ap_enable_reg_pp0_iter2, ap_block_pp1_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                if ((not(((src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                if ((not(((dst_cols_full_n = ap_const_logic_0) or (dst_rows_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state39))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                else
                    ap_NS_fsm <= ap_ST_fsm_state39;
                end if;
            when ap_ST_fsm_state40 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state40) and (((tmp_26_i_i_fu_998_p2 = ap_const_lv1_0) and (tmp_23_i_i_reg_1894 = ap_const_lv1_1)) or ((tmp_28_i_i_fu_966_p2 = ap_const_lv1_0) and (tmp_23_i_i_reg_1894 = ap_const_lv1_0)) or ((tmp_25_i_i_reg_1898 = ap_const_lv1_0) and (tmp_23_i_i_reg_1894 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state40) and (tmp_26_i_i_fu_998_p2 = ap_const_lv1_1) and (tmp_23_i_i_reg_1894 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (tmp_32_i_i_fu_1040_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (tmp_32_i_i_fu_1040_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state46;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (tmp_29_i_i_fu_1577_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (tmp_29_i_i_fu_1577_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state49;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    F2_fu_413_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(tmp_4_i_i_fu_399_p1));
        OP1_V_4_cast_i_i_fu_1397_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_i_i_fu_1387_p2),48));

        OP1_V_5_cast_i_i_fu_1209_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_25_fu_1186_p2),48));

        OP2_V_1_cast_i_i_fu_1205_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_27_fu_1199_p2),48));

        OP2_V_cast_i_i_fu_1401_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_11_i_i_fu_1392_p2),48));

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(40);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(41);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(43);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state46 <= ap_CS_fsm(42);
    ap_CS_fsm_state49 <= ap_CS_fsm(44);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_block_state30_assign_proc : process(src_rows_empty_n, src_cols_empty_n)
    begin
                ap_block_state30 <= ((src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0));
    end process;


    ap_block_state39_assign_proc : process(dst_rows_full_n, dst_cols_full_n)
    begin
                ap_block_state39 <= ((dst_cols_full_n = ap_const_logic_0) or (dst_rows_full_n = ap_const_logic_0));
    end process;

        ap_block_state41_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state41_assign_proc : process(tmp_32_i_i_fu_1040_p2)
    begin
        if ((tmp_32_i_i_fu_1040_p2 = ap_const_lv1_0)) then 
            ap_condition_pp0_exit_iter0_state41 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state41 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state47_assign_proc : process(tmp_29_i_i_fu_1577_p2)
    begin
        if ((tmp_29_i_i_fu_1577_p2 = ap_const_lv1_0)) then 
            ap_condition_pp1_exit_iter0_state47 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state47 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, tmp_23_i_i_reg_1894, tmp_25_i_i_reg_1898, tmp_28_i_i_fu_966_p2, ap_CS_fsm_state40, tmp_26_i_i_fu_998_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) and (((tmp_26_i_i_fu_998_p2 = ap_const_lv1_0) and (tmp_23_i_i_reg_1894 = ap_const_lv1_1)) or ((tmp_28_i_i_fu_966_p2 = ap_const_lv1_0) and (tmp_23_i_i_reg_1894 = ap_const_lv1_0)) or ((tmp_25_i_i_reg_1898 = ap_const_lv1_0) and (tmp_23_i_i_reg_1894 = ap_const_lv1_0))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_op_assign_3_phi_fu_301_p4_assign_proc : process(i_op_assign_3_reg_297, tmp_32_i_i_reg_1955, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, j_1_reg_1959, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_32_i_i_reg_1955 = ap_const_lv1_1))) then 
            ap_phi_mux_i_op_assign_3_phi_fu_301_p4 <= j_1_reg_1959;
        else 
            ap_phi_mux_i_op_assign_3_phi_fu_301_p4 <= i_op_assign_3_reg_297;
        end if; 
    end process;


    ap_phi_mux_p_Val2_23_phi_fu_312_p4_assign_proc : process(p_Val2_23_reg_308, tmp_32_i_i_reg_1955, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, next_mul1_reg_1969, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_32_i_i_reg_1955 = ap_const_lv1_1))) then 
            ap_phi_mux_p_Val2_23_phi_fu_312_p4 <= next_mul1_reg_1969;
        else 
            ap_phi_mux_p_Val2_23_phi_fu_312_p4 <= p_Val2_23_reg_308;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
        c0_2_fu_1170_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_9_i_i_fu_1162_p3),32));

        c0_3_cast_i_i_fu_1174_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_9_i_i_fu_1162_p3),17));

        c0_fu_1713_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_8_i_i_fu_1705_p3),32));

        c1_0_1_cast_i_i_fu_1302_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(c1_0_1_i_i_fu_1296_p2),32));

    c1_0_1_i_i_fu_1296_p2 <= std_logic_vector(unsigned(ap_const_lv17_1) + unsigned(c0_3_cast_i_i_fu_1174_p1));

    dst_cols_blk_n_assign_proc : process(dst_cols_full_n, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            dst_cols_blk_n <= dst_cols_full_n;
        else 
            dst_cols_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_cols_din <= 
        p_Val2_i_i_i54_i_s_fu_925_p2 when (p_Result_1_fu_799_p3(0) = '1') else 
        p_Val2_8_fu_917_p3;

    dst_cols_write_assign_proc : process(dst_rows_full_n, dst_cols_full_n, ap_CS_fsm_state39)
    begin
        if ((not(((dst_cols_full_n = ap_const_logic_0) or (dst_rows_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state39))) then 
            dst_cols_write <= ap_const_logic_1;
        else 
            dst_cols_write <= ap_const_logic_0;
        end if; 
    end process;


    dst_rows_blk_n_assign_proc : process(dst_rows_full_n, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            dst_rows_blk_n <= dst_rows_full_n;
        else 
            dst_rows_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dst_rows_din <= 
        p_Val2_i_i_i_i_i_fu_781_p2 when (p_Result_s_fu_655_p3(0) = '1') else 
        p_Val2_3_fu_773_p3;

    dst_rows_write_assign_proc : process(dst_rows_full_n, dst_cols_full_n, ap_CS_fsm_state39)
    begin
        if ((not(((dst_cols_full_n = ap_const_logic_0) or (dst_rows_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state39))) then 
            dst_rows_write <= ap_const_logic_1;
        else 
            dst_rows_write <= ap_const_logic_0;
        end if; 
    end process;


    dst_val_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0, tmp_22_cast_fu_1509_p1, ap_block_pp1_stage0, tmp_17_cast_fu_1784_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            dst_val_address0 <= tmp_17_cast_fu_1784_p1(16 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dst_val_address0 <= tmp_22_cast_fu_1509_p1(16 - 1 downto 0);
        else 
            dst_val_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dst_val_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            dst_val_ce0 <= ap_const_logic_1;
        else 
            dst_val_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dst_val_d0_assign_proc : process(src_val_q0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, tmp_5_fu_1564_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            dst_val_d0 <= src_val_q0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dst_val_d0 <= tmp_5_fu_1564_p3;
        else 
            dst_val_d0 <= "XXXXXXXX";
        end if; 
    end process;


    dst_val_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, tmp_32_i_i_reg_1955_pp0_iter1_reg, tmp_29_i_i_reg_2069, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (tmp_29_i_i_reg_2069 = ap_const_lv1_1)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_32_i_i_reg_1955_pp0_iter1_reg = ap_const_lv1_1)))) then 
            dst_val_we0 <= ap_const_logic_1;
        else 
            dst_val_we0 <= ap_const_logic_0;
        end if; 
    end process;

    exp_tmp_V_fu_389_p4 <= ireg_V_fu_373_p1(62 downto 52);

    grp_fu_646_ap_start_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_646_ap_start <= ap_const_logic_1;
        else 
            grp_fu_646_ap_start <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_646_ce_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_CS_fsm_state40, ap_CS_fsm_pp1_stage0, ap_CS_fsm_state46, ap_CS_fsm_state49)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) or (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_646_ce <= ap_const_logic_0;
        else 
            grp_fu_646_ce <= ap_const_logic_1;
        end if; 
    end process;

    i_1_fu_971_p2 <= std_logic_vector(unsigned(i_op_assign_2_reg_275) + unsigned(ap_const_lv31_1));
    i_fu_1003_p2 <= std_logic_vector(unsigned(i_op_assign_reg_286) + unsigned(ap_const_lv31_1));
    i_op_assign_1_cast_i_fu_1573_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_op_assign_1_reg_319),32));
    i_op_assign_2_cast_i_fu_962_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_op_assign_2_reg_275),32));
    i_op_assign_3_cast_i_fu_1036_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_i_op_assign_3_phi_fu_301_p4),32));
    i_op_assign_cast_i_i_fu_994_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_op_assign_reg_286),32));
    icmp_fu_495_p2 <= "1" when (tmp_24_fu_485_p4 = ap_const_lv7_0) else "0";

    internal_ap_ready_assign_proc : process(tmp_23_i_i_reg_1894, tmp_25_i_i_reg_1898, tmp_28_i_i_fu_966_p2, ap_CS_fsm_state40, tmp_26_i_i_fu_998_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) and (((tmp_26_i_i_fu_998_p2 = ap_const_lv1_0) and (tmp_23_i_i_reg_1894 = ap_const_lv1_1)) or ((tmp_28_i_i_fu_966_p2 = ap_const_lv1_0) and (tmp_23_i_i_reg_1894 = ap_const_lv1_0)) or ((tmp_25_i_i_reg_1898 = ap_const_lv1_0) and (tmp_23_i_i_reg_1894 = ap_const_lv1_0))))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ireg_V_fu_373_p1 <= d_assign_fu_365_p1;
    isNeg_1_fu_845_p3 <= sh_assign_2_fu_839_p2(8 downto 8);
    isNeg_fu_701_p3 <= sh_assign_fu_695_p2(8 downto 8);
    iscale_V_fu_940_p1 <= grp_fu_646_p2(32 - 1 downto 0);
    j_1_fu_1045_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_op_assign_3_phi_fu_301_p4) + unsigned(ap_const_lv31_1));
    j_fu_1582_p2 <= std_logic_vector(unsigned(i_op_assign_1_reg_319) + unsigned(ap_const_lv31_1));
    loc_V_1_fu_673_p1 <= p_Val2_s_fu_652_p1(23 - 1 downto 0);
    loc_V_2_fu_807_p4 <= p_Val2_6_fu_796_p1(30 downto 23);
    loc_V_3_fu_817_p1 <= p_Val2_6_fu_796_p1(23 - 1 downto 0);
    loc_V_fu_663_p4 <= p_Val2_s_fu_652_p1(30 downto 23);
    man_V_1_fu_430_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_2_fu_426_p1));
    man_V_2_fu_436_p3 <= 
        man_V_1_fu_430_p2 when (isneg_reg_1794(0) = '1') else 
        p_Result_2_fu_426_p1;
    newSel3_fu_606_p3 <= 
        p_071_i_i_fu_515_p3 when (sel_tmp9_fu_562_p2(0) = '1') else 
        tmp_23_fu_475_p1;
    newSel5_fu_620_p3 <= 
        newSel_fu_592_p3 when (or_cond_fu_600_p2(0) = '1') else 
        newSel3_fu_606_p3;
    newSel7_fu_634_p3 <= 
        newSel5_fu_620_p3 when (or_cond6_fu_628_p2(0) = '1') else 
        ap_const_lv32_0;
    newSel_fu_592_p3 <= 
        tmp_21_i_i_fu_522_p2 when (sel_tmp4_fu_586_p2(0) = '1') else 
        tmp_25_fu_511_p1;
    next_mul1_fu_1060_p2 <= std_logic_vector(signed(iscale_V_reg_1886) + signed(ap_phi_mux_p_Val2_23_phi_fu_312_p4));
    next_mul_fu_1597_p2 <= std_logic_vector(signed(iscale_V_reg_1886) + signed(p_Val2_15_reg_330));
    or_cond4_fu_614_p2 <= (sel_tmp9_fu_562_p2 or sel_tmp2_fu_533_p2);
    or_cond6_fu_628_p2 <= (or_cond_fu_600_p2 or or_cond4_fu_614_p2);
    or_cond_fu_600_p2 <= (sel_tmp_fu_568_p2 or sel_tmp4_fu_586_p2);
    p_071_i_i_fu_515_p3 <= 
        ap_const_lv32_FFFFFFFF when (isneg_reg_1794(0) = '1') else 
        ap_const_lv32_0;
    p_1_i_i_fu_1096_p3 <= 
        ret_V_7_fu_1065_p4 when (tmp_41_i_i_fu_1084_p2(0) = '1') else 
        ret_V_9_fu_1090_p2;
    p_2_i_i_fu_1697_p3 <= 
        ret_V_6_fu_1663_p4 when (tmp_36_i_i_fu_1685_p2(0) = '1') else 
        ret_V_8_fu_1691_p2;
    p_3_i_i_fu_1154_p3 <= 
        ret_V_10_fu_1120_p4 when (tmp_42_i_i_fu_1142_p2(0) = '1') else 
        ret_V_11_fu_1148_p2;
    p_6_i_i_fu_1641_p3 <= 
        p_i_i_fu_1633_p3 when (tmp_36_fu_1611_p3(0) = '1') else 
        ret_V_4_fu_1602_p4;
    p_7_i_i_fu_1104_p3 <= 
        p_1_i_i_fu_1096_p3 when (tmp_47_fu_1074_p3(0) = '1') else 
        ret_V_7_fu_1065_p4;
    p_8_i_i_fu_1705_p3 <= 
        p_2_i_i_fu_1697_p3 when (tmp_38_fu_1673_p3(0) = '1') else 
        ret_V_6_fu_1663_p4;
    p_9_i_i_fu_1162_p3 <= 
        p_3_i_i_fu_1154_p3 when (tmp_49_fu_1130_p3(0) = '1') else 
        ret_V_10_fu_1120_p4;
    p_Result_1_fu_799_p3 <= p_Val2_6_fu_796_p1(31 downto 31);
    p_Result_2_fu_426_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_i_i_fu_419_p3),54));
    p_Result_s_fu_655_p3 <= p_Val2_s_fu_652_p1(31 downto 31);
    p_Val2_11_i_i_fu_1392_p2 <= std_logic_vector(unsigned(ap_const_lv32_10000) - unsigned(p_Val2_27_reg_1979));
    p_Val2_13_fu_1021_p0 <= i_op_assign_cast_i_i_fu_994_p1(31 - 1 downto 0);
    p_Val2_13_fu_1021_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &p_Val2_13_fu_1021_p0) * signed(iscale_V_reg_1886))), 32));
    p_Val2_25_fu_1186_p2 <= std_logic_vector(unsigned(p_Val2_2_reg_1926) - unsigned(tmp_44_i_i_fu_1178_p3));
    p_Val2_27_fu_1199_p2 <= std_logic_vector(unsigned(ap_phi_mux_p_Val2_23_phi_fu_312_p4) - unsigned(tmp_46_i_i_fu_1191_p3));
    p_Val2_28_0_1_i_i_fu_1471_p1 <= p_Val2_28_0_1_i_i_fu_1471_p10(8 - 1 downto 0);
    p_Val2_28_0_1_i_i_fu_1471_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_val_load_2_reg_2034),32));
    p_Val2_28_0_1_i_i_fu_1471_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_50_i_i_reg_2024) * signed('0' &p_Val2_28_0_1_i_i_fu_1471_p1))), 32));
    p_Val2_28_0_i_i_fu_1463_p1 <= p_Val2_28_0_i_i_fu_1463_p10(8 - 1 downto 0);
    p_Val2_28_0_i_i_fu_1463_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_369),32));
    p_Val2_28_0_i_i_fu_1463_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_48_i_i_reg_2019) * signed('0' &p_Val2_28_0_i_i_fu_1463_p1))), 32));
    p_Val2_28_1_1_i_i_fu_1480_p1 <= p_Val2_28_1_1_i_i_fu_1480_p10(8 - 1 downto 0);
    p_Val2_28_1_1_i_i_fu_1480_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(src_val_q1),32));
    p_Val2_28_1_1_i_i_fu_1480_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_54_i_i_reg_1994) * signed('0' &p_Val2_28_1_1_i_i_fu_1480_p1))), 32));
    p_Val2_28_1_i_i_fu_1489_p1 <= p_Val2_28_1_i_i_fu_1489_p10(8 - 1 downto 0);
    p_Val2_28_1_i_i_fu_1489_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_369),32));
    p_Val2_28_1_i_i_fu_1489_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_52_i_i_reg_2029) * signed('0' &p_Val2_28_1_i_i_fu_1489_p1))), 32));
    p_Val2_28_fu_1405_p0 <= OP2_V_cast_i_i_fu_1401_p1(32 - 1 downto 0);
    p_Val2_28_fu_1405_p1 <= OP1_V_4_cast_i_i_fu_1397_p1(32 - 1 downto 0);
    p_Val2_28_fu_1405_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_28_fu_1405_p0) * signed(p_Val2_28_fu_1405_p1))), 48));
    p_Val2_29_1_1_i_i_fu_1503_p2 <= std_logic_vector(unsigned(tmp2_fu_1498_p2) + unsigned(tmp_fu_1494_p2));
    p_Val2_29_fu_1421_p0 <= OP2_V_1_cast_i_i_reg_1984(32 - 1 downto 0);
    p_Val2_29_fu_1421_p1 <= OP1_V_4_cast_i_i_fu_1397_p1(32 - 1 downto 0);
    p_Val2_29_fu_1421_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_29_fu_1421_p0) * signed(p_Val2_29_fu_1421_p1))), 48));
    p_Val2_2_fu_989_p0 <= i_op_assign_2_cast_i_fu_962_p1(31 - 1 downto 0);
    p_Val2_2_fu_989_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed('0' &p_Val2_2_fu_989_p0) * signed(iscale_V_reg_1886))), 32));
    p_Val2_30_fu_1436_p0 <= OP2_V_cast_i_i_fu_1401_p1(32 - 1 downto 0);
    p_Val2_30_fu_1436_p1 <= OP1_V_5_cast_i_i_reg_1989(32 - 1 downto 0);
    p_Val2_30_fu_1436_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_30_fu_1436_p0) * signed(p_Val2_30_fu_1436_p1))), 48));
    p_Val2_31_fu_1213_p0 <= p_Val2_27_fu_1199_p2;
    p_Val2_31_fu_1213_p1 <= p_Val2_25_fu_1186_p2;
    p_Val2_31_fu_1213_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(p_Val2_31_fu_1213_p0) * signed(p_Val2_31_fu_1213_p1))), 48));
    p_Val2_33_fu_787_p3 <= 
        p_Val2_i_i_i_i_i_fu_781_p2 when (p_Result_s_fu_655_p3(0) = '1') else 
        p_Val2_3_fu_773_p3;
    p_Val2_34_fu_931_p3 <= 
        p_Val2_i_i_i54_i_s_fu_925_p2 when (p_Result_1_fu_799_p3(0) = '1') else 
        p_Val2_8_fu_917_p3;
    p_Val2_3_fu_773_p3 <= 
        tmp_6_fu_759_p1 when (isNeg_fu_701_p3(0) = '1') else 
        tmp_7_fu_763_p4;
    p_Val2_6_fu_796_p1 <= x_assign_1_reg_1869;
    p_Val2_8_fu_917_p3 <= 
        tmp_s_fu_903_p1 when (isNeg_1_fu_845_p3(0) = '1') else 
        tmp_4_fu_907_p4;
    p_Val2_i_i_fu_1387_p2 <= std_logic_vector(unsigned(ap_const_lv32_10000) - unsigned(p_Val2_25_reg_1974));
    p_Val2_i_i_i54_i_s_fu_925_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_Val2_8_fu_917_p3));
    p_Val2_i_i_i_i_i_fu_781_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(p_Val2_3_fu_773_p3));
    p_Val2_s_fu_652_p1 <= x_assign_reg_1864;
    p_i_i_fu_1633_p3 <= 
        ret_V_4_fu_1602_p4 when (tmp_33_i_i_fu_1621_p2(0) = '1') else 
        ret_V_5_fu_1627_p2;
        r0_2_fu_1112_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_7_i_i_fu_1104_p3),32));

        r0_3_cast_i_i_fu_1116_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_7_i_i_fu_1104_p3),17));

        r0_fu_1649_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_6_i_i_fu_1641_p3),32));

        r1_cast_i_i_fu_1340_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r1_i_i_fu_1334_p2),32));

    r1_i_i_fu_1334_p2 <= std_logic_vector(unsigned(ap_const_lv17_1) + unsigned(r0_3_cast_i_i_fu_1116_p1));
    r_V_1_fu_1657_p2 <= std_logic_vector(unsigned(ap_const_lv33_8000) + unsigned(tmp_34_i_i_fu_1653_p1));
    r_V_2_fu_1516_p2 <= std_logic_vector(unsigned(ap_const_lv33_8000) + unsigned(tmp_55_i_i_fu_1513_p1));
    r_V_fu_1030_p2 <= std_logic_vector(unsigned(ap_const_lv33_8000) + unsigned(tmp_31_i_i_fu_1026_p1));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    ret_V_10_fu_1120_p4 <= ap_phi_mux_p_Val2_23_phi_fu_312_p4(31 downto 16);
    ret_V_11_fu_1148_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(ret_V_10_fu_1120_p4));
    ret_V_4_fu_1602_p4 <= r_V_reg_1948(32 downto 16);
    ret_V_5_fu_1627_p2 <= std_logic_vector(unsigned(ap_const_lv17_1) + unsigned(ret_V_4_fu_1602_p4));
    ret_V_6_fu_1663_p4 <= r_V_1_fu_1657_p2(32 downto 16);
    ret_V_7_fu_1065_p4 <= p_Val2_2_reg_1926(31 downto 16);
    ret_V_8_fu_1691_p2 <= std_logic_vector(unsigned(ap_const_lv17_1) + unsigned(ret_V_6_fu_1663_p4));
    ret_V_9_fu_1090_p2 <= std_logic_vector(unsigned(ap_const_lv16_1) + unsigned(ret_V_7_fu_1065_p4));
    rev1_fu_1234_p2 <= (slt1_fu_1229_p2 xor ap_const_lv1_1);
    rev2_fu_1349_p2 <= (slt2_fu_1344_p2 xor ap_const_lv1_1);
    rev_fu_1722_p2 <= (slt_fu_1717_p2 xor ap_const_lv1_1);
    sel_tmp1_fu_528_p2 <= (tmp_2_i_i_reg_1805 xor ap_const_lv1_1);
    sel_tmp21_demorgan_fu_574_p2 <= (tmp_10_i_i_fu_443_p2 or sel_tmp6_demorgan_fu_539_p2);
    sel_tmp2_fu_533_p2 <= (tmp_13_i_i_fu_470_p2 and sel_tmp1_fu_528_p2);
    sel_tmp3_fu_580_p2 <= (sel_tmp21_demorgan_fu_574_p2 xor ap_const_lv1_1);
    sel_tmp4_fu_586_p2 <= (sel_tmp3_fu_580_p2 and icmp_fu_495_p2);
    sel_tmp6_demorgan_fu_539_p2 <= (tmp_2_i_i_reg_1805 or tmp_13_i_i_fu_470_p2);
    sel_tmp6_fu_544_p2 <= (sel_tmp6_demorgan_fu_539_p2 xor ap_const_lv1_1);
    sel_tmp7_fu_550_p2 <= (tmp_10_i_i_fu_443_p2 and sel_tmp6_fu_544_p2);
    sel_tmp8_fu_556_p2 <= (tmp_15_i_i_fu_479_p2 xor ap_const_lv1_1);
    sel_tmp9_fu_562_p2 <= (sel_tmp8_fu_556_p2 and sel_tmp7_fu_550_p2);
    sel_tmp_fu_568_p2 <= (tmp_15_i_i_fu_479_p2 and sel_tmp7_fu_550_p2);
        sh_amt_cast_i_i_fu_466_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_fu_458_p3),32));

    sh_amt_fu_458_p3 <= 
        tmp_11_i_i_fu_448_p2 when (tmp_10_i_i_fu_443_p2(0) = '1') else 
        tmp_12_i_i_fu_453_p2;
    sh_assign_1_fu_719_p3 <= 
        tmp_74_i_i_i_cast_i_s_fu_715_p1 when (isNeg_fu_701_p3(0) = '1') else 
        sh_assign_fu_695_p2;
        sh_assign_1_i_i_i45_1_fu_875_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_3_fu_863_p3),25));

        sh_assign_1_i_i_i45_s_fu_871_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_3_fu_863_p3),32));

        sh_assign_1_i_i_i_ca_1_fu_731_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_1_fu_719_p3),25));

        sh_assign_1_i_i_i_ca_fu_727_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_1_fu_719_p3),32));

    sh_assign_2_fu_839_p2 <= std_logic_vector(signed(ap_const_lv9_181) + signed(tmp_i_i_i_i41_cast_i_fu_835_p1));
    sh_assign_3_fu_863_p3 <= 
        tmp_74_i_i_i44_cast_s_fu_859_p1 when (isNeg_1_fu_845_p3(0) = '1') else 
        sh_assign_2_fu_839_p2;
    sh_assign_fu_695_p2 <= std_logic_vector(signed(ap_const_lv9_181) + signed(tmp_i_i_i_i_cast_i_i_fu_691_p1));
    slt1_fu_1229_p2 <= "1" when (signed(r0_2_fu_1112_p1) < signed(rows_reg_1824)) else "0";
    slt2_fu_1344_p2 <= "1" when (signed(r1_cast_i_i_fu_1340_p1) < signed(rows_reg_1824)) else "0";
    slt_fu_1717_p2 <= "1" when (signed(r0_fu_1649_p1) < signed(rows_reg_1824)) else "0";

    src_cols_blk_n_assign_proc : process(src_cols_empty_n, ap_CS_fsm_state30)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            src_cols_blk_n <= src_cols_empty_n;
        else 
            src_cols_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src_cols_read_assign_proc : process(src_rows_empty_n, src_cols_empty_n, ap_CS_fsm_state30)
    begin
        if ((not(((src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            src_cols_read <= ap_const_logic_1;
        else 
            src_cols_read <= ap_const_logic_0;
        end if; 
    end process;


    src_rows_blk_n_assign_proc : process(src_rows_empty_n, ap_CS_fsm_state30)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            src_rows_blk_n <= src_rows_empty_n;
        else 
            src_rows_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src_rows_read_assign_proc : process(src_rows_empty_n, src_cols_empty_n, ap_CS_fsm_state30)
    begin
        if ((not(((src_cols_empty_n = ap_const_logic_0) or (src_rows_empty_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            src_rows_read <= ap_const_logic_1;
        else 
            src_rows_read <= ap_const_logic_0;
        end if; 
    end process;


    src_val_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp0_stage0, tmp_26_cast_fu_1291_p1, tmp_31_cast_fu_1451_p1, ap_block_pp0_stage1, tmp_21_cast_fu_1779_p1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            src_val_address0 <= tmp_21_cast_fu_1779_p1(16 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            src_val_address0 <= tmp_31_cast_fu_1451_p1(16 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            src_val_address0 <= tmp_26_cast_fu_1291_p1(16 - 1 downto 0);
        else 
            src_val_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    src_val_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, tmp_27_cast_fu_1329_p1, ap_block_pp0_stage1, tmp_32_cast_fu_1455_p1)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                src_val_address1 <= tmp_32_cast_fu_1455_p1(16 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                src_val_address1 <= tmp_27_cast_fu_1329_p1(16 - 1 downto 0);
            else 
                src_val_address1 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            src_val_address1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    src_val_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            src_val_ce0 <= ap_const_logic_1;
        else 
            src_val_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    src_val_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            src_val_ce1 <= ap_const_logic_1;
        else 
            src_val_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp2_fu_1498_p2 <= std_logic_vector(unsigned(p_Val2_28_1_i_i_fu_1489_p2) + unsigned(p_Val2_28_1_1_i_i_reg_2059));
    tmp_10_fu_1055_p2 <= std_logic_vector(unsigned(tmp_46_fu_1051_p1) + unsigned(tmp_16_cast_reg_1921));
    tmp_10_i_i_fu_443_p2 <= "1" when (signed(F2_reg_1811) > signed(ap_const_lv12_10)) else "0";
    tmp_11_fu_1285_p2 <= std_logic_vector(unsigned(tmp_56_fu_1277_p3) + unsigned(tmp_25_cast_fu_1255_p3));
    tmp_11_i_i_fu_448_p2 <= std_logic_vector(signed(ap_const_lv12_FF0) + signed(F2_reg_1811));
    tmp_12_fu_751_p3 <= tmp_76_i_i_i_i_i_fu_739_p2(24 downto 24);
    tmp_12_i_i_fu_453_p2 <= std_logic_vector(unsigned(ap_const_lv12_10) - unsigned(F2_reg_1811));
    tmp_13_fu_1323_p2 <= std_logic_vector(unsigned(tmp_58_fu_1315_p3) + unsigned(tmp_25_cast_fu_1255_p3));
    tmp_13_i_i_fu_470_p2 <= "1" when (F2_reg_1811 = ap_const_lv12_10) else "0";
    tmp_14_cast_fu_1013_p3 <= (tmp_33_fu_1009_p1 & ap_const_lv8_0);
    tmp_14_fu_1375_p2 <= std_logic_vector(unsigned(tmp_56_fu_1277_p3) + unsigned(tmp_30_cast_fu_1367_p3));
    tmp_15_fu_1381_p2 <= std_logic_vector(unsigned(tmp_58_fu_1315_p3) + unsigned(tmp_30_cast_fu_1367_p3));
    tmp_15_i_i_fu_479_p2 <= "1" when (unsigned(sh_amt_fu_458_p3) < unsigned(ap_const_lv12_36)) else "0";
    tmp_16_cast_fu_981_p3 <= (tmp_34_fu_977_p1 & ap_const_lv8_0);
    tmp_16_fu_895_p3 <= tmp_76_i_i_i47_i_i_fu_883_p2(24 downto 24);
    tmp_17_cast_fu_1784_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_reg_2078),64));
    tmp_18_fu_377_p1 <= ireg_V_fu_373_p1(63 - 1 downto 0);
    tmp_18_i_i_fu_501_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_amt_cast_i_i_fu_466_p1),54));
    tmp_19_i_i_fu_505_p2 <= std_logic_vector(shift_right(signed(man_V_2_fu_436_p3),to_integer(unsigned('0' & tmp_18_i_i_fu_501_p1(31-1 downto 0)))));
    tmp_1_fu_1540_p4 <= r_V_2_fu_1516_p2(23 downto 16);
    tmp_1_i_i_fu_419_p3 <= (ap_const_lv1_1 & tmp_20_reg_1800);
    tmp_20_cast_fu_1765_p3 <= (tmp_45_fu_1757_p3 & ap_const_lv8_0);
    tmp_20_fu_403_p1 <= ireg_V_fu_373_p1(52 - 1 downto 0);
        tmp_21_cast_fu_1779_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_9_fu_1773_p2),64));

    tmp_21_i_i_fu_522_p2 <= std_logic_vector(shift_left(unsigned(tmp_23_fu_475_p1),to_integer(unsigned('0' & sh_amt_cast_i_i_fu_466_p1(31-1 downto 0)))));
    tmp_22_cast_fu_1509_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_reg_1964_pp0_iter1_reg),64));
    tmp_23_fu_475_p1 <= man_V_2_fu_436_p3(32 - 1 downto 0);
    tmp_23_i_i_fu_944_p2 <= "1" when (method = ap_const_lv2_0) else "0";
    tmp_24_fu_485_p4 <= sh_amt_fu_458_p3(11 downto 5);
    tmp_25_cast_fu_1255_p3 <= (tmp_53_fu_1247_p3 & ap_const_lv8_0);
    tmp_25_fu_511_p1 <= tmp_19_i_i_fu_505_p2(32 - 1 downto 0);
    tmp_25_i_i_fu_950_p2 <= "1" when (method = ap_const_lv2_1) else "0";
        tmp_26_cast_fu_1291_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_11_fu_1285_p2),64));

    tmp_26_i_i_fu_998_p2 <= "1" when (signed(i_op_assign_cast_i_i_fu_994_p1) < signed(p_Val2_33_reg_1874)) else "0";
        tmp_27_cast_fu_1329_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_13_fu_1323_p2),64));

    tmp_28_i_i_fu_966_p2 <= "1" when (signed(i_op_assign_2_cast_i_fu_962_p1) < signed(p_Val2_33_reg_1874)) else "0";
    tmp_29_fu_959_p1 <= cols_reg_1834(18 - 1 downto 0);
    tmp_29_i_i_fu_1577_p2 <= "1" when (signed(i_op_assign_1_cast_i_fu_1573_p1) < signed(p_Val2_34_reg_1880)) else "0";
    tmp_2_fu_1550_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(tmp_1_fu_1540_p4));
    tmp_2_i_i_fu_407_p2 <= "1" when (tmp_18_fu_377_p1 = ap_const_lv63_0) else "0";
    tmp_30_cast_fu_1367_p3 <= (tmp_60_fu_1359_p3 & ap_const_lv8_0);
    tmp_30_fu_956_p1 <= cols_reg_1834(18 - 1 downto 0);
        tmp_31_cast_fu_1451_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_14_reg_2009),64));

        tmp_31_i_i_fu_1026_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_13_fu_1021_p2),33));

        tmp_32_cast_fu_1455_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_15_reg_2014),64));

    tmp_32_i_i_fu_1040_p2 <= "1" when (signed(i_op_assign_3_cast_i_fu_1036_p1) < signed(p_Val2_34_reg_1880)) else "0";
    tmp_33_fu_1009_p1 <= i_op_assign_reg_286(10 - 1 downto 0);
    tmp_33_i_i_fu_1621_p2 <= "1" when (tmp_37_fu_1618_p1 = ap_const_lv16_0) else "0";
    tmp_34_fu_977_p1 <= i_op_assign_2_reg_275(10 - 1 downto 0);
        tmp_34_i_i_fu_1653_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_15_reg_330),33));

    tmp_35_fu_1588_p1 <= i_op_assign_1_reg_319(18 - 1 downto 0);
    tmp_36_fu_1611_p3 <= r_V_reg_1948(32 downto 32);
    tmp_36_i_i_fu_1685_p2 <= "1" when (tmp_39_fu_1681_p1 = ap_const_lv16_0) else "0";
    tmp_37_fu_1618_p1 <= r_V_reg_1948(16 - 1 downto 0);
    tmp_38_fu_1673_p3 <= r_V_1_fu_1657_p2(32 downto 32);
    tmp_38_i_i_fu_1728_p2 <= "1" when (signed(c0_fu_1713_p1) < signed(cols_reg_1834)) else "0";
    tmp_39_fu_1681_p1 <= r_V_1_fu_1657_p2(16 - 1 downto 0);
    tmp_3_fu_1556_p3 <= 
        tmp_1_fu_1540_p4 when (tmp_56_i_i_fu_1534_p2(0) = '1') else 
        tmp_2_fu_1550_p2;
        tmp_40_fu_1733_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_8_i_i_fu_1705_p3),18));

    tmp_41_fu_1737_p2 <= std_logic_vector(signed(ap_const_lv18_3FFFF) + signed(tmp_29_reg_1907));
    tmp_41_i_i_fu_1084_p2 <= "1" when (tmp_48_fu_1081_p1 = ap_const_lv16_0) else "0";
    tmp_42_fu_1742_p3 <= 
        tmp_40_fu_1733_p1 when (tmp_38_i_i_fu_1728_p2(0) = '1') else 
        tmp_41_fu_1737_p2;
    tmp_42_i_i_fu_1142_p2 <= "1" when (tmp_50_fu_1138_p1 = ap_const_lv16_0) else "0";
    tmp_43_fu_1750_p1 <= rows_reg_1824(10 - 1 downto 0);
    tmp_44_fu_1753_p1 <= p_6_i_i_fu_1641_p3(10 - 1 downto 0);
    tmp_44_i_i_fu_1178_p3 <= (p_7_i_i_fu_1104_p3 & ap_const_lv16_0);
    tmp_45_fu_1757_p3 <= 
        tmp_43_fu_1750_p1 when (rev_fu_1722_p2(0) = '1') else 
        tmp_44_fu_1753_p1;
    tmp_46_fu_1051_p1 <= ap_phi_mux_i_op_assign_3_phi_fu_301_p4(18 - 1 downto 0);
    tmp_46_i_i_fu_1191_p3 <= (p_9_i_i_fu_1162_p3 & ap_const_lv16_0);
    tmp_47_fu_1074_p3 <= p_Val2_2_reg_1926(31 downto 31);
    tmp_48_fu_1081_p1 <= p_Val2_2_reg_1926(16 - 1 downto 0);
    tmp_49_fu_1130_p3 <= ap_phi_mux_p_Val2_23_phi_fu_312_p4(31 downto 31);
    tmp_4_fu_907_p4 <= tmp_77_i_i_i48_i_i_fu_889_p2(55 downto 24);
    tmp_4_i_i_fu_399_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_V_fu_389_p4),12));
    tmp_50_fu_1138_p1 <= ap_phi_mux_p_Val2_23_phi_fu_312_p4(16 - 1 downto 0);
    tmp_51_fu_1240_p1 <= rows_reg_1824(10 - 1 downto 0);
    tmp_52_fu_1243_p1 <= p_7_i_i_fu_1104_p3(10 - 1 downto 0);
    tmp_53_fu_1247_p3 <= 
        tmp_51_fu_1240_p1 when (rev1_fu_1234_p2(0) = '1') else 
        tmp_52_fu_1243_p1;
        tmp_54_fu_1268_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_9_i_i_fu_1162_p3),18));

    tmp_55_fu_1272_p2 <= std_logic_vector(signed(ap_const_lv18_3FFFF) + signed(tmp_30_reg_1902));
        tmp_55_i_i_fu_1513_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_29_1_1_i_i_reg_2064),33));

    tmp_56_fu_1277_p3 <= 
        tmp_54_fu_1268_p1 when (tmp_81_0_i_i_fu_1263_p2(0) = '1') else 
        tmp_55_fu_1272_p2;
    tmp_56_i_i_fu_1534_p2 <= "1" when (tmp_62_fu_1530_p1 = ap_const_lv16_0) else "0";
        tmp_57_fu_1311_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(c1_0_1_i_i_fu_1296_p2),18));

    tmp_58_fu_1315_p3 <= 
        tmp_57_fu_1311_p1 when (tmp_81_0_1_i_i_fu_1306_p2(0) = '1') else 
        tmp_55_fu_1272_p2;
    tmp_59_fu_1355_p1 <= r1_i_i_fu_1334_p2(10 - 1 downto 0);
    tmp_5_fu_1564_p3 <= 
        tmp_3_fu_1556_p3 when (tmp_61_fu_1522_p3(0) = '1') else 
        tmp_1_fu_1540_p4;
    tmp_60_fu_1359_p3 <= 
        tmp_51_fu_1240_p1 when (rev2_fu_1349_p2(0) = '1') else 
        tmp_59_fu_1355_p1;
    tmp_61_fu_1522_p3 <= r_V_2_fu_1516_p2(32 downto 32);
    tmp_62_fu_1530_p1 <= r_V_2_fu_1516_p2(16 - 1 downto 0);
    tmp_6_fu_759_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_751_p3),32));
    tmp_73_i_i_i40_cast5_fu_831_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_73_i_i_i40_i_i_fu_821_p4),79));
    tmp_73_i_i_i40_i_i_fu_821_p4 <= ((ap_const_lv1_1 & loc_V_3_fu_817_p1) & ap_const_lv1_0);
    tmp_73_i_i_i_cast59_s_fu_687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_73_i_i_i_i_i_fu_677_p4),79));
    tmp_73_i_i_i_i_i_fu_677_p4 <= ((ap_const_lv1_1 & loc_V_1_fu_673_p1) & ap_const_lv1_0);
        tmp_74_i_i_i44_cast_s_fu_859_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_74_i_i_i44_i_i_fu_853_p2),9));

    tmp_74_i_i_i44_i_i_fu_853_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(loc_V_2_fu_807_p4));
        tmp_74_i_i_i_cast_i_s_fu_715_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_74_i_i_i_i_i_fu_709_p2),9));

    tmp_74_i_i_i_i_i_fu_709_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(loc_V_fu_663_p4));
    tmp_75_i_i_i46_i_i_fu_879_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_assign_1_i_i_i45_s_fu_871_p1),79));
    tmp_75_i_i_i_i_i_fu_735_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_assign_1_i_i_i_ca_fu_727_p1),79));
    tmp_76_i_i_i47_i_i_fu_883_p2 <= std_logic_vector(shift_right(unsigned(tmp_73_i_i_i40_i_i_fu_821_p4),to_integer(unsigned('0' & sh_assign_1_i_i_i45_1_fu_875_p1(25-1 downto 0)))));
    tmp_76_i_i_i_i_i_fu_739_p2 <= std_logic_vector(shift_right(unsigned(tmp_73_i_i_i_i_i_fu_677_p4),to_integer(unsigned('0' & sh_assign_1_i_i_i_ca_1_fu_731_p1(25-1 downto 0)))));
    tmp_77_i_i_i48_i_i_fu_889_p2 <= std_logic_vector(shift_left(unsigned(tmp_73_i_i_i40_cast5_fu_831_p1),to_integer(unsigned('0' & tmp_75_i_i_i46_i_i_fu_879_p1(31-1 downto 0)))));
    tmp_77_i_i_i_i_i_fu_745_p2 <= std_logic_vector(shift_left(unsigned(tmp_73_i_i_i_cast59_s_fu_687_p1),to_integer(unsigned('0' & tmp_75_i_i_i_i_i_fu_735_p1(31-1 downto 0)))));
    tmp_7_fu_763_p4 <= tmp_77_i_i_i_i_i_fu_745_p2(55 downto 24);
    tmp_81_0_1_i_i_fu_1306_p2 <= "1" when (signed(c1_0_1_cast_i_i_fu_1302_p1) < signed(cols_reg_1834)) else "0";
    tmp_81_0_i_i_fu_1263_p2 <= "1" when (signed(c0_2_fu_1170_p1) < signed(cols_reg_1834)) else "0";
    tmp_8_fu_1592_p2 <= std_logic_vector(unsigned(tmp_35_fu_1588_p1) + unsigned(tmp_14_cast_reg_1943));
    tmp_9_fu_1773_p2 <= std_logic_vector(unsigned(tmp_42_fu_1742_p3) + unsigned(tmp_20_cast_fu_1765_p3));
    tmp_fu_1494_p2 <= std_logic_vector(unsigned(p_Val2_28_0_i_i_reg_2049) + unsigned(p_Val2_28_0_1_i_i_reg_2054));
    tmp_i_i_i_i41_cast_i_fu_835_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc_V_2_fu_807_p4),9));
    tmp_i_i_i_i_cast_i_i_fu_691_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loc_V_fu_663_p4),9));
    tmp_s_fu_903_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_16_fu_895_p3),32));
end behav;

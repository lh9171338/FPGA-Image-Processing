// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Resize (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        src_val_address0,
        src_val_ce0,
        src_val_q0,
        src_val_address1,
        src_val_ce1,
        src_val_q1,
        src_rows_dout,
        src_rows_empty_n,
        src_rows_read,
        src_cols_dout,
        src_cols_empty_n,
        src_cols_read,
        dst_val_address0,
        dst_val_ce0,
        dst_val_we0,
        dst_val_d0,
        scale,
        method,
        dst_rows_din,
        dst_rows_full_n,
        dst_rows_write,
        dst_cols_din,
        dst_cols_full_n,
        dst_cols_write
);

parameter    ap_ST_fsm_state1 = 45'd1;
parameter    ap_ST_fsm_state2 = 45'd2;
parameter    ap_ST_fsm_state3 = 45'd4;
parameter    ap_ST_fsm_state4 = 45'd8;
parameter    ap_ST_fsm_state5 = 45'd16;
parameter    ap_ST_fsm_state6 = 45'd32;
parameter    ap_ST_fsm_state7 = 45'd64;
parameter    ap_ST_fsm_state8 = 45'd128;
parameter    ap_ST_fsm_state9 = 45'd256;
parameter    ap_ST_fsm_state10 = 45'd512;
parameter    ap_ST_fsm_state11 = 45'd1024;
parameter    ap_ST_fsm_state12 = 45'd2048;
parameter    ap_ST_fsm_state13 = 45'd4096;
parameter    ap_ST_fsm_state14 = 45'd8192;
parameter    ap_ST_fsm_state15 = 45'd16384;
parameter    ap_ST_fsm_state16 = 45'd32768;
parameter    ap_ST_fsm_state17 = 45'd65536;
parameter    ap_ST_fsm_state18 = 45'd131072;
parameter    ap_ST_fsm_state19 = 45'd262144;
parameter    ap_ST_fsm_state20 = 45'd524288;
parameter    ap_ST_fsm_state21 = 45'd1048576;
parameter    ap_ST_fsm_state22 = 45'd2097152;
parameter    ap_ST_fsm_state23 = 45'd4194304;
parameter    ap_ST_fsm_state24 = 45'd8388608;
parameter    ap_ST_fsm_state25 = 45'd16777216;
parameter    ap_ST_fsm_state26 = 45'd33554432;
parameter    ap_ST_fsm_state27 = 45'd67108864;
parameter    ap_ST_fsm_state28 = 45'd134217728;
parameter    ap_ST_fsm_state29 = 45'd268435456;
parameter    ap_ST_fsm_state30 = 45'd536870912;
parameter    ap_ST_fsm_state31 = 45'd1073741824;
parameter    ap_ST_fsm_state32 = 45'd2147483648;
parameter    ap_ST_fsm_state33 = 45'd4294967296;
parameter    ap_ST_fsm_state34 = 45'd8589934592;
parameter    ap_ST_fsm_state35 = 45'd17179869184;
parameter    ap_ST_fsm_state36 = 45'd34359738368;
parameter    ap_ST_fsm_state37 = 45'd68719476736;
parameter    ap_ST_fsm_state38 = 45'd137438953472;
parameter    ap_ST_fsm_state39 = 45'd274877906944;
parameter    ap_ST_fsm_state40 = 45'd549755813888;
parameter    ap_ST_fsm_pp0_stage0 = 45'd1099511627776;
parameter    ap_ST_fsm_pp0_stage1 = 45'd2199023255552;
parameter    ap_ST_fsm_state46 = 45'd4398046511104;
parameter    ap_ST_fsm_pp1_stage0 = 45'd8796093022208;
parameter    ap_ST_fsm_state49 = 45'd17592186044416;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
output  [15:0] src_val_address0;
output   src_val_ce0;
input  [7:0] src_val_q0;
output  [15:0] src_val_address1;
output   src_val_ce1;
input  [7:0] src_val_q1;
input  [31:0] src_rows_dout;
input   src_rows_empty_n;
output   src_rows_read;
input  [31:0] src_cols_dout;
input   src_cols_empty_n;
output   src_cols_read;
output  [15:0] dst_val_address0;
output   dst_val_ce0;
output   dst_val_we0;
output  [7:0] dst_val_d0;
input  [31:0] scale;
input  [1:0] method;
output  [31:0] dst_rows_din;
input   dst_rows_full_n;
output   dst_rows_write;
output  [31:0] dst_cols_din;
input   dst_cols_full_n;
output   dst_cols_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg[15:0] src_val_address0;
reg src_val_ce0;
reg[15:0] src_val_address1;
reg src_val_ce1;
reg src_rows_read;
reg src_cols_read;
reg[15:0] dst_val_address0;
reg dst_val_ce0;
reg dst_val_we0;
reg[7:0] dst_val_d0;
reg dst_rows_write;
reg dst_cols_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [44:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    src_rows_blk_n;
wire    ap_CS_fsm_state30;
reg    src_cols_blk_n;
reg    dst_rows_blk_n;
wire    ap_CS_fsm_state39;
reg    dst_cols_blk_n;
reg   [30:0] i_op_assign_3_reg_297;
reg   [31:0] p_Val2_23_reg_308;
reg   [30:0] i_op_assign_1_reg_319;
reg  signed [31:0] p_Val2_15_reg_330;
reg   [7:0] reg_369;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state42_pp0_stage1_iter0;
wire    ap_block_state44_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] tmp_32_i_i_reg_1955;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state41_pp0_stage0_iter0;
wire    ap_block_state43_pp0_stage0_iter1;
wire    ap_block_state45_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg    ap_block_state1;
reg   [0:0] isneg_reg_1794;
wire   [51:0] tmp_20_fu_403_p1;
reg   [51:0] tmp_20_reg_1800;
wire   [0:0] tmp_2_i_i_fu_407_p2;
reg   [0:0] tmp_2_i_i_reg_1805;
wire   [11:0] F2_fu_413_p2;
reg   [11:0] F2_reg_1811;
wire    ap_CS_fsm_state2;
reg   [31:0] rows_reg_1824;
reg    ap_block_state30;
reg   [31:0] cols_reg_1834;
wire   [31:0] grp_fu_359_p1;
reg   [31:0] tmp_i_i_reg_1844;
wire    ap_CS_fsm_state32;
wire   [31:0] grp_fu_362_p1;
reg   [31:0] tmp_8_i_i_reg_1849;
wire   [31:0] grp_fu_351_p2;
reg   [31:0] tmp_6_i_i_reg_1854;
wire    ap_CS_fsm_state34;
wire   [31:0] grp_fu_355_p2;
reg   [31:0] tmp_9_i_i_reg_1859;
wire   [31:0] grp_fu_341_p2;
reg   [31:0] x_assign_reg_1864;
wire    ap_CS_fsm_state38;
wire   [31:0] grp_fu_346_p2;
reg   [31:0] x_assign_1_reg_1869;
wire   [31:0] p_Val2_33_fu_787_p3;
reg   [31:0] p_Val2_33_reg_1874;
reg    ap_block_state39;
wire   [31:0] p_Val2_34_fu_931_p3;
reg   [31:0] p_Val2_34_reg_1880;
wire  signed [31:0] iscale_V_fu_940_p1;
reg  signed [31:0] iscale_V_reg_1886;
wire   [0:0] tmp_23_i_i_fu_944_p2;
reg   [0:0] tmp_23_i_i_reg_1894;
wire   [0:0] tmp_25_i_i_fu_950_p2;
reg   [0:0] tmp_25_i_i_reg_1898;
wire   [17:0] tmp_30_fu_956_p1;
reg   [17:0] tmp_30_reg_1902;
wire   [17:0] tmp_29_fu_959_p1;
reg   [17:0] tmp_29_reg_1907;
wire   [0:0] tmp_28_i_i_fu_966_p2;
wire    ap_CS_fsm_state40;
wire   [30:0] i_1_fu_971_p2;
reg   [30:0] i_1_reg_1916;
wire   [17:0] tmp_16_cast_fu_981_p3;
reg   [17:0] tmp_16_cast_reg_1921;
wire   [31:0] p_Val2_2_fu_989_p2;
reg   [31:0] p_Val2_2_reg_1926;
wire   [0:0] tmp_26_i_i_fu_998_p2;
wire   [30:0] i_fu_1003_p2;
reg   [30:0] i_reg_1938;
wire   [17:0] tmp_14_cast_fu_1013_p3;
reg   [17:0] tmp_14_cast_reg_1943;
wire   [32:0] r_V_fu_1030_p2;
reg   [32:0] r_V_reg_1948;
wire   [0:0] tmp_32_i_i_fu_1040_p2;
reg   [0:0] tmp_32_i_i_reg_1955_pp0_iter1_reg;
wire   [30:0] j_1_fu_1045_p2;
reg   [30:0] j_1_reg_1959;
wire   [17:0] tmp_10_fu_1055_p2;
reg   [17:0] tmp_10_reg_1964;
reg   [17:0] tmp_10_reg_1964_pp0_iter1_reg;
wire   [31:0] next_mul1_fu_1060_p2;
reg   [31:0] next_mul1_reg_1969;
wire  signed [31:0] p_Val2_25_fu_1186_p2;
reg  signed [31:0] p_Val2_25_reg_1974;
wire  signed [31:0] p_Val2_27_fu_1199_p2;
reg  signed [31:0] p_Val2_27_reg_1979;
wire  signed [47:0] OP2_V_1_cast_i_i_fu_1205_p1;
reg  signed [47:0] OP2_V_1_cast_i_i_reg_1984;
wire  signed [47:0] OP1_V_5_cast_i_i_fu_1209_p1;
reg  signed [47:0] OP1_V_5_cast_i_i_reg_1989;
reg  signed [31:0] tmp_54_i_i_reg_1994;
wire   [17:0] tmp_14_fu_1375_p2;
reg   [17:0] tmp_14_reg_2009;
wire   [17:0] tmp_15_fu_1381_p2;
reg   [17:0] tmp_15_reg_2014;
reg  signed [31:0] tmp_48_i_i_reg_2019;
reg  signed [31:0] tmp_50_i_i_reg_2024;
reg  signed [31:0] tmp_52_i_i_reg_2029;
reg   [7:0] src_val_load_2_reg_2034;
wire   [31:0] p_Val2_28_0_i_i_fu_1463_p2;
reg   [31:0] p_Val2_28_0_i_i_reg_2049;
wire   [31:0] p_Val2_28_0_1_i_i_fu_1471_p2;
reg   [31:0] p_Val2_28_0_1_i_i_reg_2054;
wire   [31:0] p_Val2_28_1_1_i_i_fu_1480_p2;
reg   [31:0] p_Val2_28_1_1_i_i_reg_2059;
wire   [31:0] p_Val2_29_1_1_i_i_fu_1503_p2;
reg   [31:0] p_Val2_29_1_1_i_i_reg_2064;
wire   [0:0] tmp_29_i_i_fu_1577_p2;
reg   [0:0] tmp_29_i_i_reg_2069;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state47_pp1_stage0_iter0;
wire    ap_block_state48_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [30:0] j_fu_1582_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [17:0] tmp_8_fu_1592_p2;
reg   [17:0] tmp_8_reg_2078;
wire   [31:0] next_mul_fu_1597_p2;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state41;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state47;
reg    ap_enable_reg_pp1_iter1;
reg   [30:0] i_op_assign_2_reg_275;
wire    ap_CS_fsm_state46;
reg   [30:0] i_op_assign_reg_286;
wire    ap_CS_fsm_state49;
reg   [30:0] ap_phi_mux_i_op_assign_3_phi_fu_301_p4;
wire    ap_block_pp0_stage0;
reg   [31:0] ap_phi_mux_p_Val2_23_phi_fu_312_p4;
wire  signed [63:0] tmp_26_cast_fu_1291_p1;
wire  signed [63:0] tmp_27_cast_fu_1329_p1;
wire  signed [63:0] tmp_31_cast_fu_1451_p1;
wire    ap_block_pp0_stage1;
wire  signed [63:0] tmp_32_cast_fu_1455_p1;
wire   [63:0] tmp_22_cast_fu_1509_p1;
wire  signed [63:0] tmp_21_cast_fu_1779_p1;
wire    ap_block_pp1_stage0;
wire   [63:0] tmp_17_cast_fu_1784_p1;
wire   [7:0] tmp_5_fu_1564_p3;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state31;
wire   [63:0] d_assign_fu_365_p1;
wire   [63:0] ireg_V_fu_373_p1;
wire   [10:0] exp_tmp_V_fu_389_p4;
wire   [62:0] tmp_18_fu_377_p1;
wire   [11:0] tmp_4_i_i_fu_399_p1;
wire   [52:0] tmp_1_i_i_fu_419_p3;
wire   [53:0] p_Result_2_fu_426_p1;
wire   [53:0] man_V_1_fu_430_p2;
wire   [0:0] tmp_10_i_i_fu_443_p2;
wire   [11:0] tmp_11_i_i_fu_448_p2;
wire   [11:0] tmp_12_i_i_fu_453_p2;
wire  signed [11:0] sh_amt_fu_458_p3;
wire   [53:0] man_V_2_fu_436_p3;
wire   [6:0] tmp_24_fu_485_p4;
wire  signed [31:0] sh_amt_cast_i_i_fu_466_p1;
wire   [53:0] tmp_18_i_i_fu_501_p1;
wire   [53:0] tmp_19_i_i_fu_505_p2;
wire   [31:0] tmp_23_fu_475_p1;
wire   [0:0] tmp_13_i_i_fu_470_p2;
wire   [0:0] sel_tmp1_fu_528_p2;
wire   [0:0] sel_tmp6_demorgan_fu_539_p2;
wire   [0:0] sel_tmp6_fu_544_p2;
wire   [0:0] tmp_15_i_i_fu_479_p2;
wire   [0:0] sel_tmp7_fu_550_p2;
wire   [0:0] sel_tmp8_fu_556_p2;
wire   [0:0] sel_tmp21_demorgan_fu_574_p2;
wire   [0:0] icmp_fu_495_p2;
wire   [0:0] sel_tmp3_fu_580_p2;
wire   [0:0] sel_tmp4_fu_586_p2;
wire   [31:0] tmp_21_i_i_fu_522_p2;
wire   [31:0] tmp_25_fu_511_p1;
wire   [0:0] sel_tmp_fu_568_p2;
wire   [0:0] sel_tmp9_fu_562_p2;
wire   [31:0] p_071_i_i_fu_515_p3;
wire   [0:0] sel_tmp2_fu_533_p2;
wire   [0:0] or_cond_fu_600_p2;
wire   [31:0] newSel_fu_592_p3;
wire   [31:0] newSel3_fu_606_p3;
wire   [0:0] or_cond4_fu_614_p2;
wire   [0:0] or_cond6_fu_628_p2;
wire   [31:0] newSel5_fu_620_p3;
wire  signed [31:0] newSel7_fu_634_p3;
wire   [31:0] p_Val2_s_fu_652_p1;
wire   [22:0] loc_V_1_fu_673_p1;
wire   [24:0] tmp_73_i_i_i_i_i_fu_677_p4;
wire   [7:0] loc_V_fu_663_p4;
wire   [8:0] tmp_i_i_i_i_cast_i_i_fu_691_p1;
wire   [8:0] sh_assign_fu_695_p2;
wire   [7:0] tmp_74_i_i_i_i_i_fu_709_p2;
wire   [0:0] isNeg_fu_701_p3;
wire  signed [8:0] tmp_74_i_i_i_cast_i_s_fu_715_p1;
wire  signed [8:0] sh_assign_1_fu_719_p3;
wire  signed [31:0] sh_assign_1_i_i_i_ca_fu_727_p1;
wire  signed [24:0] sh_assign_1_i_i_i_ca_1_fu_731_p1;
wire   [78:0] tmp_73_i_i_i_cast59_s_fu_687_p1;
wire   [78:0] tmp_75_i_i_i_i_i_fu_735_p1;
wire   [24:0] tmp_76_i_i_i_i_i_fu_739_p2;
wire   [0:0] tmp_12_fu_751_p3;
wire   [78:0] tmp_77_i_i_i_i_i_fu_745_p2;
wire   [31:0] tmp_6_fu_759_p1;
wire   [31:0] tmp_7_fu_763_p4;
wire   [31:0] p_Val2_3_fu_773_p3;
wire   [0:0] p_Result_s_fu_655_p3;
wire   [31:0] p_Val2_i_i_i_i_i_fu_781_p2;
wire   [31:0] p_Val2_6_fu_796_p1;
wire   [22:0] loc_V_3_fu_817_p1;
wire   [24:0] tmp_73_i_i_i40_i_i_fu_821_p4;
wire   [7:0] loc_V_2_fu_807_p4;
wire   [8:0] tmp_i_i_i_i41_cast_i_fu_835_p1;
wire   [8:0] sh_assign_2_fu_839_p2;
wire   [7:0] tmp_74_i_i_i44_i_i_fu_853_p2;
wire   [0:0] isNeg_1_fu_845_p3;
wire  signed [8:0] tmp_74_i_i_i44_cast_s_fu_859_p1;
wire  signed [8:0] sh_assign_3_fu_863_p3;
wire  signed [31:0] sh_assign_1_i_i_i45_s_fu_871_p1;
wire  signed [24:0] sh_assign_1_i_i_i45_1_fu_875_p1;
wire   [78:0] tmp_73_i_i_i40_cast5_fu_831_p1;
wire   [78:0] tmp_75_i_i_i46_i_i_fu_879_p1;
wire   [24:0] tmp_76_i_i_i47_i_i_fu_883_p2;
wire   [0:0] tmp_16_fu_895_p3;
wire   [78:0] tmp_77_i_i_i48_i_i_fu_889_p2;
wire   [31:0] tmp_s_fu_903_p1;
wire   [31:0] tmp_4_fu_907_p4;
wire   [31:0] p_Val2_8_fu_917_p3;
wire   [0:0] p_Result_1_fu_799_p3;
wire   [31:0] p_Val2_i_i_i54_i_s_fu_925_p2;
wire   [31:0] grp_fu_646_p2;
wire   [31:0] i_op_assign_2_cast_i_fu_962_p1;
wire   [9:0] tmp_34_fu_977_p1;
wire   [30:0] p_Val2_2_fu_989_p0;
wire   [31:0] i_op_assign_cast_i_i_fu_994_p1;
wire   [9:0] tmp_33_fu_1009_p1;
wire   [30:0] p_Val2_13_fu_1021_p0;
wire   [31:0] p_Val2_13_fu_1021_p2;
wire  signed [32:0] tmp_31_i_i_fu_1026_p1;
wire   [31:0] i_op_assign_3_cast_i_fu_1036_p1;
wire   [17:0] tmp_46_fu_1051_p1;
wire   [15:0] tmp_48_fu_1081_p1;
wire   [15:0] ret_V_7_fu_1065_p4;
wire   [0:0] tmp_41_i_i_fu_1084_p2;
wire   [15:0] ret_V_9_fu_1090_p2;
wire   [0:0] tmp_47_fu_1074_p3;
wire   [15:0] p_1_i_i_fu_1096_p3;
wire  signed [15:0] p_7_i_i_fu_1104_p3;
wire   [15:0] tmp_50_fu_1138_p1;
wire   [15:0] ret_V_10_fu_1120_p4;
wire   [0:0] tmp_42_i_i_fu_1142_p2;
wire   [15:0] ret_V_11_fu_1148_p2;
wire   [0:0] tmp_49_fu_1130_p3;
wire   [15:0] p_3_i_i_fu_1154_p3;
wire  signed [15:0] p_9_i_i_fu_1162_p3;
wire   [31:0] tmp_44_i_i_fu_1178_p3;
wire   [31:0] tmp_46_i_i_fu_1191_p3;
wire  signed [31:0] p_Val2_31_fu_1213_p0;
wire  signed [31:0] p_Val2_31_fu_1213_p1;
wire   [47:0] p_Val2_31_fu_1213_p2;
wire  signed [31:0] r0_2_fu_1112_p1;
wire   [0:0] slt1_fu_1229_p2;
wire   [0:0] rev1_fu_1234_p2;
wire   [9:0] tmp_51_fu_1240_p1;
wire   [9:0] tmp_52_fu_1243_p1;
wire   [9:0] tmp_53_fu_1247_p3;
wire  signed [31:0] c0_2_fu_1170_p1;
wire   [0:0] tmp_81_0_i_i_fu_1263_p2;
wire  signed [17:0] tmp_54_fu_1268_p1;
wire   [17:0] tmp_55_fu_1272_p2;
wire   [17:0] tmp_56_fu_1277_p3;
wire   [17:0] tmp_25_cast_fu_1255_p3;
wire   [17:0] tmp_11_fu_1285_p2;
wire  signed [16:0] c0_3_cast_i_i_fu_1174_p1;
wire  signed [16:0] c1_0_1_i_i_fu_1296_p2;
wire  signed [31:0] c1_0_1_cast_i_i_fu_1302_p1;
wire   [0:0] tmp_81_0_1_i_i_fu_1306_p2;
wire  signed [17:0] tmp_57_fu_1311_p1;
wire   [17:0] tmp_58_fu_1315_p3;
wire   [17:0] tmp_13_fu_1323_p2;
wire  signed [16:0] r0_3_cast_i_i_fu_1116_p1;
wire  signed [16:0] r1_i_i_fu_1334_p2;
wire  signed [31:0] r1_cast_i_i_fu_1340_p1;
wire   [0:0] slt2_fu_1344_p2;
wire   [0:0] rev2_fu_1349_p2;
wire   [9:0] tmp_59_fu_1355_p1;
wire   [9:0] tmp_60_fu_1359_p3;
wire   [17:0] tmp_30_cast_fu_1367_p3;
wire   [31:0] p_Val2_i_i_fu_1387_p2;
wire   [31:0] p_Val2_11_i_i_fu_1392_p2;
wire  signed [31:0] p_Val2_28_fu_1405_p0;
wire  signed [47:0] OP2_V_cast_i_i_fu_1401_p1;
wire  signed [31:0] p_Val2_28_fu_1405_p1;
wire  signed [47:0] OP1_V_4_cast_i_i_fu_1397_p1;
wire   [47:0] p_Val2_28_fu_1405_p2;
wire  signed [31:0] p_Val2_29_fu_1421_p0;
wire  signed [31:0] p_Val2_29_fu_1421_p1;
wire   [47:0] p_Val2_29_fu_1421_p2;
wire  signed [31:0] p_Val2_30_fu_1436_p0;
wire  signed [31:0] p_Val2_30_fu_1436_p1;
wire   [47:0] p_Val2_30_fu_1436_p2;
wire   [7:0] p_Val2_28_0_i_i_fu_1463_p1;
wire   [7:0] p_Val2_28_0_1_i_i_fu_1471_p1;
wire   [7:0] p_Val2_28_1_1_i_i_fu_1480_p1;
wire   [7:0] p_Val2_28_1_i_i_fu_1489_p1;
wire   [31:0] p_Val2_28_1_i_i_fu_1489_p2;
wire   [31:0] tmp2_fu_1498_p2;
wire   [31:0] tmp_fu_1494_p2;
wire  signed [32:0] tmp_55_i_i_fu_1513_p1;
wire   [32:0] r_V_2_fu_1516_p2;
wire   [15:0] tmp_62_fu_1530_p1;
wire   [7:0] tmp_1_fu_1540_p4;
wire   [0:0] tmp_56_i_i_fu_1534_p2;
wire   [7:0] tmp_2_fu_1550_p2;
wire   [0:0] tmp_61_fu_1522_p3;
wire   [7:0] tmp_3_fu_1556_p3;
wire   [31:0] i_op_assign_1_cast_i_fu_1573_p1;
wire   [17:0] tmp_35_fu_1588_p1;
wire   [15:0] tmp_37_fu_1618_p1;
wire   [16:0] ret_V_4_fu_1602_p4;
wire   [0:0] tmp_33_i_i_fu_1621_p2;
wire   [16:0] ret_V_5_fu_1627_p2;
wire   [0:0] tmp_36_fu_1611_p3;
wire   [16:0] p_i_i_fu_1633_p3;
wire  signed [16:0] p_6_i_i_fu_1641_p3;
wire  signed [32:0] tmp_34_i_i_fu_1653_p1;
wire   [32:0] r_V_1_fu_1657_p2;
wire   [15:0] tmp_39_fu_1681_p1;
wire   [16:0] ret_V_6_fu_1663_p4;
wire   [0:0] tmp_36_i_i_fu_1685_p2;
wire   [16:0] ret_V_8_fu_1691_p2;
wire   [0:0] tmp_38_fu_1673_p3;
wire   [16:0] p_2_i_i_fu_1697_p3;
wire  signed [16:0] p_8_i_i_fu_1705_p3;
wire  signed [31:0] r0_fu_1649_p1;
wire   [0:0] slt_fu_1717_p2;
wire  signed [31:0] c0_fu_1713_p1;
wire   [0:0] tmp_38_i_i_fu_1728_p2;
wire  signed [17:0] tmp_40_fu_1733_p1;
wire   [17:0] tmp_41_fu_1737_p2;
wire   [0:0] rev_fu_1722_p2;
wire   [9:0] tmp_43_fu_1750_p1;
wire   [9:0] tmp_44_fu_1753_p1;
wire   [9:0] tmp_45_fu_1757_p3;
wire   [17:0] tmp_42_fu_1742_p3;
wire   [17:0] tmp_20_cast_fu_1765_p3;
wire   [17:0] tmp_9_fu_1773_p2;
reg    grp_fu_646_ap_start;
wire    grp_fu_646_ap_done;
reg    grp_fu_646_ce;
reg   [44:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire   [31:0] p_Val2_28_0_1_i_i_fu_1471_p10;
wire   [31:0] p_Val2_28_0_i_i_fu_1463_p10;
wire   [31:0] p_Val2_28_1_1_i_i_fu_1480_p10;
wire   [31:0] p_Val2_28_1_i_i_fu_1489_p10;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 45'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
end

imgproc_fadd_32nscud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
imgproc_fadd_32nscud_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_6_i_i_reg_1854),
    .din1(32'd1056964608),
    .ce(1'b1),
    .dout(grp_fu_341_p2)
);

imgproc_fadd_32nscud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
imgproc_fadd_32nscud_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_9_i_i_reg_1859),
    .din1(32'd1056964608),
    .ce(1'b1),
    .dout(grp_fu_346_p2)
);

imgproc_fmul_32nsdEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
imgproc_fmul_32nsdEe_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_i_i_reg_1844),
    .din1(scale),
    .ce(1'b1),
    .dout(grp_fu_351_p2)
);

imgproc_fmul_32nsdEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
imgproc_fmul_32nsdEe_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_8_i_i_reg_1849),
    .din1(scale),
    .ce(1'b1),
    .dout(grp_fu_355_p2)
);

imgproc_sitofp_32eOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
imgproc_sitofp_32eOg_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(rows_reg_1824),
    .ce(1'b1),
    .dout(grp_fu_359_p1)
);

imgproc_sitofp_32eOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
imgproc_sitofp_32eOg_U38(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(cols_reg_1834),
    .ce(1'b1),
    .dout(grp_fu_362_p1)
);

imgproc_fpext_32nfYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
imgproc_fpext_32nfYi_U39(
    .din0(scale),
    .dout(d_assign_fu_365_p1)
);

imgproc_sdiv_34nsg8j #(
    .ID( 1 ),
    .NUM_STAGE( 38 ),
    .din0_WIDTH( 34 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
imgproc_sdiv_34nsg8j_U40(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_646_ap_start),
    .done(grp_fu_646_ap_done),
    .din0(34'd4294967296),
    .din1(newSel7_fu_634_p3),
    .ce(grp_fu_646_ce),
    .dout(grp_fu_646_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state40) & (((tmp_26_i_i_fu_998_p2 == 1'd0) & (tmp_23_i_i_reg_1894 == 1'd1)) | ((tmp_28_i_i_fu_966_p2 == 1'd0) & (tmp_23_i_i_reg_1894 == 1'd0)) | ((tmp_25_i_i_reg_1898 == 1'd0) & (tmp_23_i_i_reg_1894 == 1'd0))))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state41) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((tmp_23_i_i_reg_1894 == 1'd0) & (1'b1 == ap_CS_fsm_state40) & (tmp_28_i_i_fu_966_p2 == 1'd1) & (tmp_25_i_i_reg_1898 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state41)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state41);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((tmp_23_i_i_reg_1894 == 1'd0) & (1'b1 == ap_CS_fsm_state40) & (tmp_28_i_i_fu_966_p2 == 1'd1) & (tmp_25_i_i_reg_1898 == 1'd1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state47) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state40) & (tmp_26_i_i_fu_998_p2 == 1'd1) & (tmp_23_i_i_reg_1894 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state47))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state47);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((1'b1 == ap_CS_fsm_state40) & (tmp_26_i_i_fu_998_p2 == 1'd1) & (tmp_23_i_i_reg_1894 == 1'd1))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) & (tmp_26_i_i_fu_998_p2 == 1'd1) & (tmp_23_i_i_reg_1894 == 1'd1))) begin
        i_op_assign_1_reg_319 <= 31'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_29_i_i_fu_1577_p2 == 1'd1))) begin
        i_op_assign_1_reg_319 <= j_fu_1582_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        i_op_assign_2_reg_275 <= i_1_reg_1916;
    end else if ((~((dst_cols_full_n == 1'b0) | (dst_rows_full_n == 1'b0)) & (tmp_23_i_i_fu_944_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state39) & (tmp_25_i_i_fu_950_p2 == 1'd1))) begin
        i_op_assign_2_reg_275 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_23_i_i_reg_1894 == 1'd0) & (1'b1 == ap_CS_fsm_state40) & (tmp_28_i_i_fu_966_p2 == 1'd1) & (tmp_25_i_i_reg_1898 == 1'd1))) begin
        i_op_assign_3_reg_297 <= 31'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_32_i_i_reg_1955 == 1'd1))) begin
        i_op_assign_3_reg_297 <= j_1_reg_1959;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        i_op_assign_reg_286 <= i_reg_1938;
    end else if ((~((dst_cols_full_n == 1'b0) | (dst_rows_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state39) & (tmp_23_i_i_fu_944_p2 == 1'd1))) begin
        i_op_assign_reg_286 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) & (tmp_26_i_i_fu_998_p2 == 1'd1) & (tmp_23_i_i_reg_1894 == 1'd1))) begin
        p_Val2_15_reg_330 <= 32'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_29_i_i_fu_1577_p2 == 1'd1))) begin
        p_Val2_15_reg_330 <= next_mul_fu_1597_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_23_i_i_reg_1894 == 1'd0) & (1'b1 == ap_CS_fsm_state40) & (tmp_28_i_i_fu_966_p2 == 1'd1) & (tmp_25_i_i_reg_1898 == 1'd1))) begin
        p_Val2_23_reg_308 <= 32'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_32_i_i_reg_1955 == 1'd1))) begin
        p_Val2_23_reg_308 <= next_mul1_reg_1969;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        F2_reg_1811 <= F2_fu_413_p2;
        isneg_reg_1794 <= ireg_V_fu_373_p1[32'd63];
        tmp_20_reg_1800 <= tmp_20_fu_403_p1;
        tmp_2_i_i_reg_1805 <= tmp_2_i_i_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_32_i_i_fu_1040_p2 == 1'd1))) begin
        OP1_V_5_cast_i_i_reg_1989 <= OP1_V_5_cast_i_i_fu_1209_p1;
        OP2_V_1_cast_i_i_reg_1984 <= OP2_V_1_cast_i_i_fu_1205_p1;
        p_Val2_25_reg_1974 <= p_Val2_25_fu_1186_p2;
        p_Val2_27_reg_1979 <= p_Val2_27_fu_1199_p2;
        tmp_10_reg_1964 <= tmp_10_fu_1055_p2;
        tmp_14_reg_2009 <= tmp_14_fu_1375_p2;
        tmp_15_reg_2014 <= tmp_15_fu_1381_p2;
        tmp_54_i_i_reg_1994 <= {{p_Val2_31_fu_1213_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state30))) begin
        cols_reg_1834 <= src_cols_dout;
        rows_reg_1824 <= src_rows_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_23_i_i_reg_1894 == 1'd0) & (1'b1 == ap_CS_fsm_state40) & (tmp_25_i_i_reg_1898 == 1'd1))) begin
        i_1_reg_1916 <= i_1_fu_971_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) & (tmp_23_i_i_reg_1894 == 1'd1))) begin
        i_reg_1938 <= i_fu_1003_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((dst_cols_full_n == 1'b0) | (dst_rows_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state39))) begin
        iscale_V_reg_1886 <= iscale_V_fu_940_p1;
        p_Val2_33_reg_1874 <= p_Val2_33_fu_787_p3;
        p_Val2_34_reg_1880 <= p_Val2_34_fu_931_p3;
        tmp_23_i_i_reg_1894 <= tmp_23_i_i_fu_944_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        j_1_reg_1959 <= j_1_fu_1045_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_32_i_i_fu_1040_p2 == 1'd1))) begin
        next_mul1_reg_1969 <= next_mul1_fu_1060_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_32_i_i_reg_1955 == 1'd1))) begin
        p_Val2_28_0_1_i_i_reg_2054 <= p_Val2_28_0_1_i_i_fu_1471_p2;
        p_Val2_28_0_i_i_reg_2049 <= p_Val2_28_0_i_i_fu_1463_p2;
        p_Val2_28_1_1_i_i_reg_2059 <= p_Val2_28_1_1_i_i_fu_1480_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_32_i_i_reg_1955_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        p_Val2_29_1_1_i_i_reg_2064 <= p_Val2_29_1_1_i_i_fu_1503_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_23_i_i_reg_1894 == 1'd0) & (1'b1 == ap_CS_fsm_state40) & (tmp_28_i_i_fu_966_p2 == 1'd1) & (tmp_25_i_i_reg_1898 == 1'd1))) begin
        p_Val2_2_reg_1926 <= p_Val2_2_fu_989_p2;
        tmp_16_cast_reg_1921[17 : 8] <= tmp_16_cast_fu_981_p3[17 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) & (tmp_26_i_i_fu_998_p2 == 1'd1) & (tmp_23_i_i_reg_1894 == 1'd1))) begin
        r_V_reg_1948 <= r_V_fu_1030_p2;
        tmp_14_cast_reg_1943[17 : 8] <= tmp_14_cast_fu_1013_p3[17 : 8];
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_32_i_i_reg_1955 == 1'd1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_32_i_i_reg_1955 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        reg_369 <= src_val_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_32_i_i_reg_1955 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        src_val_load_2_reg_2034 <= src_val_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_10_reg_1964_pp0_iter1_reg <= tmp_10_reg_1964;
        tmp_32_i_i_reg_1955 <= tmp_32_i_i_fu_1040_p2;
        tmp_32_i_i_reg_1955_pp0_iter1_reg <= tmp_32_i_i_reg_1955;
    end
end

always @ (posedge ap_clk) begin
    if ((~((dst_cols_full_n == 1'b0) | (dst_rows_full_n == 1'b0)) & (tmp_23_i_i_fu_944_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state39))) begin
        tmp_25_i_i_reg_1898 <= tmp_25_i_i_fu_950_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_29_i_i_reg_2069 <= tmp_29_i_i_fu_1577_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((dst_cols_full_n == 1'b0) | (dst_rows_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state39) & (tmp_23_i_i_fu_944_p2 == 1'd1))) begin
        tmp_29_reg_1907 <= tmp_29_fu_959_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((dst_cols_full_n == 1'b0) | (dst_rows_full_n == 1'b0)) & (tmp_23_i_i_fu_944_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state39) & (tmp_25_i_i_fu_950_p2 == 1'd1))) begin
        tmp_30_reg_1902 <= tmp_30_fu_956_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_32_i_i_reg_1955 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        tmp_48_i_i_reg_2019 <= {{p_Val2_28_fu_1405_p2[47:16]}};
        tmp_50_i_i_reg_2024 <= {{p_Val2_29_fu_1421_p2[47:16]}};
        tmp_52_i_i_reg_2029 <= {{p_Val2_30_fu_1436_p2[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        tmp_6_i_i_reg_1854 <= grp_fu_351_p2;
        tmp_9_i_i_reg_1859 <= grp_fu_355_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        tmp_8_i_i_reg_1849 <= grp_fu_362_p1;
        tmp_i_i_reg_1844 <= grp_fu_359_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_29_i_i_fu_1577_p2 == 1'd1))) begin
        tmp_8_reg_2078 <= tmp_8_fu_1592_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        x_assign_1_reg_1869 <= grp_fu_346_p2;
        x_assign_reg_1864 <= grp_fu_341_p2;
    end
end

always @ (*) begin
    if ((tmp_32_i_i_fu_1040_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state41 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state41 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_29_i_i_fu_1577_p2 == 1'd0)) begin
        ap_condition_pp1_exit_iter0_state47 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state47 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) & (((tmp_26_i_i_fu_998_p2 == 1'd0) & (tmp_23_i_i_reg_1894 == 1'd1)) | ((tmp_28_i_i_fu_966_p2 == 1'd0) & (tmp_23_i_i_reg_1894 == 1'd0)) | ((tmp_25_i_i_reg_1898 == 1'd0) & (tmp_23_i_i_reg_1894 == 1'd0))))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_32_i_i_reg_1955 == 1'd1))) begin
        ap_phi_mux_i_op_assign_3_phi_fu_301_p4 = j_1_reg_1959;
    end else begin
        ap_phi_mux_i_op_assign_3_phi_fu_301_p4 = i_op_assign_3_reg_297;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_32_i_i_reg_1955 == 1'd1))) begin
        ap_phi_mux_p_Val2_23_phi_fu_312_p4 = next_mul1_reg_1969;
    end else begin
        ap_phi_mux_p_Val2_23_phi_fu_312_p4 = p_Val2_23_reg_308;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        dst_cols_blk_n = dst_cols_full_n;
    end else begin
        dst_cols_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((dst_cols_full_n == 1'b0) | (dst_rows_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state39))) begin
        dst_cols_write = 1'b1;
    end else begin
        dst_cols_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        dst_rows_blk_n = dst_rows_full_n;
    end else begin
        dst_rows_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((dst_cols_full_n == 1'b0) | (dst_rows_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state39))) begin
        dst_rows_write = 1'b1;
    end else begin
        dst_rows_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        dst_val_address0 = tmp_17_cast_fu_1784_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dst_val_address0 = tmp_22_cast_fu_1509_p1;
    end else begin
        dst_val_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        dst_val_ce0 = 1'b1;
    end else begin
        dst_val_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        dst_val_d0 = src_val_q0;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dst_val_d0 = tmp_5_fu_1564_p3;
    end else begin
        dst_val_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_29_i_i_reg_2069 == 1'd1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_32_i_i_reg_1955_pp0_iter1_reg == 1'd1)))) begin
        dst_val_we0 = 1'b1;
    end else begin
        dst_val_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_646_ap_start = 1'b1;
    end else begin
        grp_fu_646_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_pp1_stage0) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_pp0_stage0) | (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_646_ce = 1'b0;
    end else begin
        grp_fu_646_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) & (((tmp_26_i_i_fu_998_p2 == 1'd0) & (tmp_23_i_i_reg_1894 == 1'd1)) | ((tmp_28_i_i_fu_966_p2 == 1'd0) & (tmp_23_i_i_reg_1894 == 1'd0)) | ((tmp_25_i_i_reg_1898 == 1'd0) & (tmp_23_i_i_reg_1894 == 1'd0))))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        src_cols_blk_n = src_cols_empty_n;
    end else begin
        src_cols_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state30))) begin
        src_cols_read = 1'b1;
    end else begin
        src_cols_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        src_rows_blk_n = src_rows_empty_n;
    end else begin
        src_rows_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state30))) begin
        src_rows_read = 1'b1;
    end else begin
        src_rows_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        src_val_address0 = tmp_21_cast_fu_1779_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        src_val_address0 = tmp_31_cast_fu_1451_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        src_val_address0 = tmp_26_cast_fu_1291_p1;
    end else begin
        src_val_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            src_val_address1 = tmp_32_cast_fu_1455_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_val_address1 = tmp_27_cast_fu_1329_p1;
        end else begin
            src_val_address1 = 'bx;
        end
    end else begin
        src_val_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        src_val_ce0 = 1'b1;
    end else begin
        src_val_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        src_val_ce1 = 1'b1;
    end else begin
        src_val_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            if ((~((src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            if ((~((dst_cols_full_n == 1'b0) | (dst_rows_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state40 : begin
            if (((1'b1 == ap_CS_fsm_state40) & (((tmp_26_i_i_fu_998_p2 == 1'd0) & (tmp_23_i_i_reg_1894 == 1'd1)) | ((tmp_28_i_i_fu_966_p2 == 1'd0) & (tmp_23_i_i_reg_1894 == 1'd0)) | ((tmp_25_i_i_reg_1898 == 1'd0) & (tmp_23_i_i_reg_1894 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b1 == ap_CS_fsm_state40) & (tmp_26_i_i_fu_998_p2 == 1'd1) & (tmp_23_i_i_reg_1894 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (tmp_32_i_i_fu_1040_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (tmp_32_i_i_fu_1040_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (tmp_29_i_i_fu_1577_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (tmp_29_i_i_fu_1577_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_413_p2 = (12'd1075 - tmp_4_i_i_fu_399_p1);

assign OP1_V_4_cast_i_i_fu_1397_p1 = $signed(p_Val2_i_i_fu_1387_p2);

assign OP1_V_5_cast_i_i_fu_1209_p1 = p_Val2_25_fu_1186_p2;

assign OP2_V_1_cast_i_i_fu_1205_p1 = p_Val2_27_fu_1199_p2;

assign OP2_V_cast_i_i_fu_1401_p1 = $signed(p_Val2_11_i_i_fu_1392_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd44];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state30 = ((src_cols_empty_n == 1'b0) | (src_rows_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state39 = ((dst_cols_full_n == 1'b0) | (dst_rows_full_n == 1'b0));
end

assign ap_block_state41_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign c0_2_fu_1170_p1 = p_9_i_i_fu_1162_p3;

assign c0_3_cast_i_i_fu_1174_p1 = p_9_i_i_fu_1162_p3;

assign c0_fu_1713_p1 = p_8_i_i_fu_1705_p3;

assign c1_0_1_cast_i_i_fu_1302_p1 = c1_0_1_i_i_fu_1296_p2;

assign c1_0_1_i_i_fu_1296_p2 = ($signed(17'd1) + $signed(c0_3_cast_i_i_fu_1174_p1));

assign dst_cols_din = ((p_Result_1_fu_799_p3[0:0] === 1'b1) ? p_Val2_i_i_i54_i_s_fu_925_p2 : p_Val2_8_fu_917_p3);

assign dst_rows_din = ((p_Result_s_fu_655_p3[0:0] === 1'b1) ? p_Val2_i_i_i_i_i_fu_781_p2 : p_Val2_3_fu_773_p3);

assign exp_tmp_V_fu_389_p4 = {{ireg_V_fu_373_p1[62:52]}};

assign i_1_fu_971_p2 = (i_op_assign_2_reg_275 + 31'd1);

assign i_fu_1003_p2 = (i_op_assign_reg_286 + 31'd1);

assign i_op_assign_1_cast_i_fu_1573_p1 = i_op_assign_1_reg_319;

assign i_op_assign_2_cast_i_fu_962_p1 = i_op_assign_2_reg_275;

assign i_op_assign_3_cast_i_fu_1036_p1 = ap_phi_mux_i_op_assign_3_phi_fu_301_p4;

assign i_op_assign_cast_i_i_fu_994_p1 = i_op_assign_reg_286;

assign icmp_fu_495_p2 = ((tmp_24_fu_485_p4 == 7'd0) ? 1'b1 : 1'b0);

assign ireg_V_fu_373_p1 = d_assign_fu_365_p1;

assign isNeg_1_fu_845_p3 = sh_assign_2_fu_839_p2[32'd8];

assign isNeg_fu_701_p3 = sh_assign_fu_695_p2[32'd8];

assign iscale_V_fu_940_p1 = grp_fu_646_p2[31:0];

assign j_1_fu_1045_p2 = (ap_phi_mux_i_op_assign_3_phi_fu_301_p4 + 31'd1);

assign j_fu_1582_p2 = (i_op_assign_1_reg_319 + 31'd1);

assign loc_V_1_fu_673_p1 = p_Val2_s_fu_652_p1[22:0];

assign loc_V_2_fu_807_p4 = {{p_Val2_6_fu_796_p1[30:23]}};

assign loc_V_3_fu_817_p1 = p_Val2_6_fu_796_p1[22:0];

assign loc_V_fu_663_p4 = {{p_Val2_s_fu_652_p1[30:23]}};

assign man_V_1_fu_430_p2 = (54'd0 - p_Result_2_fu_426_p1);

assign man_V_2_fu_436_p3 = ((isneg_reg_1794[0:0] === 1'b1) ? man_V_1_fu_430_p2 : p_Result_2_fu_426_p1);

assign newSel3_fu_606_p3 = ((sel_tmp9_fu_562_p2[0:0] === 1'b1) ? p_071_i_i_fu_515_p3 : tmp_23_fu_475_p1);

assign newSel5_fu_620_p3 = ((or_cond_fu_600_p2[0:0] === 1'b1) ? newSel_fu_592_p3 : newSel3_fu_606_p3);

assign newSel7_fu_634_p3 = ((or_cond6_fu_628_p2[0:0] === 1'b1) ? newSel5_fu_620_p3 : 32'd0);

assign newSel_fu_592_p3 = ((sel_tmp4_fu_586_p2[0:0] === 1'b1) ? tmp_21_i_i_fu_522_p2 : tmp_25_fu_511_p1);

assign next_mul1_fu_1060_p2 = ($signed(iscale_V_reg_1886) + $signed(ap_phi_mux_p_Val2_23_phi_fu_312_p4));

assign next_mul_fu_1597_p2 = ($signed(iscale_V_reg_1886) + $signed(p_Val2_15_reg_330));

assign or_cond4_fu_614_p2 = (sel_tmp9_fu_562_p2 | sel_tmp2_fu_533_p2);

assign or_cond6_fu_628_p2 = (or_cond_fu_600_p2 | or_cond4_fu_614_p2);

assign or_cond_fu_600_p2 = (sel_tmp_fu_568_p2 | sel_tmp4_fu_586_p2);

assign p_071_i_i_fu_515_p3 = ((isneg_reg_1794[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign p_1_i_i_fu_1096_p3 = ((tmp_41_i_i_fu_1084_p2[0:0] === 1'b1) ? ret_V_7_fu_1065_p4 : ret_V_9_fu_1090_p2);

assign p_2_i_i_fu_1697_p3 = ((tmp_36_i_i_fu_1685_p2[0:0] === 1'b1) ? ret_V_6_fu_1663_p4 : ret_V_8_fu_1691_p2);

assign p_3_i_i_fu_1154_p3 = ((tmp_42_i_i_fu_1142_p2[0:0] === 1'b1) ? ret_V_10_fu_1120_p4 : ret_V_11_fu_1148_p2);

assign p_6_i_i_fu_1641_p3 = ((tmp_36_fu_1611_p3[0:0] === 1'b1) ? p_i_i_fu_1633_p3 : ret_V_4_fu_1602_p4);

assign p_7_i_i_fu_1104_p3 = ((tmp_47_fu_1074_p3[0:0] === 1'b1) ? p_1_i_i_fu_1096_p3 : ret_V_7_fu_1065_p4);

assign p_8_i_i_fu_1705_p3 = ((tmp_38_fu_1673_p3[0:0] === 1'b1) ? p_2_i_i_fu_1697_p3 : ret_V_6_fu_1663_p4);

assign p_9_i_i_fu_1162_p3 = ((tmp_49_fu_1130_p3[0:0] === 1'b1) ? p_3_i_i_fu_1154_p3 : ret_V_10_fu_1120_p4);

assign p_Result_1_fu_799_p3 = p_Val2_6_fu_796_p1[32'd31];

assign p_Result_2_fu_426_p1 = tmp_1_i_i_fu_419_p3;

assign p_Result_s_fu_655_p3 = p_Val2_s_fu_652_p1[32'd31];

assign p_Val2_11_i_i_fu_1392_p2 = ($signed(32'd65536) - $signed(p_Val2_27_reg_1979));

assign p_Val2_13_fu_1021_p0 = i_op_assign_cast_i_i_fu_994_p1;

assign p_Val2_13_fu_1021_p2 = ($signed({{1'b0}, {p_Val2_13_fu_1021_p0}}) * $signed(iscale_V_reg_1886));

assign p_Val2_25_fu_1186_p2 = (p_Val2_2_reg_1926 - tmp_44_i_i_fu_1178_p3);

assign p_Val2_27_fu_1199_p2 = (ap_phi_mux_p_Val2_23_phi_fu_312_p4 - tmp_46_i_i_fu_1191_p3);

assign p_Val2_28_0_1_i_i_fu_1471_p1 = p_Val2_28_0_1_i_i_fu_1471_p10;

assign p_Val2_28_0_1_i_i_fu_1471_p10 = src_val_load_2_reg_2034;

assign p_Val2_28_0_1_i_i_fu_1471_p2 = ($signed(tmp_50_i_i_reg_2024) * $signed({{1'b0}, {p_Val2_28_0_1_i_i_fu_1471_p1}}));

assign p_Val2_28_0_i_i_fu_1463_p1 = p_Val2_28_0_i_i_fu_1463_p10;

assign p_Val2_28_0_i_i_fu_1463_p10 = reg_369;

assign p_Val2_28_0_i_i_fu_1463_p2 = ($signed(tmp_48_i_i_reg_2019) * $signed({{1'b0}, {p_Val2_28_0_i_i_fu_1463_p1}}));

assign p_Val2_28_1_1_i_i_fu_1480_p1 = p_Val2_28_1_1_i_i_fu_1480_p10;

assign p_Val2_28_1_1_i_i_fu_1480_p10 = src_val_q1;

assign p_Val2_28_1_1_i_i_fu_1480_p2 = ($signed(tmp_54_i_i_reg_1994) * $signed({{1'b0}, {p_Val2_28_1_1_i_i_fu_1480_p1}}));

assign p_Val2_28_1_i_i_fu_1489_p1 = p_Val2_28_1_i_i_fu_1489_p10;

assign p_Val2_28_1_i_i_fu_1489_p10 = reg_369;

assign p_Val2_28_1_i_i_fu_1489_p2 = ($signed(tmp_52_i_i_reg_2029) * $signed({{1'b0}, {p_Val2_28_1_i_i_fu_1489_p1}}));

assign p_Val2_28_fu_1405_p0 = OP2_V_cast_i_i_fu_1401_p1;

assign p_Val2_28_fu_1405_p1 = OP1_V_4_cast_i_i_fu_1397_p1;

assign p_Val2_28_fu_1405_p2 = ($signed(p_Val2_28_fu_1405_p0) * $signed(p_Val2_28_fu_1405_p1));

assign p_Val2_29_1_1_i_i_fu_1503_p2 = (tmp2_fu_1498_p2 + tmp_fu_1494_p2);

assign p_Val2_29_fu_1421_p0 = OP2_V_1_cast_i_i_reg_1984;

assign p_Val2_29_fu_1421_p1 = OP1_V_4_cast_i_i_fu_1397_p1;

assign p_Val2_29_fu_1421_p2 = ($signed(p_Val2_29_fu_1421_p0) * $signed(p_Val2_29_fu_1421_p1));

assign p_Val2_2_fu_989_p0 = i_op_assign_2_cast_i_fu_962_p1;

assign p_Val2_2_fu_989_p2 = ($signed({{1'b0}, {p_Val2_2_fu_989_p0}}) * $signed(iscale_V_reg_1886));

assign p_Val2_30_fu_1436_p0 = OP2_V_cast_i_i_fu_1401_p1;

assign p_Val2_30_fu_1436_p1 = OP1_V_5_cast_i_i_reg_1989;

assign p_Val2_30_fu_1436_p2 = ($signed(p_Val2_30_fu_1436_p0) * $signed(p_Val2_30_fu_1436_p1));

assign p_Val2_31_fu_1213_p0 = p_Val2_27_fu_1199_p2;

assign p_Val2_31_fu_1213_p1 = p_Val2_25_fu_1186_p2;

assign p_Val2_31_fu_1213_p2 = ($signed(p_Val2_31_fu_1213_p0) * $signed(p_Val2_31_fu_1213_p1));

assign p_Val2_33_fu_787_p3 = ((p_Result_s_fu_655_p3[0:0] === 1'b1) ? p_Val2_i_i_i_i_i_fu_781_p2 : p_Val2_3_fu_773_p3);

assign p_Val2_34_fu_931_p3 = ((p_Result_1_fu_799_p3[0:0] === 1'b1) ? p_Val2_i_i_i54_i_s_fu_925_p2 : p_Val2_8_fu_917_p3);

assign p_Val2_3_fu_773_p3 = ((isNeg_fu_701_p3[0:0] === 1'b1) ? tmp_6_fu_759_p1 : tmp_7_fu_763_p4);

assign p_Val2_6_fu_796_p1 = x_assign_1_reg_1869;

assign p_Val2_8_fu_917_p3 = ((isNeg_1_fu_845_p3[0:0] === 1'b1) ? tmp_s_fu_903_p1 : tmp_4_fu_907_p4);

assign p_Val2_i_i_fu_1387_p2 = ($signed(32'd65536) - $signed(p_Val2_25_reg_1974));

assign p_Val2_i_i_i54_i_s_fu_925_p2 = (32'd0 - p_Val2_8_fu_917_p3);

assign p_Val2_i_i_i_i_i_fu_781_p2 = (32'd0 - p_Val2_3_fu_773_p3);

assign p_Val2_s_fu_652_p1 = x_assign_reg_1864;

assign p_i_i_fu_1633_p3 = ((tmp_33_i_i_fu_1621_p2[0:0] === 1'b1) ? ret_V_4_fu_1602_p4 : ret_V_5_fu_1627_p2);

assign r0_2_fu_1112_p1 = p_7_i_i_fu_1104_p3;

assign r0_3_cast_i_i_fu_1116_p1 = p_7_i_i_fu_1104_p3;

assign r0_fu_1649_p1 = p_6_i_i_fu_1641_p3;

assign r1_cast_i_i_fu_1340_p1 = r1_i_i_fu_1334_p2;

assign r1_i_i_fu_1334_p2 = ($signed(17'd1) + $signed(r0_3_cast_i_i_fu_1116_p1));

assign r_V_1_fu_1657_p2 = ($signed(33'd32768) + $signed(tmp_34_i_i_fu_1653_p1));

assign r_V_2_fu_1516_p2 = ($signed(33'd32768) + $signed(tmp_55_i_i_fu_1513_p1));

assign r_V_fu_1030_p2 = ($signed(33'd32768) + $signed(tmp_31_i_i_fu_1026_p1));

assign ret_V_10_fu_1120_p4 = {{ap_phi_mux_p_Val2_23_phi_fu_312_p4[31:16]}};

assign ret_V_11_fu_1148_p2 = (16'd1 + ret_V_10_fu_1120_p4);

assign ret_V_4_fu_1602_p4 = {{r_V_reg_1948[32:16]}};

assign ret_V_5_fu_1627_p2 = (17'd1 + ret_V_4_fu_1602_p4);

assign ret_V_6_fu_1663_p4 = {{r_V_1_fu_1657_p2[32:16]}};

assign ret_V_7_fu_1065_p4 = {{p_Val2_2_reg_1926[31:16]}};

assign ret_V_8_fu_1691_p2 = (17'd1 + ret_V_6_fu_1663_p4);

assign ret_V_9_fu_1090_p2 = (16'd1 + ret_V_7_fu_1065_p4);

assign rev1_fu_1234_p2 = (slt1_fu_1229_p2 ^ 1'd1);

assign rev2_fu_1349_p2 = (slt2_fu_1344_p2 ^ 1'd1);

assign rev_fu_1722_p2 = (slt_fu_1717_p2 ^ 1'd1);

assign sel_tmp1_fu_528_p2 = (tmp_2_i_i_reg_1805 ^ 1'd1);

assign sel_tmp21_demorgan_fu_574_p2 = (tmp_10_i_i_fu_443_p2 | sel_tmp6_demorgan_fu_539_p2);

assign sel_tmp2_fu_533_p2 = (tmp_13_i_i_fu_470_p2 & sel_tmp1_fu_528_p2);

assign sel_tmp3_fu_580_p2 = (sel_tmp21_demorgan_fu_574_p2 ^ 1'd1);

assign sel_tmp4_fu_586_p2 = (sel_tmp3_fu_580_p2 & icmp_fu_495_p2);

assign sel_tmp6_demorgan_fu_539_p2 = (tmp_2_i_i_reg_1805 | tmp_13_i_i_fu_470_p2);

assign sel_tmp6_fu_544_p2 = (sel_tmp6_demorgan_fu_539_p2 ^ 1'd1);

assign sel_tmp7_fu_550_p2 = (tmp_10_i_i_fu_443_p2 & sel_tmp6_fu_544_p2);

assign sel_tmp8_fu_556_p2 = (tmp_15_i_i_fu_479_p2 ^ 1'd1);

assign sel_tmp9_fu_562_p2 = (sel_tmp8_fu_556_p2 & sel_tmp7_fu_550_p2);

assign sel_tmp_fu_568_p2 = (tmp_15_i_i_fu_479_p2 & sel_tmp7_fu_550_p2);

assign sh_amt_cast_i_i_fu_466_p1 = sh_amt_fu_458_p3;

assign sh_amt_fu_458_p3 = ((tmp_10_i_i_fu_443_p2[0:0] === 1'b1) ? tmp_11_i_i_fu_448_p2 : tmp_12_i_i_fu_453_p2);

assign sh_assign_1_fu_719_p3 = ((isNeg_fu_701_p3[0:0] === 1'b1) ? tmp_74_i_i_i_cast_i_s_fu_715_p1 : sh_assign_fu_695_p2);

assign sh_assign_1_i_i_i45_1_fu_875_p1 = sh_assign_3_fu_863_p3;

assign sh_assign_1_i_i_i45_s_fu_871_p1 = sh_assign_3_fu_863_p3;

assign sh_assign_1_i_i_i_ca_1_fu_731_p1 = sh_assign_1_fu_719_p3;

assign sh_assign_1_i_i_i_ca_fu_727_p1 = sh_assign_1_fu_719_p3;

assign sh_assign_2_fu_839_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i41_cast_i_fu_835_p1));

assign sh_assign_3_fu_863_p3 = ((isNeg_1_fu_845_p3[0:0] === 1'b1) ? tmp_74_i_i_i44_cast_s_fu_859_p1 : sh_assign_2_fu_839_p2);

assign sh_assign_fu_695_p2 = ($signed(9'd385) + $signed(tmp_i_i_i_i_cast_i_i_fu_691_p1));

assign slt1_fu_1229_p2 = (($signed(r0_2_fu_1112_p1) < $signed(rows_reg_1824)) ? 1'b1 : 1'b0);

assign slt2_fu_1344_p2 = (($signed(r1_cast_i_i_fu_1340_p1) < $signed(rows_reg_1824)) ? 1'b1 : 1'b0);

assign slt_fu_1717_p2 = (($signed(r0_fu_1649_p1) < $signed(rows_reg_1824)) ? 1'b1 : 1'b0);

assign start_out = real_start;

assign tmp2_fu_1498_p2 = (p_Val2_28_1_i_i_fu_1489_p2 + p_Val2_28_1_1_i_i_reg_2059);

assign tmp_10_fu_1055_p2 = (tmp_46_fu_1051_p1 + tmp_16_cast_reg_1921);

assign tmp_10_i_i_fu_443_p2 = (($signed(F2_reg_1811) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign tmp_11_fu_1285_p2 = (tmp_56_fu_1277_p3 + tmp_25_cast_fu_1255_p3);

assign tmp_11_i_i_fu_448_p2 = ($signed(12'd4080) + $signed(F2_reg_1811));

assign tmp_12_fu_751_p3 = tmp_76_i_i_i_i_i_fu_739_p2[32'd24];

assign tmp_12_i_i_fu_453_p2 = (12'd16 - F2_reg_1811);

assign tmp_13_fu_1323_p2 = (tmp_58_fu_1315_p3 + tmp_25_cast_fu_1255_p3);

assign tmp_13_i_i_fu_470_p2 = ((F2_reg_1811 == 12'd16) ? 1'b1 : 1'b0);

assign tmp_14_cast_fu_1013_p3 = {{tmp_33_fu_1009_p1}, {8'd0}};

assign tmp_14_fu_1375_p2 = (tmp_56_fu_1277_p3 + tmp_30_cast_fu_1367_p3);

assign tmp_15_fu_1381_p2 = (tmp_58_fu_1315_p3 + tmp_30_cast_fu_1367_p3);

assign tmp_15_i_i_fu_479_p2 = ((sh_amt_fu_458_p3 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_16_cast_fu_981_p3 = {{tmp_34_fu_977_p1}, {8'd0}};

assign tmp_16_fu_895_p3 = tmp_76_i_i_i47_i_i_fu_883_p2[32'd24];

assign tmp_17_cast_fu_1784_p1 = tmp_8_reg_2078;

assign tmp_18_fu_377_p1 = ireg_V_fu_373_p1[62:0];

assign tmp_18_i_i_fu_501_p1 = $unsigned(sh_amt_cast_i_i_fu_466_p1);

assign tmp_19_i_i_fu_505_p2 = $signed(man_V_2_fu_436_p3) >>> tmp_18_i_i_fu_501_p1;

assign tmp_1_fu_1540_p4 = {{r_V_2_fu_1516_p2[23:16]}};

assign tmp_1_i_i_fu_419_p3 = {{1'd1}, {tmp_20_reg_1800}};

assign tmp_20_cast_fu_1765_p3 = {{tmp_45_fu_1757_p3}, {8'd0}};

assign tmp_20_fu_403_p1 = ireg_V_fu_373_p1[51:0];

assign tmp_21_cast_fu_1779_p1 = $signed(tmp_9_fu_1773_p2);

assign tmp_21_i_i_fu_522_p2 = tmp_23_fu_475_p1 << sh_amt_cast_i_i_fu_466_p1;

assign tmp_22_cast_fu_1509_p1 = tmp_10_reg_1964_pp0_iter1_reg;

assign tmp_23_fu_475_p1 = man_V_2_fu_436_p3[31:0];

assign tmp_23_i_i_fu_944_p2 = ((method == 2'd0) ? 1'b1 : 1'b0);

assign tmp_24_fu_485_p4 = {{sh_amt_fu_458_p3[11:5]}};

assign tmp_25_cast_fu_1255_p3 = {{tmp_53_fu_1247_p3}, {8'd0}};

assign tmp_25_fu_511_p1 = tmp_19_i_i_fu_505_p2[31:0];

assign tmp_25_i_i_fu_950_p2 = ((method == 2'd1) ? 1'b1 : 1'b0);

assign tmp_26_cast_fu_1291_p1 = $signed(tmp_11_fu_1285_p2);

assign tmp_26_i_i_fu_998_p2 = (($signed(i_op_assign_cast_i_i_fu_994_p1) < $signed(p_Val2_33_reg_1874)) ? 1'b1 : 1'b0);

assign tmp_27_cast_fu_1329_p1 = $signed(tmp_13_fu_1323_p2);

assign tmp_28_i_i_fu_966_p2 = (($signed(i_op_assign_2_cast_i_fu_962_p1) < $signed(p_Val2_33_reg_1874)) ? 1'b1 : 1'b0);

assign tmp_29_fu_959_p1 = cols_reg_1834[17:0];

assign tmp_29_i_i_fu_1577_p2 = (($signed(i_op_assign_1_cast_i_fu_1573_p1) < $signed(p_Val2_34_reg_1880)) ? 1'b1 : 1'b0);

assign tmp_2_fu_1550_p2 = (8'd1 + tmp_1_fu_1540_p4);

assign tmp_2_i_i_fu_407_p2 = ((tmp_18_fu_377_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_30_cast_fu_1367_p3 = {{tmp_60_fu_1359_p3}, {8'd0}};

assign tmp_30_fu_956_p1 = cols_reg_1834[17:0];

assign tmp_31_cast_fu_1451_p1 = $signed(tmp_14_reg_2009);

assign tmp_31_i_i_fu_1026_p1 = $signed(p_Val2_13_fu_1021_p2);

assign tmp_32_cast_fu_1455_p1 = $signed(tmp_15_reg_2014);

assign tmp_32_i_i_fu_1040_p2 = (($signed(i_op_assign_3_cast_i_fu_1036_p1) < $signed(p_Val2_34_reg_1880)) ? 1'b1 : 1'b0);

assign tmp_33_fu_1009_p1 = i_op_assign_reg_286[9:0];

assign tmp_33_i_i_fu_1621_p2 = ((tmp_37_fu_1618_p1 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_34_fu_977_p1 = i_op_assign_2_reg_275[9:0];

assign tmp_34_i_i_fu_1653_p1 = p_Val2_15_reg_330;

assign tmp_35_fu_1588_p1 = i_op_assign_1_reg_319[17:0];

assign tmp_36_fu_1611_p3 = r_V_reg_1948[32'd32];

assign tmp_36_i_i_fu_1685_p2 = ((tmp_39_fu_1681_p1 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_37_fu_1618_p1 = r_V_reg_1948[15:0];

assign tmp_38_fu_1673_p3 = r_V_1_fu_1657_p2[32'd32];

assign tmp_38_i_i_fu_1728_p2 = (($signed(c0_fu_1713_p1) < $signed(cols_reg_1834)) ? 1'b1 : 1'b0);

assign tmp_39_fu_1681_p1 = r_V_1_fu_1657_p2[15:0];

assign tmp_3_fu_1556_p3 = ((tmp_56_i_i_fu_1534_p2[0:0] === 1'b1) ? tmp_1_fu_1540_p4 : tmp_2_fu_1550_p2);

assign tmp_40_fu_1733_p1 = p_8_i_i_fu_1705_p3;

assign tmp_41_fu_1737_p2 = ($signed(18'd262143) + $signed(tmp_29_reg_1907));

assign tmp_41_i_i_fu_1084_p2 = ((tmp_48_fu_1081_p1 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_42_fu_1742_p3 = ((tmp_38_i_i_fu_1728_p2[0:0] === 1'b1) ? tmp_40_fu_1733_p1 : tmp_41_fu_1737_p2);

assign tmp_42_i_i_fu_1142_p2 = ((tmp_50_fu_1138_p1 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_43_fu_1750_p1 = rows_reg_1824[9:0];

assign tmp_44_fu_1753_p1 = p_6_i_i_fu_1641_p3[9:0];

assign tmp_44_i_i_fu_1178_p3 = {{p_7_i_i_fu_1104_p3}, {16'd0}};

assign tmp_45_fu_1757_p3 = ((rev_fu_1722_p2[0:0] === 1'b1) ? tmp_43_fu_1750_p1 : tmp_44_fu_1753_p1);

assign tmp_46_fu_1051_p1 = ap_phi_mux_i_op_assign_3_phi_fu_301_p4[17:0];

assign tmp_46_i_i_fu_1191_p3 = {{p_9_i_i_fu_1162_p3}, {16'd0}};

assign tmp_47_fu_1074_p3 = p_Val2_2_reg_1926[32'd31];

assign tmp_48_fu_1081_p1 = p_Val2_2_reg_1926[15:0];

assign tmp_49_fu_1130_p3 = ap_phi_mux_p_Val2_23_phi_fu_312_p4[32'd31];

assign tmp_4_fu_907_p4 = {{tmp_77_i_i_i48_i_i_fu_889_p2[55:24]}};

assign tmp_4_i_i_fu_399_p1 = exp_tmp_V_fu_389_p4;

assign tmp_50_fu_1138_p1 = ap_phi_mux_p_Val2_23_phi_fu_312_p4[15:0];

assign tmp_51_fu_1240_p1 = rows_reg_1824[9:0];

assign tmp_52_fu_1243_p1 = p_7_i_i_fu_1104_p3[9:0];

assign tmp_53_fu_1247_p3 = ((rev1_fu_1234_p2[0:0] === 1'b1) ? tmp_51_fu_1240_p1 : tmp_52_fu_1243_p1);

assign tmp_54_fu_1268_p1 = p_9_i_i_fu_1162_p3;

assign tmp_55_fu_1272_p2 = ($signed(18'd262143) + $signed(tmp_30_reg_1902));

assign tmp_55_i_i_fu_1513_p1 = $signed(p_Val2_29_1_1_i_i_reg_2064);

assign tmp_56_fu_1277_p3 = ((tmp_81_0_i_i_fu_1263_p2[0:0] === 1'b1) ? tmp_54_fu_1268_p1 : tmp_55_fu_1272_p2);

assign tmp_56_i_i_fu_1534_p2 = ((tmp_62_fu_1530_p1 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_57_fu_1311_p1 = c1_0_1_i_i_fu_1296_p2;

assign tmp_58_fu_1315_p3 = ((tmp_81_0_1_i_i_fu_1306_p2[0:0] === 1'b1) ? tmp_57_fu_1311_p1 : tmp_55_fu_1272_p2);

assign tmp_59_fu_1355_p1 = r1_i_i_fu_1334_p2[9:0];

assign tmp_5_fu_1564_p3 = ((tmp_61_fu_1522_p3[0:0] === 1'b1) ? tmp_3_fu_1556_p3 : tmp_1_fu_1540_p4);

assign tmp_60_fu_1359_p3 = ((rev2_fu_1349_p2[0:0] === 1'b1) ? tmp_51_fu_1240_p1 : tmp_59_fu_1355_p1);

assign tmp_61_fu_1522_p3 = r_V_2_fu_1516_p2[32'd32];

assign tmp_62_fu_1530_p1 = r_V_2_fu_1516_p2[15:0];

assign tmp_6_fu_759_p1 = tmp_12_fu_751_p3;

assign tmp_73_i_i_i40_cast5_fu_831_p1 = tmp_73_i_i_i40_i_i_fu_821_p4;

assign tmp_73_i_i_i40_i_i_fu_821_p4 = {{{{1'd1}, {loc_V_3_fu_817_p1}}}, {1'd0}};

assign tmp_73_i_i_i_cast59_s_fu_687_p1 = tmp_73_i_i_i_i_i_fu_677_p4;

assign tmp_73_i_i_i_i_i_fu_677_p4 = {{{{1'd1}, {loc_V_1_fu_673_p1}}}, {1'd0}};

assign tmp_74_i_i_i44_cast_s_fu_859_p1 = $signed(tmp_74_i_i_i44_i_i_fu_853_p2);

assign tmp_74_i_i_i44_i_i_fu_853_p2 = (8'd127 - loc_V_2_fu_807_p4);

assign tmp_74_i_i_i_cast_i_s_fu_715_p1 = $signed(tmp_74_i_i_i_i_i_fu_709_p2);

assign tmp_74_i_i_i_i_i_fu_709_p2 = (8'd127 - loc_V_fu_663_p4);

assign tmp_75_i_i_i46_i_i_fu_879_p1 = $unsigned(sh_assign_1_i_i_i45_s_fu_871_p1);

assign tmp_75_i_i_i_i_i_fu_735_p1 = $unsigned(sh_assign_1_i_i_i_ca_fu_727_p1);

assign tmp_76_i_i_i47_i_i_fu_883_p2 = tmp_73_i_i_i40_i_i_fu_821_p4 >> sh_assign_1_i_i_i45_1_fu_875_p1;

assign tmp_76_i_i_i_i_i_fu_739_p2 = tmp_73_i_i_i_i_i_fu_677_p4 >> sh_assign_1_i_i_i_ca_1_fu_731_p1;

assign tmp_77_i_i_i48_i_i_fu_889_p2 = tmp_73_i_i_i40_cast5_fu_831_p1 << tmp_75_i_i_i46_i_i_fu_879_p1;

assign tmp_77_i_i_i_i_i_fu_745_p2 = tmp_73_i_i_i_cast59_s_fu_687_p1 << tmp_75_i_i_i_i_i_fu_735_p1;

assign tmp_7_fu_763_p4 = {{tmp_77_i_i_i_i_i_fu_745_p2[55:24]}};

assign tmp_81_0_1_i_i_fu_1306_p2 = (($signed(c1_0_1_cast_i_i_fu_1302_p1) < $signed(cols_reg_1834)) ? 1'b1 : 1'b0);

assign tmp_81_0_i_i_fu_1263_p2 = (($signed(c0_2_fu_1170_p1) < $signed(cols_reg_1834)) ? 1'b1 : 1'b0);

assign tmp_8_fu_1592_p2 = (tmp_35_fu_1588_p1 + tmp_14_cast_reg_1943);

assign tmp_9_fu_1773_p2 = (tmp_42_fu_1742_p3 + tmp_20_cast_fu_1765_p3);

assign tmp_fu_1494_p2 = (p_Val2_28_0_i_i_reg_2049 + p_Val2_28_0_1_i_i_reg_2054);

assign tmp_i_i_i_i41_cast_i_fu_835_p1 = loc_V_2_fu_807_p4;

assign tmp_i_i_i_i_cast_i_i_fu_691_p1 = loc_V_fu_663_p4;

assign tmp_s_fu_903_p1 = tmp_16_fu_895_p3;

always @ (posedge ap_clk) begin
    tmp_16_cast_reg_1921[7:0] <= 8'b00000000;
    tmp_14_cast_reg_1943[7:0] <= 8'b00000000;
end

endmodule //Resize
